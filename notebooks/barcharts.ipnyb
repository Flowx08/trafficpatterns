{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 613,
   "id": "3a527ecc",
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "import numpy as np\n",
    "import matplotlib.pyplot as plt\n",
    "import math\n",
    "import folium\n",
    "import utm #for gps coordinates conversion\n",
    "import math\n",
    "import json\n",
    "\n",
    "import seaborn as sns;\n",
    "\n",
    "#bokeh stuff\n",
    "from bokeh.plotting import figure, show\n",
    "from bokeh.models.widgets import Panel, Tabs\n",
    "from bokeh.layouts import layout\n",
    "from bokeh.models import ColumnDataSource\n",
    "from bokeh.models import Range1d\n",
    "from bokeh.embed import json_item\n",
    "from bokeh.palettes import Dark2_5 as palette\n",
    "from bokeh.palettes import brewer\n",
    "from bokeh.io import output_notebook\n",
    "from bokeh.io import curdoc\n",
    "from bokeh.transform import dodge\n",
    "from bokeh.models.tickers import FixedTicker\n",
    "import itertools"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "449c97c5",
   "metadata": {},
   "source": [
    "## Loading the dataset"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 614,
   "id": "d9c031e2",
   "metadata": {},
   "outputs": [],
   "source": [
    "df = pd.read_csv('./dataset/nyc_cop_lon.csv')\n",
    "df['time'] = pd.to_datetime(df['time'])\n",
    "df = df.drop(df[df['city'] == 'London'].index)\n",
    "\n",
    "cities = df['city'].unique()\n",
    "df_cph = df[df['city'] == 'Copenhagen']\n",
    "df_newyork = df[df['city'] == 'New-York']\n",
    "\n",
    "#print(df_cph.head(5))\n",
    "#print(df_newyork.head(5))\n",
    "#print(df_london.head(5))"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "883e9677",
   "metadata": {},
   "source": [
    "### Utility functions"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 615,
   "id": "dcacdf45",
   "metadata": {},
   "outputs": [],
   "source": [
    "def saveFigureToJson(figure, filename):\n",
    "    json_text = json.dumps(json_item(figure))\n",
    "    text_file = open(filename, \"w\")\n",
    "    text_file.write(json_text)\n",
    "    text_file.close()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 616,
   "id": "e933adec",
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "\n",
       "    <div class=\"bk-root\">\n",
       "        <a href=\"https://bokeh.org\" target=\"_blank\" class=\"bk-logo bk-logo-small bk-logo-notebook\"></a>\n",
       "        <span id=\"956790\">Loading BokehJS ...</span>\n",
       "    </div>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "application/javascript": [
       "\n",
       "(function(root) {\n",
       "  function now() {\n",
       "    return new Date();\n",
       "  }\n",
       "\n",
       "  var force = true;\n",
       "\n",
       "  if (typeof root._bokeh_onload_callbacks === \"undefined\" || force === true) {\n",
       "    root._bokeh_onload_callbacks = [];\n",
       "    root._bokeh_is_loading = undefined;\n",
       "  }\n",
       "\n",
       "  var JS_MIME_TYPE = 'application/javascript';\n",
       "  var HTML_MIME_TYPE = 'text/html';\n",
       "  var EXEC_MIME_TYPE = 'application/vnd.bokehjs_exec.v0+json';\n",
       "  var CLASS_NAME = 'output_bokeh rendered_html';\n",
       "\n",
       "  /**\n",
       "   * Render data to the DOM node\n",
       "   */\n",
       "  function render(props, node) {\n",
       "    var script = document.createElement(\"script\");\n",
       "    node.appendChild(script);\n",
       "  }\n",
       "\n",
       "  /**\n",
       "   * Handle when an output is cleared or removed\n",
       "   */\n",
       "  function handleClearOutput(event, handle) {\n",
       "    var cell = handle.cell;\n",
       "\n",
       "    var id = cell.output_area._bokeh_element_id;\n",
       "    var server_id = cell.output_area._bokeh_server_id;\n",
       "    // Clean up Bokeh references\n",
       "    if (id != null && id in Bokeh.index) {\n",
       "      Bokeh.index[id].model.document.clear();\n",
       "      delete Bokeh.index[id];\n",
       "    }\n",
       "\n",
       "    if (server_id !== undefined) {\n",
       "      // Clean up Bokeh references\n",
       "      var cmd = \"from bokeh.io.state import curstate; print(curstate().uuid_to_server['\" + server_id + \"'].get_sessions()[0].document.roots[0]._id)\";\n",
       "      cell.notebook.kernel.execute(cmd, {\n",
       "        iopub: {\n",
       "          output: function(msg) {\n",
       "            var id = msg.content.text.trim();\n",
       "            if (id in Bokeh.index) {\n",
       "              Bokeh.index[id].model.document.clear();\n",
       "              delete Bokeh.index[id];\n",
       "            }\n",
       "          }\n",
       "        }\n",
       "      });\n",
       "      // Destroy server and session\n",
       "      var cmd = \"import bokeh.io.notebook as ion; ion.destroy_server('\" + server_id + \"')\";\n",
       "      cell.notebook.kernel.execute(cmd);\n",
       "    }\n",
       "  }\n",
       "\n",
       "  /**\n",
       "   * Handle when a new output is added\n",
       "   */\n",
       "  function handleAddOutput(event, handle) {\n",
       "    var output_area = handle.output_area;\n",
       "    var output = handle.output;\n",
       "\n",
       "    // limit handleAddOutput to display_data with EXEC_MIME_TYPE content only\n",
       "    if ((output.output_type != \"display_data\") || (!Object.prototype.hasOwnProperty.call(output.data, EXEC_MIME_TYPE))) {\n",
       "      return\n",
       "    }\n",
       "\n",
       "    var toinsert = output_area.element.find(\".\" + CLASS_NAME.split(' ')[0]);\n",
       "\n",
       "    if (output.metadata[EXEC_MIME_TYPE][\"id\"] !== undefined) {\n",
       "      toinsert[toinsert.length - 1].firstChild.textContent = output.data[JS_MIME_TYPE];\n",
       "      // store reference to embed id on output_area\n",
       "      output_area._bokeh_element_id = output.metadata[EXEC_MIME_TYPE][\"id\"];\n",
       "    }\n",
       "    if (output.metadata[EXEC_MIME_TYPE][\"server_id\"] !== undefined) {\n",
       "      var bk_div = document.createElement(\"div\");\n",
       "      bk_div.innerHTML = output.data[HTML_MIME_TYPE];\n",
       "      var script_attrs = bk_div.children[0].attributes;\n",
       "      for (var i = 0; i < script_attrs.length; i++) {\n",
       "        toinsert[toinsert.length - 1].firstChild.setAttribute(script_attrs[i].name, script_attrs[i].value);\n",
       "        toinsert[toinsert.length - 1].firstChild.textContent = bk_div.children[0].textContent\n",
       "      }\n",
       "      // store reference to server id on output_area\n",
       "      output_area._bokeh_server_id = output.metadata[EXEC_MIME_TYPE][\"server_id\"];\n",
       "    }\n",
       "  }\n",
       "\n",
       "  function register_renderer(events, OutputArea) {\n",
       "\n",
       "    function append_mime(data, metadata, element) {\n",
       "      // create a DOM node to render to\n",
       "      var toinsert = this.create_output_subarea(\n",
       "        metadata,\n",
       "        CLASS_NAME,\n",
       "        EXEC_MIME_TYPE\n",
       "      );\n",
       "      this.keyboard_manager.register_events(toinsert);\n",
       "      // Render to node\n",
       "      var props = {data: data, metadata: metadata[EXEC_MIME_TYPE]};\n",
       "      render(props, toinsert[toinsert.length - 1]);\n",
       "      element.append(toinsert);\n",
       "      return toinsert\n",
       "    }\n",
       "\n",
       "    /* Handle when an output is cleared or removed */\n",
       "    events.on('clear_output.CodeCell', handleClearOutput);\n",
       "    events.on('delete.Cell', handleClearOutput);\n",
       "\n",
       "    /* Handle when a new output is added */\n",
       "    events.on('output_added.OutputArea', handleAddOutput);\n",
       "\n",
       "    /**\n",
       "     * Register the mime type and append_mime function with output_area\n",
       "     */\n",
       "    OutputArea.prototype.register_mime_type(EXEC_MIME_TYPE, append_mime, {\n",
       "      /* Is output safe? */\n",
       "      safe: true,\n",
       "      /* Index of renderer in `output_area.display_order` */\n",
       "      index: 0\n",
       "    });\n",
       "  }\n",
       "\n",
       "  // register the mime type if in Jupyter Notebook environment and previously unregistered\n",
       "  if (root.Jupyter !== undefined) {\n",
       "    var events = require('base/js/events');\n",
       "    var OutputArea = require('notebook/js/outputarea').OutputArea;\n",
       "\n",
       "    if (OutputArea.prototype.mime_types().indexOf(EXEC_MIME_TYPE) == -1) {\n",
       "      register_renderer(events, OutputArea);\n",
       "    }\n",
       "  }\n",
       "\n",
       "  \n",
       "  if (typeof (root._bokeh_timeout) === \"undefined\" || force === true) {\n",
       "    root._bokeh_timeout = Date.now() + 5000;\n",
       "    root._bokeh_failed_load = false;\n",
       "  }\n",
       "\n",
       "  var NB_LOAD_WARNING = {'data': {'text/html':\n",
       "     \"<div style='background-color: #fdd'>\\n\"+\n",
       "     \"<p>\\n\"+\n",
       "     \"BokehJS does not appear to have successfully loaded. If loading BokehJS from CDN, this \\n\"+\n",
       "     \"may be due to a slow or bad network connection. Possible fixes:\\n\"+\n",
       "     \"</p>\\n\"+\n",
       "     \"<ul>\\n\"+\n",
       "     \"<li>re-rerun `output_notebook()` to attempt to load from CDN again, or</li>\\n\"+\n",
       "     \"<li>use INLINE resources instead, as so:</li>\\n\"+\n",
       "     \"</ul>\\n\"+\n",
       "     \"<code>\\n\"+\n",
       "     \"from bokeh.resources import INLINE\\n\"+\n",
       "     \"output_notebook(resources=INLINE)\\n\"+\n",
       "     \"</code>\\n\"+\n",
       "     \"</div>\"}};\n",
       "\n",
       "  function display_loaded() {\n",
       "    var el = document.getElementById(\"956790\");\n",
       "    if (el != null) {\n",
       "      el.textContent = \"BokehJS is loading...\";\n",
       "    }\n",
       "    if (root.Bokeh !== undefined) {\n",
       "      if (el != null) {\n",
       "        el.textContent = \"BokehJS \" + root.Bokeh.version + \" successfully loaded.\";\n",
       "      }\n",
       "    } else if (Date.now() < root._bokeh_timeout) {\n",
       "      setTimeout(display_loaded, 100)\n",
       "    }\n",
       "  }\n",
       "\n",
       "\n",
       "  function run_callbacks() {\n",
       "    try {\n",
       "      root._bokeh_onload_callbacks.forEach(function(callback) {\n",
       "        if (callback != null)\n",
       "          callback();\n",
       "      });\n",
       "    } finally {\n",
       "      delete root._bokeh_onload_callbacks\n",
       "    }\n",
       "    console.debug(\"Bokeh: all callbacks have finished\");\n",
       "  }\n",
       "\n",
       "  function load_libs(css_urls, js_urls, callback) {\n",
       "    if (css_urls == null) css_urls = [];\n",
       "    if (js_urls == null) js_urls = [];\n",
       "\n",
       "    root._bokeh_onload_callbacks.push(callback);\n",
       "    if (root._bokeh_is_loading > 0) {\n",
       "      console.debug(\"Bokeh: BokehJS is being loaded, scheduling callback at\", now());\n",
       "      return null;\n",
       "    }\n",
       "    if (js_urls == null || js_urls.length === 0) {\n",
       "      run_callbacks();\n",
       "      return null;\n",
       "    }\n",
       "    console.debug(\"Bokeh: BokehJS not loaded, scheduling load and callback at\", now());\n",
       "    root._bokeh_is_loading = css_urls.length + js_urls.length;\n",
       "\n",
       "    function on_load() {\n",
       "      root._bokeh_is_loading--;\n",
       "      if (root._bokeh_is_loading === 0) {\n",
       "        console.debug(\"Bokeh: all BokehJS libraries/stylesheets loaded\");\n",
       "        run_callbacks()\n",
       "      }\n",
       "    }\n",
       "\n",
       "    function on_error(url) {\n",
       "      console.error(\"failed to load \" + url);\n",
       "    }\n",
       "\n",
       "    for (let i = 0; i < css_urls.length; i++) {\n",
       "      const url = css_urls[i];\n",
       "      const element = document.createElement(\"link\");\n",
       "      element.onload = on_load;\n",
       "      element.onerror = on_error.bind(null, url);\n",
       "      element.rel = \"stylesheet\";\n",
       "      element.type = \"text/css\";\n",
       "      element.href = url;\n",
       "      console.debug(\"Bokeh: injecting link tag for BokehJS stylesheet: \", url);\n",
       "      document.body.appendChild(element);\n",
       "    }\n",
       "\n",
       "    const hashes = {\"https://cdn.bokeh.org/bokeh/release/bokeh-2.3.2.min.js\": \"XypntL49z55iwGVUW4qsEu83zKL3XEcz0MjuGOQ9SlaaQ68X/g+k1FcioZi7oQAc\", \"https://cdn.bokeh.org/bokeh/release/bokeh-tables-2.3.2.min.js\": \"bEsM86IHGDTLCS0Zod8a8WM6Y4+lafAL/eSiyQcuPzinmWNgNO2/olUF0Z2Dkn5i\", \"https://cdn.bokeh.org/bokeh/release/bokeh-widgets-2.3.2.min.js\": \"TX0gSQTdXTTeScqxj6PVQxTiRW8DOoGVwinyi1D3kxv7wuxQ02XkOxv0xwiypcAH\"};\n",
       "\n",
       "    for (let i = 0; i < js_urls.length; i++) {\n",
       "      const url = js_urls[i];\n",
       "      const element = document.createElement('script');\n",
       "      element.onload = on_load;\n",
       "      element.onerror = on_error.bind(null, url);\n",
       "      element.async = false;\n",
       "      element.src = url;\n",
       "      if (url in hashes) {\n",
       "        element.crossOrigin = \"anonymous\";\n",
       "        element.integrity = \"sha384-\" + hashes[url];\n",
       "      }\n",
       "      console.debug(\"Bokeh: injecting script tag for BokehJS library: \", url);\n",
       "      document.head.appendChild(element);\n",
       "    }\n",
       "  };\n",
       "\n",
       "  function inject_raw_css(css) {\n",
       "    const element = document.createElement(\"style\");\n",
       "    element.appendChild(document.createTextNode(css));\n",
       "    document.body.appendChild(element);\n",
       "  }\n",
       "\n",
       "  \n",
       "  var js_urls = [\"https://cdn.bokeh.org/bokeh/release/bokeh-2.3.2.min.js\", \"https://cdn.bokeh.org/bokeh/release/bokeh-widgets-2.3.2.min.js\", \"https://cdn.bokeh.org/bokeh/release/bokeh-tables-2.3.2.min.js\"];\n",
       "  var css_urls = [];\n",
       "  \n",
       "\n",
       "  var inline_js = [\n",
       "    function(Bokeh) {\n",
       "      Bokeh.set_log_level(\"info\");\n",
       "    },\n",
       "    function(Bokeh) {\n",
       "    \n",
       "    \n",
       "    }\n",
       "  ];\n",
       "\n",
       "  function run_inline_js() {\n",
       "    \n",
       "    if (root.Bokeh !== undefined || force === true) {\n",
       "      \n",
       "    for (var i = 0; i < inline_js.length; i++) {\n",
       "      inline_js[i].call(root, root.Bokeh);\n",
       "    }\n",
       "    if (force === true) {\n",
       "        display_loaded();\n",
       "      }} else if (Date.now() < root._bokeh_timeout) {\n",
       "      setTimeout(run_inline_js, 100);\n",
       "    } else if (!root._bokeh_failed_load) {\n",
       "      console.log(\"Bokeh: BokehJS failed to load within specified timeout.\");\n",
       "      root._bokeh_failed_load = true;\n",
       "    } else if (force !== true) {\n",
       "      var cell = $(document.getElementById(\"956790\")).parents('.cell').data().cell;\n",
       "      cell.output_area.append_execute_result(NB_LOAD_WARNING)\n",
       "    }\n",
       "\n",
       "  }\n",
       "\n",
       "  if (root._bokeh_is_loading === 0) {\n",
       "    console.debug(\"Bokeh: BokehJS loaded, going straight to plotting\");\n",
       "    run_inline_js();\n",
       "  } else {\n",
       "    load_libs(css_urls, js_urls, function() {\n",
       "      console.debug(\"Bokeh: BokehJS plotting callback run at\", now());\n",
       "      run_inline_js();\n",
       "    });\n",
       "  }\n",
       "}(window));"
      ],
      "application/vnd.bokehjs_load.v0+json": "\n(function(root) {\n  function now() {\n    return new Date();\n  }\n\n  var force = true;\n\n  if (typeof root._bokeh_onload_callbacks === \"undefined\" || force === true) {\n    root._bokeh_onload_callbacks = [];\n    root._bokeh_is_loading = undefined;\n  }\n\n  \n\n  \n  if (typeof (root._bokeh_timeout) === \"undefined\" || force === true) {\n    root._bokeh_timeout = Date.now() + 5000;\n    root._bokeh_failed_load = false;\n  }\n\n  var NB_LOAD_WARNING = {'data': {'text/html':\n     \"<div style='background-color: #fdd'>\\n\"+\n     \"<p>\\n\"+\n     \"BokehJS does not appear to have successfully loaded. If loading BokehJS from CDN, this \\n\"+\n     \"may be due to a slow or bad network connection. Possible fixes:\\n\"+\n     \"</p>\\n\"+\n     \"<ul>\\n\"+\n     \"<li>re-rerun `output_notebook()` to attempt to load from CDN again, or</li>\\n\"+\n     \"<li>use INLINE resources instead, as so:</li>\\n\"+\n     \"</ul>\\n\"+\n     \"<code>\\n\"+\n     \"from bokeh.resources import INLINE\\n\"+\n     \"output_notebook(resources=INLINE)\\n\"+\n     \"</code>\\n\"+\n     \"</div>\"}};\n\n  function display_loaded() {\n    var el = document.getElementById(\"956790\");\n    if (el != null) {\n      el.textContent = \"BokehJS is loading...\";\n    }\n    if (root.Bokeh !== undefined) {\n      if (el != null) {\n        el.textContent = \"BokehJS \" + root.Bokeh.version + \" successfully loaded.\";\n      }\n    } else if (Date.now() < root._bokeh_timeout) {\n      setTimeout(display_loaded, 100)\n    }\n  }\n\n\n  function run_callbacks() {\n    try {\n      root._bokeh_onload_callbacks.forEach(function(callback) {\n        if (callback != null)\n          callback();\n      });\n    } finally {\n      delete root._bokeh_onload_callbacks\n    }\n    console.debug(\"Bokeh: all callbacks have finished\");\n  }\n\n  function load_libs(css_urls, js_urls, callback) {\n    if (css_urls == null) css_urls = [];\n    if (js_urls == null) js_urls = [];\n\n    root._bokeh_onload_callbacks.push(callback);\n    if (root._bokeh_is_loading > 0) {\n      console.debug(\"Bokeh: BokehJS is being loaded, scheduling callback at\", now());\n      return null;\n    }\n    if (js_urls == null || js_urls.length === 0) {\n      run_callbacks();\n      return null;\n    }\n    console.debug(\"Bokeh: BokehJS not loaded, scheduling load and callback at\", now());\n    root._bokeh_is_loading = css_urls.length + js_urls.length;\n\n    function on_load() {\n      root._bokeh_is_loading--;\n      if (root._bokeh_is_loading === 0) {\n        console.debug(\"Bokeh: all BokehJS libraries/stylesheets loaded\");\n        run_callbacks()\n      }\n    }\n\n    function on_error(url) {\n      console.error(\"failed to load \" + url);\n    }\n\n    for (let i = 0; i < css_urls.length; i++) {\n      const url = css_urls[i];\n      const element = document.createElement(\"link\");\n      element.onload = on_load;\n      element.onerror = on_error.bind(null, url);\n      element.rel = \"stylesheet\";\n      element.type = \"text/css\";\n      element.href = url;\n      console.debug(\"Bokeh: injecting link tag for BokehJS stylesheet: \", url);\n      document.body.appendChild(element);\n    }\n\n    const hashes = {\"https://cdn.bokeh.org/bokeh/release/bokeh-2.3.2.min.js\": \"XypntL49z55iwGVUW4qsEu83zKL3XEcz0MjuGOQ9SlaaQ68X/g+k1FcioZi7oQAc\", \"https://cdn.bokeh.org/bokeh/release/bokeh-tables-2.3.2.min.js\": \"bEsM86IHGDTLCS0Zod8a8WM6Y4+lafAL/eSiyQcuPzinmWNgNO2/olUF0Z2Dkn5i\", \"https://cdn.bokeh.org/bokeh/release/bokeh-widgets-2.3.2.min.js\": \"TX0gSQTdXTTeScqxj6PVQxTiRW8DOoGVwinyi1D3kxv7wuxQ02XkOxv0xwiypcAH\"};\n\n    for (let i = 0; i < js_urls.length; i++) {\n      const url = js_urls[i];\n      const element = document.createElement('script');\n      element.onload = on_load;\n      element.onerror = on_error.bind(null, url);\n      element.async = false;\n      element.src = url;\n      if (url in hashes) {\n        element.crossOrigin = \"anonymous\";\n        element.integrity = \"sha384-\" + hashes[url];\n      }\n      console.debug(\"Bokeh: injecting script tag for BokehJS library: \", url);\n      document.head.appendChild(element);\n    }\n  };\n\n  function inject_raw_css(css) {\n    const element = document.createElement(\"style\");\n    element.appendChild(document.createTextNode(css));\n    document.body.appendChild(element);\n  }\n\n  \n  var js_urls = [\"https://cdn.bokeh.org/bokeh/release/bokeh-2.3.2.min.js\", \"https://cdn.bokeh.org/bokeh/release/bokeh-widgets-2.3.2.min.js\", \"https://cdn.bokeh.org/bokeh/release/bokeh-tables-2.3.2.min.js\"];\n  var css_urls = [];\n  \n\n  var inline_js = [\n    function(Bokeh) {\n      Bokeh.set_log_level(\"info\");\n    },\n    function(Bokeh) {\n    \n    \n    }\n  ];\n\n  function run_inline_js() {\n    \n    if (root.Bokeh !== undefined || force === true) {\n      \n    for (var i = 0; i < inline_js.length; i++) {\n      inline_js[i].call(root, root.Bokeh);\n    }\n    if (force === true) {\n        display_loaded();\n      }} else if (Date.now() < root._bokeh_timeout) {\n      setTimeout(run_inline_js, 100);\n    } else if (!root._bokeh_failed_load) {\n      console.log(\"Bokeh: BokehJS failed to load within specified timeout.\");\n      root._bokeh_failed_load = true;\n    } else if (force !== true) {\n      var cell = $(document.getElementById(\"956790\")).parents('.cell').data().cell;\n      cell.output_area.append_execute_result(NB_LOAD_WARNING)\n    }\n\n  }\n\n  if (root._bokeh_is_loading === 0) {\n    console.debug(\"Bokeh: BokehJS loaded, going straight to plotting\");\n    run_inline_js();\n  } else {\n    load_libs(css_urls, js_urls, function() {\n      console.debug(\"Bokeh: BokehJS plotting callback run at\", now());\n      run_inline_js();\n    });\n  }\n}(window));"
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "output_notebook()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "9c7bac46",
   "metadata": {},
   "source": [
    "## Distribution of counted vehicles and bicycles in new york and copenaghen for each hour of the day\n",
    "In the following visualization, first for each hour of the day the total number of counted bycicles was computed and then the vector containing all the counted bikes was normalized to have total lenght 1. The same was done for the vehicle data. The idea is to analyze how the traffic is distributed through the day without taking into consideration the total counting numbers as they could be biased."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 617,
   "id": "19efdcf5",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "203376476.0\n",
      "2649561.0\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "WARNING:bokeh.core.validation.check:W-1005 (FIXED_SIZING_MODE): 'fixed' sizing mode requires width and height to be set: Column(id='956934', ...)\n",
      "WARNING:bokeh.core.validation.check:W-1005 (FIXED_SIZING_MODE): 'fixed' sizing mode requires width and height to be set: Column(id='956936', ...)\n",
      "WARNING:bokeh.core.validation.check:W-1005 (FIXED_SIZING_MODE): 'fixed' sizing mode requires width and height to be set: Row(id='956933', ...)\n",
      "WARNING:bokeh.core.validation.check:W-1005 (FIXED_SIZING_MODE): 'fixed' sizing mode requires width and height to be set: Row(id='956935', ...)\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "\n",
       "\n",
       "\n",
       "\n",
       "\n",
       "\n",
       "  <div class=\"bk-root\" id=\"693364e4-1bbc-49d1-8d7b-38594cecce0d\" data-root-id=\"956939\"></div>\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "application/javascript": [
       "(function(root) {\n",
       "  function embed_document(root) {\n",
       "    \n",
       "  var docs_json = {\"a6d07813-513a-4bf7-a579-90160c7af87e\":{\"defs\":[],\"roots\":{\"references\":[{\"attributes\":{\"tabs\":[{\"id\":\"956937\"},{\"id\":\"956938\"}]},\"id\":\"956939\",\"type\":\"Tabs\"},{\"attributes\":{\"text\":\"Distribution of counted vehicles and bycicles in New-York per hour\"},\"id\":\"956863\",\"type\":\"Title\"},{\"attributes\":{\"axis_label\":\"Hour\",\"formatter\":{\"id\":\"956905\"},\"major_label_orientation\":0.7853981633974483,\"major_label_policy\":{\"id\":\"956903\"},\"ticker\":{\"id\":\"956874\"}},\"id\":\"956873\",\"type\":\"CategoricalAxis\"},{\"attributes\":{},\"id\":\"956871\",\"type\":\"LinearScale\"},{\"attributes\":{\"factors\":[\"0\",\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\",\"10\",\"11\",\"12\",\"13\",\"14\",\"15\",\"16\",\"17\",\"18\",\"19\",\"20\",\"21\",\"22\",\"23\"]},\"id\":\"956865\",\"type\":\"FactorRange\"},{\"attributes\":{\"axis_label\":\"Distribution\",\"formatter\":{\"id\":\"956908\"},\"major_label_policy\":{\"id\":\"956906\"},\"ticker\":{\"id\":\"956877\"}},\"id\":\"956876\",\"type\":\"LinearAxis\"},{\"attributes\":{},\"id\":\"956885\",\"type\":\"HelpTool\"},{\"attributes\":{},\"id\":\"956869\",\"type\":\"CategoricalScale\"},{\"attributes\":{},\"id\":\"956867\",\"type\":\"DataRange1d\"},{\"attributes\":{},\"id\":\"956874\",\"type\":\"CategoricalTicker\"},{\"attributes\":{\"axis\":{\"id\":\"956873\"},\"ticker\":null},\"id\":\"956875\",\"type\":\"Grid\"},{\"attributes\":{\"data\":{\"count\":{\"__ndarray__\":\"iTBLS1XDvz/ZL22PHqK3P6pcXyywzLI/FtH3iMhnsD8wSQzYKzmxP0y6HpzbeLU/0aI0iaSzwT+IztpNjKLKP6vZs0xPnM4/GRprjD5bzT9YhQyY+dzMPwr4EJfOps0/I3tqVGW6zj+2IsnRsZXPPx+wrxqC0dA/L/bjaBC50T+ndw9138DRP5K8OCBjx9E/NhxR5LEj0T8bXHrVZOnOP7SZ0ZWTNss/vDtnTDnnxz/UJgFY9XHFP/WVqCa13sI/\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[24]},\"hour\":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23],\"index\":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23]},\"selected\":{\"id\":\"956910\"},\"selection_policy\":{\"id\":\"956909\"}},\"id\":\"956895\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"axis\":{\"id\":\"956876\"},\"dimension\":1,\"ticker\":null},\"id\":\"956879\",\"type\":\"Grid\"},{\"attributes\":{},\"id\":\"956877\",\"type\":\"BasicTicker\"},{\"attributes\":{},\"id\":\"956881\",\"type\":\"WheelZoomTool\"},{\"attributes\":{},\"id\":\"956880\",\"type\":\"PanTool\"},{\"attributes\":{\"overlay\":{\"id\":\"956886\"}},\"id\":\"956882\",\"type\":\"BoxZoomTool\"},{\"attributes\":{},\"id\":\"956883\",\"type\":\"SaveTool\"},{\"attributes\":{},\"id\":\"956884\",\"type\":\"ResetTool\"},{\"attributes\":{\"below\":[{\"id\":\"956802\"}],\"center\":[{\"id\":\"956804\"},{\"id\":\"956808\"},{\"id\":\"956841\"}],\"height\":400,\"left\":[{\"id\":\"956805\"}],\"renderers\":[{\"id\":\"956829\"},{\"id\":\"956847\"}],\"sizing_mode\":\"scale_width\",\"title\":{\"id\":\"956792\"},\"toolbar\":{\"id\":\"956816\"},\"toolbar_location\":null,\"width\":720,\"x_range\":{\"id\":\"956794\"},\"x_scale\":{\"id\":\"956798\"},\"y_range\":{\"id\":\"956796\"},\"y_scale\":{\"id\":\"956800\"}},\"id\":\"956791\",\"subtype\":\"Figure\",\"type\":\"Plot\"},{\"attributes\":{\"child\":{\"id\":\"956934\"},\"title\":\"Copenhagen\"},\"id\":\"956937\",\"type\":\"Panel\"},{\"attributes\":{\"fill_alpha\":{\"value\":0.9},\"fill_color\":{\"value\":\"#1b9e77\"},\"line_color\":{\"value\":\"#1b9e77\"},\"top\":{\"field\":\"count\"},\"width\":{\"value\":0.4},\"x\":{\"field\":\"hour\",\"transform\":{\"id\":\"956896\"}}},\"id\":\"956898\",\"type\":\"VBar\"},{\"attributes\":{\"children\":[{\"id\":\"956935\"}],\"sizing_mode\":\"fixed\"},\"id\":\"956936\",\"type\":\"Column\"},{\"attributes\":{\"children\":[{\"id\":\"956933\"}],\"sizing_mode\":\"fixed\"},\"id\":\"956934\",\"type\":\"Column\"},{\"attributes\":{\"children\":[{\"id\":\"956791\"}],\"sizing_mode\":\"fixed\"},\"id\":\"956933\",\"type\":\"Row\"},{\"attributes\":{\"child\":{\"id\":\"956936\"},\"title\":\"New-York\"},\"id\":\"956938\",\"type\":\"Panel\"},{\"attributes\":{\"fill_alpha\":{\"value\":0.9},\"fill_color\":{\"value\":\"#1b9e77\"},\"line_color\":{\"value\":\"#1b9e77\"},\"top\":{\"field\":\"count\"},\"width\":{\"value\":0.4},\"x\":{\"field\":\"hour\",\"transform\":{\"id\":\"956825\"}}},\"id\":\"956827\",\"type\":\"VBar\"},{\"attributes\":{\"label\":{\"value\":\"bycicles\"},\"renderers\":[{\"id\":\"956918\"}]},\"id\":\"956932\",\"type\":\"LegendItem\"},{\"attributes\":{\"bottom_units\":\"screen\",\"fill_alpha\":0.5,\"fill_color\":\"lightgrey\",\"left_units\":\"screen\",\"level\":\"overlay\",\"line_alpha\":1.0,\"line_color\":\"black\",\"line_dash\":[4,4],\"line_width\":2,\"right_units\":\"screen\",\"syncable\":false,\"top_units\":\"screen\"},\"id\":\"956886\",\"type\":\"BoxAnnotation\"},{\"attributes\":{},\"id\":\"956930\",\"type\":\"Selection\"},{\"attributes\":{\"label\":{\"value\":\"vehicles\"},\"renderers\":[{\"id\":\"956829\"}]},\"id\":\"956842\",\"type\":\"LegendItem\"},{\"attributes\":{\"source\":{\"id\":\"956824\"}},\"id\":\"956830\",\"type\":\"CDSView\"},{\"attributes\":{\"data\":{\"count\":{\"__ndarray__\":\"rQmOFvharT8X6YqGygukP7oerFgWWp8/fB+MYiApnD/F+nPuUzqgP3LM8sTFUKs/qTl18fUYvz/4MSh/Lk3PPyFCxEkJqdM/JPiJyyF4zT+k5p79sBvLPy649PXP08w/bUNz9Fzbzj9tBH5NNj7QP+b60lXGW9I/aqhQjW2l1T/obsUSlXjWP1yHwoStOtM/jScNiOz0zT/UD/6AE1fGP8O3cYSs28E/3CQAjh6lvz8Ro23+mRW8P2Eg/Fpj9rU/\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[24]},\"hour\":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23],\"index\":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23]},\"selected\":{\"id\":\"956839\"},\"selection_policy\":{\"id\":\"956838\"}},\"id\":\"956824\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"data_source\":{\"id\":\"956824\"},\"glyph\":{\"id\":\"956827\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"956828\"},\"view\":{\"id\":\"956830\"}},\"id\":\"956829\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"data\":{\"count\":{\"__ndarray__\":\"WkO7Imcctj8Q84CY/fSqPxE1i529i5w/5kDoKbOgkT+ZwmaHwb2JP17BCz3dh38/ehDsqNvnqD/b5FUcOP64P3/zgtSUac0/19LZw5E92D9zQIHjUabPP/xjVes3Ccc/0niEC1oQxz8r4+lNihTIP+v5SAA2oMk/52tfQ1p3zD9s4frkrSbPP62kFKjsS9I/fhT9ay0h2T/8UDt+LMXWP4xvhcwc0sw/FEEixQNPxD8QryC3eQTBP8lMhIdjb74/\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[24]},\"hour\":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23],\"index\":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23]},\"selected\":{\"id\":\"956930\"},\"selection_policy\":{\"id\":\"956929\"}},\"id\":\"956894\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"fill_alpha\":{\"value\":0.1},\"fill_color\":{\"value\":\"#1b9e77\"},\"line_alpha\":{\"value\":0.1},\"line_color\":{\"value\":\"#1b9e77\"},\"top\":{\"field\":\"count\"},\"width\":{\"value\":0.4},\"x\":{\"field\":\"hour\",\"transform\":{\"id\":\"956825\"}}},\"id\":\"956828\",\"type\":\"VBar\"},{\"attributes\":{\"text\":\"Distribution of counted vehicles and bycicles in Copenhagen per hour\"},\"id\":\"956792\",\"type\":\"Title\"},{\"attributes\":{\"range\":{\"id\":\"956794\"},\"value\":0.3},\"id\":\"956825\",\"type\":\"Dodge\"},{\"attributes\":{\"data\":{\"count\":{\"__ndarray__\":\"w8nVQtsZrT9db736VtijP/8HDjhjvJ4/5lsfU4aVmD9KsFkiSdOWPw84lxfTE6E/DAWwXovpuD86WtRnMovQP1KaafaQ4dY/t39Havs3yz8Qo3axK/HFP3SSRNM3qsc/kjACH6iUyT8uSrMfp3/LP4hYbkW5y9A//qCUASJx1j+mtZuVlC/ZP//1WIcx8NQ/qaJUurwpzz9seVhEPzPGPxpluQ89KcE/SRolXmBuvj9fEvhaSci6PzaxGlcIgrU/\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[24]},\"hour\":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23],\"index\":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23]},\"selected\":{\"id\":\"956859\"},\"selection_policy\":{\"id\":\"956858\"}},\"id\":\"956823\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"axis_label\":\"Hour\",\"formatter\":{\"id\":\"956834\"},\"major_label_orientation\":0.7853981633974483,\"major_label_policy\":{\"id\":\"956832\"},\"ticker\":{\"id\":\"956803\"}},\"id\":\"956802\",\"type\":\"CategoricalAxis\"},{\"attributes\":{\"below\":[{\"id\":\"956873\"}],\"center\":[{\"id\":\"956875\"},{\"id\":\"956879\"},{\"id\":\"956912\"}],\"height\":400,\"left\":[{\"id\":\"956876\"}],\"renderers\":[{\"id\":\"956900\"},{\"id\":\"956918\"}],\"sizing_mode\":\"scale_width\",\"title\":{\"id\":\"956863\"},\"toolbar\":{\"id\":\"956887\"},\"toolbar_location\":null,\"width\":720,\"x_range\":{\"id\":\"956865\"},\"x_scale\":{\"id\":\"956869\"},\"y_range\":{\"id\":\"956867\"},\"y_scale\":{\"id\":\"956871\"}},\"id\":\"956862\",\"subtype\":\"Figure\",\"type\":\"Plot\"},{\"attributes\":{},\"id\":\"956800\",\"type\":\"LinearScale\"},{\"attributes\":{\"factors\":[\"0\",\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\",\"10\",\"11\",\"12\",\"13\",\"14\",\"15\",\"16\",\"17\",\"18\",\"19\",\"20\",\"21\",\"22\",\"23\"]},\"id\":\"956794\",\"type\":\"FactorRange\"},{\"attributes\":{\"axis_label\":\"Distribution\",\"formatter\":{\"id\":\"956837\"},\"major_label_policy\":{\"id\":\"956835\"},\"ticker\":{\"id\":\"956806\"}},\"id\":\"956805\",\"type\":\"LinearAxis\"},{\"attributes\":{\"active_multi\":null,\"tools\":[{\"id\":\"956880\"},{\"id\":\"956881\"},{\"id\":\"956882\"},{\"id\":\"956883\"},{\"id\":\"956884\"},{\"id\":\"956885\"}]},\"id\":\"956887\",\"type\":\"Toolbar\"},{\"attributes\":{\"range\":{\"id\":\"956865\"},\"value\":0.3},\"id\":\"956896\",\"type\":\"Dodge\"},{\"attributes\":{},\"id\":\"956814\",\"type\":\"HelpTool\"},{\"attributes\":{},\"id\":\"956798\",\"type\":\"CategoricalScale\"},{\"attributes\":{},\"id\":\"956796\",\"type\":\"DataRange1d\"},{\"attributes\":{},\"id\":\"956803\",\"type\":\"CategoricalTicker\"},{\"attributes\":{\"axis\":{\"id\":\"956802\"},\"ticker\":null},\"id\":\"956804\",\"type\":\"Grid\"},{\"attributes\":{\"axis\":{\"id\":\"956805\"},\"dimension\":1,\"ticker\":null},\"id\":\"956808\",\"type\":\"Grid\"},{\"attributes\":{},\"id\":\"956806\",\"type\":\"BasicTicker\"},{\"attributes\":{},\"id\":\"956905\",\"type\":\"CategoricalTickFormatter\"},{\"attributes\":{\"active_multi\":null,\"tools\":[{\"id\":\"956809\"},{\"id\":\"956810\"},{\"id\":\"956811\"},{\"id\":\"956812\"},{\"id\":\"956813\"},{\"id\":\"956814\"}]},\"id\":\"956816\",\"type\":\"Toolbar\"},{\"attributes\":{},\"id\":\"956810\",\"type\":\"WheelZoomTool\"},{\"attributes\":{},\"id\":\"956809\",\"type\":\"PanTool\"},{\"attributes\":{\"overlay\":{\"id\":\"956815\"}},\"id\":\"956811\",\"type\":\"BoxZoomTool\"},{\"attributes\":{},\"id\":\"956812\",\"type\":\"SaveTool\"},{\"attributes\":{},\"id\":\"956813\",\"type\":\"ResetTool\"},{\"attributes\":{},\"id\":\"956903\",\"type\":\"AllLabels\"},{\"attributes\":{\"items\":[{\"id\":\"956842\"},{\"id\":\"956861\"}]},\"id\":\"956841\",\"type\":\"Legend\"},{\"attributes\":{},\"id\":\"956929\",\"type\":\"UnionRenderers\"},{\"attributes\":{},\"id\":\"956832\",\"type\":\"AllLabels\"},{\"attributes\":{},\"id\":\"956906\",\"type\":\"AllLabels\"},{\"attributes\":{},\"id\":\"956908\",\"type\":\"BasicTickFormatter\"},{\"attributes\":{},\"id\":\"956838\",\"type\":\"UnionRenderers\"},{\"attributes\":{},\"id\":\"956839\",\"type\":\"Selection\"},{\"attributes\":{\"bottom_units\":\"screen\",\"fill_alpha\":0.5,\"fill_color\":\"lightgrey\",\"left_units\":\"screen\",\"level\":\"overlay\",\"line_alpha\":1.0,\"line_color\":\"black\",\"line_dash\":[4,4],\"line_width\":2,\"right_units\":\"screen\",\"syncable\":false,\"top_units\":\"screen\"},\"id\":\"956815\",\"type\":\"BoxAnnotation\"},{\"attributes\":{},\"id\":\"956834\",\"type\":\"CategoricalTickFormatter\"},{\"attributes\":{\"range\":{\"id\":\"956794\"},\"value\":0.7},\"id\":\"956843\",\"type\":\"Dodge\"},{\"attributes\":{\"fill_alpha\":{\"value\":0.1},\"fill_color\":{\"value\":\"#d95f02\"},\"line_alpha\":{\"value\":0.1},\"line_color\":{\"value\":\"#d95f02\"},\"top\":{\"field\":\"count\"},\"width\":{\"value\":0.4},\"x\":{\"field\":\"hour\",\"transform\":{\"id\":\"956843\"}}},\"id\":\"956846\",\"type\":\"VBar\"},{\"attributes\":{\"fill_alpha\":{\"value\":0.1},\"fill_color\":{\"value\":\"#1b9e77\"},\"line_alpha\":{\"value\":0.1},\"line_color\":{\"value\":\"#1b9e77\"},\"top\":{\"field\":\"count\"},\"width\":{\"value\":0.4},\"x\":{\"field\":\"hour\",\"transform\":{\"id\":\"956896\"}}},\"id\":\"956899\",\"type\":\"VBar\"},{\"attributes\":{\"data_source\":{\"id\":\"956823\"},\"glyph\":{\"id\":\"956845\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"956846\"},\"view\":{\"id\":\"956848\"}},\"id\":\"956847\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"fill_alpha\":{\"value\":0.9},\"fill_color\":{\"value\":\"#d95f02\"},\"line_color\":{\"value\":\"#d95f02\"},\"top\":{\"field\":\"count\"},\"width\":{\"value\":0.4},\"x\":{\"field\":\"hour\",\"transform\":{\"id\":\"956843\"}}},\"id\":\"956845\",\"type\":\"VBar\"},{\"attributes\":{\"source\":{\"id\":\"956823\"}},\"id\":\"956848\",\"type\":\"CDSView\"},{\"attributes\":{\"label\":{\"value\":\"bycicles\"},\"renderers\":[{\"id\":\"956847\"}]},\"id\":\"956861\",\"type\":\"LegendItem\"},{\"attributes\":{},\"id\":\"956835\",\"type\":\"AllLabels\"},{\"attributes\":{},\"id\":\"956837\",\"type\":\"BasicTickFormatter\"},{\"attributes\":{},\"id\":\"956909\",\"type\":\"UnionRenderers\"},{\"attributes\":{},\"id\":\"956910\",\"type\":\"Selection\"},{\"attributes\":{},\"id\":\"956858\",\"type\":\"UnionRenderers\"},{\"attributes\":{},\"id\":\"956859\",\"type\":\"Selection\"},{\"attributes\":{\"children\":[{\"id\":\"956862\"}],\"sizing_mode\":\"fixed\"},\"id\":\"956935\",\"type\":\"Row\"},{\"attributes\":{\"range\":{\"id\":\"956865\"},\"value\":0.7},\"id\":\"956914\",\"type\":\"Dodge\"},{\"attributes\":{\"fill_alpha\":{\"value\":0.1},\"fill_color\":{\"value\":\"#d95f02\"},\"line_alpha\":{\"value\":0.1},\"line_color\":{\"value\":\"#d95f02\"},\"top\":{\"field\":\"count\"},\"width\":{\"value\":0.4},\"x\":{\"field\":\"hour\",\"transform\":{\"id\":\"956914\"}}},\"id\":\"956917\",\"type\":\"VBar\"},{\"attributes\":{\"data_source\":{\"id\":\"956894\"},\"glyph\":{\"id\":\"956916\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"956917\"},\"view\":{\"id\":\"956919\"}},\"id\":\"956918\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"fill_alpha\":{\"value\":0.9},\"fill_color\":{\"value\":\"#d95f02\"},\"line_color\":{\"value\":\"#d95f02\"},\"top\":{\"field\":\"count\"},\"width\":{\"value\":0.4},\"x\":{\"field\":\"hour\",\"transform\":{\"id\":\"956914\"}}},\"id\":\"956916\",\"type\":\"VBar\"},{\"attributes\":{\"source\":{\"id\":\"956895\"}},\"id\":\"956901\",\"type\":\"CDSView\"},{\"attributes\":{\"label\":{\"value\":\"vehicles\"},\"renderers\":[{\"id\":\"956900\"}]},\"id\":\"956913\",\"type\":\"LegendItem\"},{\"attributes\":{\"source\":{\"id\":\"956894\"}},\"id\":\"956919\",\"type\":\"CDSView\"},{\"attributes\":{\"data_source\":{\"id\":\"956895\"},\"glyph\":{\"id\":\"956898\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"956899\"},\"view\":{\"id\":\"956901\"}},\"id\":\"956900\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"items\":[{\"id\":\"956913\"},{\"id\":\"956932\"}]},\"id\":\"956912\",\"type\":\"Legend\"}],\"root_ids\":[\"956939\"]},\"title\":\"Bokeh Application\",\"version\":\"2.3.2\"}};\n",
       "  var render_items = [{\"docid\":\"a6d07813-513a-4bf7-a579-90160c7af87e\",\"root_ids\":[\"956939\"],\"roots\":{\"956939\":\"693364e4-1bbc-49d1-8d7b-38594cecce0d\"}}];\n",
       "  root.Bokeh.embed.embed_items_notebook(docs_json, render_items);\n",
       "\n",
       "  }\n",
       "  if (root.Bokeh !== undefined) {\n",
       "    embed_document(root);\n",
       "  } else {\n",
       "    var attempts = 0;\n",
       "    var timer = setInterval(function(root) {\n",
       "      if (root.Bokeh !== undefined) {\n",
       "        clearInterval(timer);\n",
       "        embed_document(root);\n",
       "      } else {\n",
       "        attempts++;\n",
       "        if (attempts > 100) {\n",
       "          clearInterval(timer);\n",
       "          console.log(\"Bokeh: ERROR: Unable to run BokehJS code because BokehJS library is missing\");\n",
       "        }\n",
       "      }\n",
       "    }, 10, root)\n",
       "  }\n",
       "})(window);"
      ],
      "application/vnd.bokehjs_exec.v0+json": ""
     },
     "metadata": {
      "application/vnd.bokehjs_exec.v0+json": {
       "id": "956939"
      }
     },
     "output_type": "display_data"
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "WARNING:bokeh.core.validation.check:W-1005 (FIXED_SIZING_MODE): 'fixed' sizing mode requires width and height to be set: Column(id='956934', ...)\n",
      "WARNING:bokeh.core.validation.check:W-1005 (FIXED_SIZING_MODE): 'fixed' sizing mode requires width and height to be set: Column(id='956936', ...)\n",
      "WARNING:bokeh.core.validation.check:W-1005 (FIXED_SIZING_MODE): 'fixed' sizing mode requires width and height to be set: Row(id='956933', ...)\n",
      "WARNING:bokeh.core.validation.check:W-1005 (FIXED_SIZING_MODE): 'fixed' sizing mode requires width and height to be set: Row(id='956935', ...)\n"
     ]
    }
   ],
   "source": [
    "figures = []\n",
    "for city in cities:\n",
    "    df_city = df[df['city'] == city]\n",
    "    total_bicycle_count = df_city[df_city['type'] == 'bicycle']['count'].sum()\n",
    "    total_vehicle_count = df_city[df_city['type'] == 'vehicle']['count'].sum()\n",
    "    print(total_bicycle_count)\n",
    "\n",
    "    hour_bycicle_count = []\n",
    "    hour_vehicle_count = []\n",
    "    for i in range(24):\n",
    "        hour_bycicle_count.append(df_city[(df_city['type'] == 'bicycle') & (df_city['hour'] == i)]['count'].sum())\n",
    "        hour_vehicle_count.append(df_city[(df_city['type'] == 'vehicle') & (df_city['hour'] == i)]['count'].sum())\n",
    "    hour_bycicle_count = np.array(hour_bycicle_count) \n",
    "    hour_vehicle_count = np.array(hour_vehicle_count)\n",
    "\n",
    "    #normalize\n",
    "    hour_bycicle_count = hour_bycicle_count / np.sqrt(np.sum(hour_bycicle_count**2))\n",
    "    hour_vehicle_count = hour_vehicle_count / np.sqrt(np.sum(hour_vehicle_count**2))\n",
    "\n",
    "    labels = np.arange(24)\n",
    "    labels = np.char.mod('%d', labels)\n",
    "\n",
    "    hourly_bycicles_df = pd.DataFrame({'hour': np.array(range(len(labels))), 'count': hour_bycicle_count})\n",
    "    hourly_vehicles_df = pd.DataFrame({'hour': np.array(range(len(labels))), 'count': hour_vehicle_count})\n",
    "\n",
    "    #colors has a list of colors which can be used in plots \n",
    "    colors = itertools.cycle(palette)\n",
    "    p = figure(title=\"Distribution of counted vehicles and bycicles in {} per hour\".format(city), \n",
    "           x_range=labels, toolbar_location=None, plot_width=720, plot_height=400)\n",
    "    p.sizing_mode = 'scale_width'\n",
    "    p.xaxis.major_label_orientation = math.pi/4\n",
    "    p.xaxis.axis_label = 'Hour'\n",
    "    p.yaxis.axis_label = 'Distribution'\n",
    "\n",
    "    hourly_bycicles_df = ColumnDataSource(hourly_bycicles_df)\n",
    "    hourly_vehicles_df = ColumnDataSource(hourly_vehicles_df)\n",
    "    c = next(colors)\n",
    "    b2 = p.vbar(x=dodge('hour', 0.3, range=p.x_range),  top=\"count\", width=0.4, source=hourly_vehicles_df, legend_label=\"vehicles\", fill_color=c, fill_alpha=.9, color=c)\n",
    "    c = next(colors)\n",
    "    b1 = p.vbar(x=dodge('hour', 0.7, range=p.x_range),  top=\"count\", width=0.4, source=hourly_bycicles_df, legend_label=\"bycicles\", fill_color=c, fill_alpha=.9, color=c)\n",
    "    figures.append(p)\n",
    "\n",
    "l1 = layout([[figures[0]]], sizing_mode='fixed')\n",
    "l2 = layout([[figures[1]]], sizing_mode='fixed')\n",
    "#l3 = layout([[figures[2]]],sizing_mode='fixed')\n",
    "\n",
    "tab1 = Panel(child=l1,title=cities[0])\n",
    "tab2 = Panel(child=l2,title=cities[1])\n",
    "#tab3 = Panel(child=l3,title=cities[2])\n",
    "#tabs = Tabs(tabs=[ tab1, tab2, tab3 ])\n",
    "tabs = Tabs(tabs=[ tab1, tab2 ])\n",
    "\n",
    "curdoc().add_root(tabs)\n",
    "show(tabs)\n",
    "saveFigureToJson(tabs, \"./visualizations/vis1.json\")"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "9678ae57",
   "metadata": {},
   "source": [
    "## Distribution of counted vehicles and bicycles in new york and copenaghen for each day of the week\n",
    "The sum of the total number of counted bicyckes was computed for each weekday and stored into a vector. The vector is than normalized to have lenght 1. The same procedure is done for the vehicle data and both for all the cities. The idea is to analyze how the traffic changes over the weekdays."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 618,
   "id": "e75e55a5",
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "WARNING:bokeh.core.validation.check:W-1005 (FIXED_SIZING_MODE): 'fixed' sizing mode requires width and height to be set: Column(id='963410', ...)\n",
      "WARNING:bokeh.core.validation.check:W-1005 (FIXED_SIZING_MODE): 'fixed' sizing mode requires width and height to be set: Column(id='963412', ...)\n",
      "WARNING:bokeh.core.validation.check:W-1005 (FIXED_SIZING_MODE): 'fixed' sizing mode requires width and height to be set: Row(id='963409', ...)\n",
      "WARNING:bokeh.core.validation.check:W-1005 (FIXED_SIZING_MODE): 'fixed' sizing mode requires width and height to be set: Row(id='963411', ...)\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "\n",
       "\n",
       "\n",
       "\n",
       "\n",
       "\n",
       "  <div class=\"bk-root\" id=\"b0f03382-51f0-4cc2-9b04-ae5c9ffd3f3d\" data-root-id=\"963415\"></div>\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "application/javascript": [
       "(function(root) {\n",
       "  function embed_document(root) {\n",
       "    \n",
       "  var docs_json = {\"22c6fa80-88b9-4806-8c82-54c9c9479440\":{\"defs\":[],\"roots\":{\"references\":[{\"attributes\":{\"tabs\":[{\"id\":\"963413\"},{\"id\":\"963414\"}]},\"id\":\"963415\",\"type\":\"Tabs\"},{\"attributes\":{\"label\":{\"value\":\"vehicles\"},\"renderers\":[{\"id\":\"963376\"}]},\"id\":\"963389\",\"type\":\"LegendItem\"},{\"attributes\":{\"fill_alpha\":{\"value\":0.9},\"fill_color\":{\"value\":\"#1b9e77\"},\"line_color\":{\"value\":\"#1b9e77\"},\"top\":{\"field\":\"count\"},\"width\":{\"value\":0.4},\"x\":{\"field\":\"weekday\",\"transform\":{\"id\":\"963372\"}}},\"id\":\"963374\",\"type\":\"VBar\"},{\"attributes\":{\"source\":{\"id\":\"963371\"}},\"id\":\"963377\",\"type\":\"CDSView\"},{\"attributes\":{\"data_source\":{\"id\":\"963371\"},\"glyph\":{\"id\":\"963374\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"963375\"},\"view\":{\"id\":\"963377\"}},\"id\":\"963376\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"label\":{\"value\":\"bycicles\"},\"renderers\":[{\"id\":\"963394\"}]},\"id\":\"963408\",\"type\":\"LegendItem\"},{\"attributes\":{\"fill_alpha\":{\"value\":0.1},\"fill_color\":{\"value\":\"#1b9e77\"},\"line_alpha\":{\"value\":0.1},\"line_color\":{\"value\":\"#1b9e77\"},\"top\":{\"field\":\"count\"},\"width\":{\"value\":0.4},\"x\":{\"field\":\"weekday\",\"transform\":{\"id\":\"963372\"}}},\"id\":\"963375\",\"type\":\"VBar\"},{\"attributes\":{\"text\":\"Distribution of counted vehicles and bycicles New-York per weekday\"},\"id\":\"963339\",\"type\":\"Title\"},{\"attributes\":{},\"id\":\"963310\",\"type\":\"CategoricalTickFormatter\"},{\"attributes\":{},\"id\":\"963347\",\"type\":\"LinearScale\"},{\"attributes\":{\"children\":[{\"id\":\"963409\"}],\"sizing_mode\":\"fixed\"},\"id\":\"963410\",\"type\":\"Column\"},{\"attributes\":{\"axis_label\":\"Weekday\",\"formatter\":{\"id\":\"963381\"},\"major_label_orientation\":0.7853981633974483,\"major_label_policy\":{\"id\":\"963379\"},\"ticker\":{\"id\":\"963350\"}},\"id\":\"963349\",\"type\":\"CategoricalAxis\"},{\"attributes\":{\"factors\":[\"Monday\",\"Tuesday\",\"Wendsday\",\"Thursday\",\"Friday\",\"Saturday\",\"Sunday\"]},\"id\":\"963341\",\"type\":\"FactorRange\"},{\"attributes\":{\"children\":[{\"id\":\"963411\"}],\"sizing_mode\":\"fixed\"},\"id\":\"963412\",\"type\":\"Column\"},{\"attributes\":{\"axis_label\":\"Distribution\",\"formatter\":{\"id\":\"963384\"},\"major_label_policy\":{\"id\":\"963382\"},\"ticker\":{\"id\":\"963353\"}},\"id\":\"963352\",\"type\":\"LinearAxis\"},{\"attributes\":{\"children\":[{\"id\":\"963267\"}],\"sizing_mode\":\"fixed\"},\"id\":\"963409\",\"type\":\"Row\"},{\"attributes\":{},\"id\":\"963361\",\"type\":\"HelpTool\"},{\"attributes\":{},\"id\":\"963345\",\"type\":\"CategoricalScale\"},{\"attributes\":{},\"id\":\"963343\",\"type\":\"DataRange1d\"},{\"attributes\":{},\"id\":\"963350\",\"type\":\"CategoricalTicker\"},{\"attributes\":{\"axis\":{\"id\":\"963349\"},\"ticker\":null},\"id\":\"963351\",\"type\":\"Grid\"},{\"attributes\":{\"data\":{\"count\":{\"__ndarray__\":\"F7i33wbF2j8TBo+nnvHZPxVup9CkRdk/xb2kLa6I2D9k3Zfj7sjYP6wwsBD8iNQ/hrNicOO61D8=\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[7]},\"index\":[0,1,2,3,4,5,6],\"weekday\":[0,1,2,3,4,5,6]},\"selected\":{\"id\":\"963406\"},\"selection_policy\":{\"id\":\"963405\"}},\"id\":\"963370\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"source\":{\"id\":\"963300\"}},\"id\":\"963306\",\"type\":\"CDSView\"},{\"attributes\":{\"items\":[{\"id\":\"963318\"},{\"id\":\"963337\"}]},\"id\":\"963317\",\"type\":\"Legend\"},{\"attributes\":{\"data_source\":{\"id\":\"963300\"},\"glyph\":{\"id\":\"963303\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"963304\"},\"view\":{\"id\":\"963306\"}},\"id\":\"963305\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"bottom_units\":\"screen\",\"fill_alpha\":0.5,\"fill_color\":\"lightgrey\",\"left_units\":\"screen\",\"level\":\"overlay\",\"line_alpha\":1.0,\"line_color\":\"black\",\"line_dash\":[4,4],\"line_width\":2,\"right_units\":\"screen\",\"syncable\":false,\"top_units\":\"screen\"},\"id\":\"963291\",\"type\":\"BoxAnnotation\"},{\"attributes\":{\"overlay\":{\"id\":\"963291\"}},\"id\":\"963287\",\"type\":\"BoxZoomTool\"},{\"attributes\":{},\"id\":\"963405\",\"type\":\"UnionRenderers\"},{\"attributes\":{},\"id\":\"963406\",\"type\":\"Selection\"},{\"attributes\":{\"axis\":{\"id\":\"963352\"},\"dimension\":1,\"ticker\":null},\"id\":\"963355\",\"type\":\"Grid\"},{\"attributes\":{},\"id\":\"963353\",\"type\":\"BasicTicker\"},{\"attributes\":{},\"id\":\"963357\",\"type\":\"WheelZoomTool\"},{\"attributes\":{},\"id\":\"963356\",\"type\":\"PanTool\"},{\"attributes\":{\"overlay\":{\"id\":\"963362\"}},\"id\":\"963358\",\"type\":\"BoxZoomTool\"},{\"attributes\":{},\"id\":\"963359\",\"type\":\"SaveTool\"},{\"attributes\":{},\"id\":\"963360\",\"type\":\"ResetTool\"},{\"attributes\":{},\"id\":\"963308\",\"type\":\"AllLabels\"},{\"attributes\":{\"range\":{\"id\":\"963270\"},\"value\":0.7},\"id\":\"963319\",\"type\":\"Dodge\"},{\"attributes\":{\"label\":{\"value\":\"vehicles\"},\"renderers\":[{\"id\":\"963305\"}]},\"id\":\"963318\",\"type\":\"LegendItem\"},{\"attributes\":{\"range\":{\"id\":\"963270\"},\"value\":0.3},\"id\":\"963301\",\"type\":\"Dodge\"},{\"attributes\":{\"children\":[{\"id\":\"963338\"}],\"sizing_mode\":\"fixed\"},\"id\":\"963411\",\"type\":\"Row\"},{\"attributes\":{\"child\":{\"id\":\"963410\"},\"title\":\"Copenhagen\"},\"id\":\"963413\",\"type\":\"Panel\"},{\"attributes\":{\"child\":{\"id\":\"963412\"},\"title\":\"New-York\"},\"id\":\"963414\",\"type\":\"Panel\"},{\"attributes\":{\"bottom_units\":\"screen\",\"fill_alpha\":0.5,\"fill_color\":\"lightgrey\",\"left_units\":\"screen\",\"level\":\"overlay\",\"line_alpha\":1.0,\"line_color\":\"black\",\"line_dash\":[4,4],\"line_width\":2,\"right_units\":\"screen\",\"syncable\":false,\"top_units\":\"screen\"},\"id\":\"963362\",\"type\":\"BoxAnnotation\"},{\"attributes\":{},\"id\":\"963314\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"label\":{\"value\":\"bycicles\"},\"renderers\":[{\"id\":\"963323\"}]},\"id\":\"963337\",\"type\":\"LegendItem\"},{\"attributes\":{},\"id\":\"963315\",\"type\":\"Selection\"},{\"attributes\":{\"data_source\":{\"id\":\"963299\"},\"glyph\":{\"id\":\"963321\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"963322\"},\"view\":{\"id\":\"963324\"}},\"id\":\"963323\",\"type\":\"GlyphRenderer\"},{\"attributes\":{},\"id\":\"963335\",\"type\":\"Selection\"},{\"attributes\":{\"fill_alpha\":{\"value\":0.9},\"fill_color\":{\"value\":\"#d95f02\"},\"line_color\":{\"value\":\"#d95f02\"},\"top\":{\"field\":\"count\"},\"width\":{\"value\":0.4},\"x\":{\"field\":\"weekday\",\"transform\":{\"id\":\"963319\"}}},\"id\":\"963321\",\"type\":\"VBar\"},{\"attributes\":{\"source\":{\"id\":\"963299\"}},\"id\":\"963324\",\"type\":\"CDSView\"},{\"attributes\":{\"active_multi\":null,\"tools\":[{\"id\":\"963356\"},{\"id\":\"963357\"},{\"id\":\"963358\"},{\"id\":\"963359\"},{\"id\":\"963360\"},{\"id\":\"963361\"}]},\"id\":\"963363\",\"type\":\"Toolbar\"},{\"attributes\":{},\"id\":\"963334\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"items\":[{\"id\":\"963389\"},{\"id\":\"963408\"}]},\"id\":\"963388\",\"type\":\"Legend\"},{\"attributes\":{\"fill_alpha\":{\"value\":0.1},\"fill_color\":{\"value\":\"#d95f02\"},\"line_alpha\":{\"value\":0.1},\"line_color\":{\"value\":\"#d95f02\"},\"top\":{\"field\":\"count\"},\"width\":{\"value\":0.4},\"x\":{\"field\":\"weekday\",\"transform\":{\"id\":\"963319\"}}},\"id\":\"963322\",\"type\":\"VBar\"},{\"attributes\":{},\"id\":\"963313\",\"type\":\"BasicTickFormatter\"},{\"attributes\":{},\"id\":\"963311\",\"type\":\"AllLabels\"},{\"attributes\":{\"fill_alpha\":{\"value\":0.9},\"fill_color\":{\"value\":\"#1b9e77\"},\"line_color\":{\"value\":\"#1b9e77\"},\"top\":{\"field\":\"count\"},\"width\":{\"value\":0.4},\"x\":{\"field\":\"weekday\",\"transform\":{\"id\":\"963301\"}}},\"id\":\"963303\",\"type\":\"VBar\"},{\"attributes\":{\"axis_label\":\"Weekday\",\"formatter\":{\"id\":\"963310\"},\"major_label_orientation\":0.7853981633974483,\"major_label_policy\":{\"id\":\"963308\"},\"ticker\":{\"id\":\"963279\"}},\"id\":\"963278\",\"type\":\"CategoricalAxis\"},{\"attributes\":{\"factors\":[\"Monday\",\"Tuesday\",\"Wendsday\",\"Thursday\",\"Friday\",\"Saturday\",\"Sunday\"]},\"id\":\"963270\",\"type\":\"FactorRange\"},{\"attributes\":{\"fill_alpha\":{\"value\":0.1},\"fill_color\":{\"value\":\"#1b9e77\"},\"line_alpha\":{\"value\":0.1},\"line_color\":{\"value\":\"#1b9e77\"},\"top\":{\"field\":\"count\"},\"width\":{\"value\":0.4},\"x\":{\"field\":\"weekday\",\"transform\":{\"id\":\"963301\"}}},\"id\":\"963304\",\"type\":\"VBar\"},{\"attributes\":{\"axis\":{\"id\":\"963278\"},\"ticker\":null},\"id\":\"963280\",\"type\":\"Grid\"},{\"attributes\":{},\"id\":\"963379\",\"type\":\"AllLabels\"},{\"attributes\":{},\"id\":\"963381\",\"type\":\"CategoricalTickFormatter\"},{\"attributes\":{},\"id\":\"963276\",\"type\":\"LinearScale\"},{\"attributes\":{},\"id\":\"963289\",\"type\":\"ResetTool\"},{\"attributes\":{},\"id\":\"963382\",\"type\":\"AllLabels\"},{\"attributes\":{},\"id\":\"963384\",\"type\":\"BasicTickFormatter\"},{\"attributes\":{},\"id\":\"963290\",\"type\":\"HelpTool\"},{\"attributes\":{},\"id\":\"963272\",\"type\":\"DataRange1d\"},{\"attributes\":{\"axis_label\":\"Distribution\",\"formatter\":{\"id\":\"963313\"},\"major_label_policy\":{\"id\":\"963311\"},\"ticker\":{\"id\":\"963282\"}},\"id\":\"963281\",\"type\":\"LinearAxis\"},{\"attributes\":{},\"id\":\"963279\",\"type\":\"CategoricalTicker\"},{\"attributes\":{},\"id\":\"963274\",\"type\":\"CategoricalScale\"},{\"attributes\":{\"text\":\"Distribution of counted vehicles and bycicles Copenhagen per weekday\"},\"id\":\"963268\",\"type\":\"Title\"},{\"attributes\":{\"axis\":{\"id\":\"963281\"},\"dimension\":1,\"ticker\":null},\"id\":\"963284\",\"type\":\"Grid\"},{\"attributes\":{},\"id\":\"963282\",\"type\":\"BasicTicker\"},{\"attributes\":{\"range\":{\"id\":\"963341\"},\"value\":0.3},\"id\":\"963372\",\"type\":\"Dodge\"},{\"attributes\":{\"data\":{\"count\":{\"__ndarray__\":\"1GRXAfk71j/ywtK5bQbUP9h+AOvoIdQ/Zihj5ADX1D/eI/GF6G7WP3stI0uSrd0/mjYt5LdB3z8=\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[7]},\"index\":[0,1,2,3,4,5,6],\"weekday\":[0,1,2,3,4,5,6]},\"selected\":{\"id\":\"963386\"},\"selection_policy\":{\"id\":\"963385\"}},\"id\":\"963371\",\"type\":\"ColumnDataSource\"},{\"attributes\":{},\"id\":\"963385\",\"type\":\"UnionRenderers\"},{\"attributes\":{},\"id\":\"963386\",\"type\":\"Selection\"},{\"attributes\":{\"data\":{\"count\":{\"__ndarray__\":\"KlsE6hJQ2T/fQWW2MHHaP/fUqGowz9o/YnsU+7rY2j8YxeYNJlrZP1yFVLhcjdM/1G1iYFkT0T8=\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[7]},\"index\":[0,1,2,3,4,5,6],\"weekday\":[0,1,2,3,4,5,6]},\"selected\":{\"id\":\"963335\"},\"selection_policy\":{\"id\":\"963334\"}},\"id\":\"963299\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"range\":{\"id\":\"963341\"},\"value\":0.7},\"id\":\"963390\",\"type\":\"Dodge\"},{\"attributes\":{},\"id\":\"963285\",\"type\":\"PanTool\"},{\"attributes\":{\"data\":{\"count\":{\"__ndarray__\":\"BlwLrPC22D+x6bXkaVzZP/44o6bLPto/yuPFvr4G2j8KWgufHn3ZP7df/oegJtU/hCAlzmB20z8=\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[7]},\"index\":[0,1,2,3,4,5,6],\"weekday\":[0,1,2,3,4,5,6]},\"selected\":{\"id\":\"963315\"},\"selection_policy\":{\"id\":\"963314\"}},\"id\":\"963300\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"below\":[{\"id\":\"963278\"}],\"center\":[{\"id\":\"963280\"},{\"id\":\"963284\"},{\"id\":\"963317\"}],\"height\":400,\"left\":[{\"id\":\"963281\"}],\"renderers\":[{\"id\":\"963305\"},{\"id\":\"963323\"}],\"sizing_mode\":\"scale_width\",\"title\":{\"id\":\"963268\"},\"toolbar\":{\"id\":\"963292\"},\"toolbar_location\":null,\"width\":720,\"x_range\":{\"id\":\"963270\"},\"x_scale\":{\"id\":\"963274\"},\"y_range\":{\"id\":\"963272\"},\"y_scale\":{\"id\":\"963276\"}},\"id\":\"963267\",\"subtype\":\"Figure\",\"type\":\"Plot\"},{\"attributes\":{\"data_source\":{\"id\":\"963370\"},\"glyph\":{\"id\":\"963392\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"963393\"},\"view\":{\"id\":\"963395\"}},\"id\":\"963394\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"below\":[{\"id\":\"963349\"}],\"center\":[{\"id\":\"963351\"},{\"id\":\"963355\"},{\"id\":\"963388\"}],\"height\":400,\"left\":[{\"id\":\"963352\"}],\"renderers\":[{\"id\":\"963376\"},{\"id\":\"963394\"}],\"sizing_mode\":\"scale_width\",\"title\":{\"id\":\"963339\"},\"toolbar\":{\"id\":\"963363\"},\"toolbar_location\":null,\"width\":720,\"x_range\":{\"id\":\"963341\"},\"x_scale\":{\"id\":\"963345\"},\"y_range\":{\"id\":\"963343\"},\"y_scale\":{\"id\":\"963347\"}},\"id\":\"963338\",\"subtype\":\"Figure\",\"type\":\"Plot\"},{\"attributes\":{\"active_multi\":null,\"tools\":[{\"id\":\"963285\"},{\"id\":\"963286\"},{\"id\":\"963287\"},{\"id\":\"963288\"},{\"id\":\"963289\"},{\"id\":\"963290\"}]},\"id\":\"963292\",\"type\":\"Toolbar\"},{\"attributes\":{\"fill_alpha\":{\"value\":0.1},\"fill_color\":{\"value\":\"#d95f02\"},\"line_alpha\":{\"value\":0.1},\"line_color\":{\"value\":\"#d95f02\"},\"top\":{\"field\":\"count\"},\"width\":{\"value\":0.4},\"x\":{\"field\":\"weekday\",\"transform\":{\"id\":\"963390\"}}},\"id\":\"963393\",\"type\":\"VBar\"},{\"attributes\":{},\"id\":\"963286\",\"type\":\"WheelZoomTool\"},{\"attributes\":{},\"id\":\"963288\",\"type\":\"SaveTool\"},{\"attributes\":{\"source\":{\"id\":\"963370\"}},\"id\":\"963395\",\"type\":\"CDSView\"},{\"attributes\":{\"fill_alpha\":{\"value\":0.9},\"fill_color\":{\"value\":\"#d95f02\"},\"line_color\":{\"value\":\"#d95f02\"},\"top\":{\"field\":\"count\"},\"width\":{\"value\":0.4},\"x\":{\"field\":\"weekday\",\"transform\":{\"id\":\"963390\"}}},\"id\":\"963392\",\"type\":\"VBar\"}],\"root_ids\":[\"963415\"]},\"title\":\"Bokeh Application\",\"version\":\"2.3.2\"}};\n",
       "  var render_items = [{\"docid\":\"22c6fa80-88b9-4806-8c82-54c9c9479440\",\"root_ids\":[\"963415\"],\"roots\":{\"963415\":\"b0f03382-51f0-4cc2-9b04-ae5c9ffd3f3d\"}}];\n",
       "  root.Bokeh.embed.embed_items_notebook(docs_json, render_items);\n",
       "\n",
       "  }\n",
       "  if (root.Bokeh !== undefined) {\n",
       "    embed_document(root);\n",
       "  } else {\n",
       "    var attempts = 0;\n",
       "    var timer = setInterval(function(root) {\n",
       "      if (root.Bokeh !== undefined) {\n",
       "        clearInterval(timer);\n",
       "        embed_document(root);\n",
       "      } else {\n",
       "        attempts++;\n",
       "        if (attempts > 100) {\n",
       "          clearInterval(timer);\n",
       "          console.log(\"Bokeh: ERROR: Unable to run BokehJS code because BokehJS library is missing\");\n",
       "        }\n",
       "      }\n",
       "    }, 10, root)\n",
       "  }\n",
       "})(window);"
      ],
      "application/vnd.bokehjs_exec.v0+json": ""
     },
     "metadata": {
      "application/vnd.bokehjs_exec.v0+json": {
       "id": "963415"
      }
     },
     "output_type": "display_data"
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "WARNING:bokeh.core.validation.check:W-1005 (FIXED_SIZING_MODE): 'fixed' sizing mode requires width and height to be set: Column(id='963410', ...)\n",
      "WARNING:bokeh.core.validation.check:W-1005 (FIXED_SIZING_MODE): 'fixed' sizing mode requires width and height to be set: Column(id='963412', ...)\n",
      "WARNING:bokeh.core.validation.check:W-1005 (FIXED_SIZING_MODE): 'fixed' sizing mode requires width and height to be set: Row(id='963409', ...)\n",
      "WARNING:bokeh.core.validation.check:W-1005 (FIXED_SIZING_MODE): 'fixed' sizing mode requires width and height to be set: Row(id='963411', ...)\n"
     ]
    }
   ],
   "source": [
    "figures = []\n",
    "for city in cities:\n",
    "    df_city = df[df['city'] == city]\n",
    "    week_bycicle_count = []\n",
    "    week_vehicle_count = []\n",
    "\n",
    "    for weekday in range(7):\n",
    "        week_bycicle_count.append(df_city[(df_city['type'] == 'bicycle') & (df_city['time'].dt.weekday == weekday)]['count'].sum())\n",
    "        week_vehicle_count.append(df_city[(df_city['type'] == 'vehicle') & (df_city['time'].dt.weekday == weekday)]['count'].sum())\n",
    "\n",
    "    #normalize\n",
    "    week_bycicle_count = np.array(week_bycicle_count)\n",
    "    week_vehicle_count = np.array(week_vehicle_count)\n",
    "    week_bycicle_count = week_bycicle_count / np.sqrt(np.sum(week_bycicle_count**2))\n",
    "    week_vehicle_count = week_vehicle_count / np.sqrt(np.sum(week_vehicle_count**2))\n",
    "    \n",
    "    labels = ['Monday', 'Tuesday', 'Wendsday', 'Thursday', 'Friday', 'Saturday', 'Sunday']\n",
    "\n",
    "    hourly_bycicles_df = pd.DataFrame({'weekday': np.array(range(len(labels))), 'count': week_bycicle_count})\n",
    "    hourly_vehicles_df = pd.DataFrame({'weekday': np.array(range(len(labels))), 'count': week_vehicle_count})\n",
    "\n",
    "    #colors has a list of colors which can be used in plots \n",
    "    colors = itertools.cycle(palette)\n",
    "    p = figure(title=\"Distribution of counted vehicles and bycicles {} per weekday\".format(city), \n",
    "           x_range=labels, toolbar_location=None, plot_width=720, plot_height=400)\n",
    "    p.sizing_mode = 'scale_width'\n",
    "    p.xaxis.major_label_orientation = math.pi/4\n",
    "    p.xaxis.axis_label = 'Weekday'\n",
    "    p.yaxis.axis_label = 'Distribution'\n",
    "\n",
    "    hourly_bycicles_df = ColumnDataSource(hourly_bycicles_df)\n",
    "    hourly_vehicles_df = ColumnDataSource(hourly_vehicles_df)\n",
    "    c = next(colors)\n",
    "    b2 = p.vbar(x=dodge('weekday', 0.3, range=p.x_range),  top=\"count\", width=0.4, source=hourly_vehicles_df, legend_label=\"vehicles\", fill_color=c, fill_alpha=.9, color=c)\n",
    "    c = next(colors)\n",
    "    b1 = p.vbar(x=dodge('weekday', 0.7, range=p.x_range),  top=\"count\", width=0.4, source=hourly_bycicles_df, legend_label=\"bycicles\", fill_color=c, fill_alpha=.9, color=c)\n",
    "    figures.append(p)\n",
    "\n",
    "l1 = layout([[figures[0]]], sizing_mode='fixed')\n",
    "l2 = layout([[figures[1]]], sizing_mode='fixed')\n",
    "#l3 = layout([[figures[2]]],sizing_mode='fixed')\n",
    "\n",
    "tab1 = Panel(child=l1,title=cities[0])\n",
    "tab2 = Panel(child=l2,title=cities[1])\n",
    "#tab3 = Panel(child=l3,title=cities[2])\n",
    "#tabs = Tabs(tabs=[ tab1, tab2, tab3 ])\n",
    "tabs = Tabs(tabs=[ tab1, tab2])\n",
    "\n",
    "curdoc().add_root(tabs)\n",
    "show(tabs)\n",
    "saveFigureToJson(tabs, \"./visualizations/vis2.json\")"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "8f781275",
   "metadata": {},
   "source": [
    "## Distribution of counted vehicles and bicycles in new york and copenaghen for each hour of the week\n",
    "The sum of the total number of counted bicyckes was computed for each hour of the week and stored into a vector. The vector is than normalized to have lenght 1. The same procedure is done for the vehicle data and both for all the cities. The idea is to analyze how the traffic changes over every hour of the week."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 619,
   "id": "8eee7894",
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "WARNING:bokeh.core.validation.check:W-1005 (FIXED_SIZING_MODE): 'fixed' sizing mode requires width and height to be set: Column(id='969910', ...)\n",
      "WARNING:bokeh.core.validation.check:W-1005 (FIXED_SIZING_MODE): 'fixed' sizing mode requires width and height to be set: Column(id='969912', ...)\n",
      "WARNING:bokeh.core.validation.check:W-1005 (FIXED_SIZING_MODE): 'fixed' sizing mode requires width and height to be set: Row(id='969909', ...)\n",
      "WARNING:bokeh.core.validation.check:W-1005 (FIXED_SIZING_MODE): 'fixed' sizing mode requires width and height to be set: Row(id='969911', ...)\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "\n",
       "\n",
       "\n",
       "\n",
       "\n",
       "\n",
       "  <div class=\"bk-root\" id=\"eef413a1-0d49-4764-8cca-e3a941225eb9\" data-root-id=\"969915\"></div>\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "application/javascript": [
       "(function(root) {\n",
       "  function embed_document(root) {\n",
       "    \n",
       "  var docs_json = {\"1f809e38-3dab-46f8-a591-91e278af508b\":{\"defs\":[],\"roots\":{\"references\":[{\"attributes\":{\"tabs\":[{\"id\":\"969913\"},{\"id\":\"969914\"}]},\"id\":\"969915\",\"type\":\"Tabs\"},{\"attributes\":{\"source\":{\"id\":\"969802\"}},\"id\":\"969808\",\"type\":\"CDSView\"},{\"attributes\":{\"range\":{\"id\":\"969841\"},\"value\":0.3},\"id\":\"969874\",\"type\":\"Dodge\"},{\"attributes\":{},\"id\":\"969881\",\"type\":\"AllLabels\"},{\"attributes\":{\"bottom_units\":\"screen\",\"fill_alpha\":0.5,\"fill_color\":\"lightgrey\",\"left_units\":\"screen\",\"level\":\"overlay\",\"line_alpha\":1.0,\"line_color\":\"black\",\"line_dash\":[4,4],\"line_width\":2,\"right_units\":\"screen\",\"syncable\":false,\"top_units\":\"screen\"},\"id\":\"969791\",\"type\":\"BoxAnnotation\"},{\"attributes\":{},\"id\":\"969905\",\"type\":\"UnionRenderers\"},{\"attributes\":{},\"id\":\"969883\",\"type\":\"AllLabels\"},{\"attributes\":{},\"id\":\"969906\",\"type\":\"Selection\"},{\"attributes\":{},\"id\":\"969885\",\"type\":\"BasicTickFormatter\"},{\"attributes\":{\"code\":\"\\n    if (index % 6 == 0)\\n    {\\n        return tick;\\n    }\\n    else\\n    {\\n        return \\\"\\\";\\n    }\\n    \"},\"id\":\"969799\",\"type\":\"FuncTickFormatter\"},{\"attributes\":{\"fill_alpha\":{\"value\":0.9},\"fill_color\":{\"value\":\"#1b9e77\"},\"line_color\":{\"value\":\"#1b9e77\"},\"top\":{\"field\":\"count\"},\"width\":{\"value\":0.4},\"x\":{\"field\":\"hour_of_week\",\"transform\":{\"id\":\"969874\"}}},\"id\":\"969876\",\"type\":\"VBar\"},{\"attributes\":{\"child\":{\"id\":\"969910\"},\"title\":\"Copenhagen\"},\"id\":\"969913\",\"type\":\"Panel\"},{\"attributes\":{\"child\":{\"id\":\"969912\"},\"title\":\"New-York\"},\"id\":\"969914\",\"type\":\"Panel\"},{\"attributes\":{\"children\":[{\"id\":\"969909\"}],\"sizing_mode\":\"fixed\"},\"id\":\"969910\",\"type\":\"Column\"},{\"attributes\":{},\"id\":\"969810\",\"type\":\"AllLabels\"},{\"attributes\":{\"children\":[{\"id\":\"969767\"}],\"sizing_mode\":\"fixed\"},\"id\":\"969909\",\"type\":\"Row\"},{\"attributes\":{\"children\":[{\"id\":\"969911\"}],\"sizing_mode\":\"fixed\"},\"id\":\"969912\",\"type\":\"Column\"},{\"attributes\":{\"label\":{\"value\":\"vehicles\"},\"renderers\":[{\"id\":\"969807\"}]},\"id\":\"969819\",\"type\":\"LegendItem\"},{\"attributes\":{\"items\":[{\"id\":\"969819\"},{\"id\":\"969837\"}]},\"id\":\"969818\",\"type\":\"Legend\"},{\"attributes\":{\"below\":[{\"id\":\"969849\"}],\"center\":[{\"id\":\"969851\"},{\"id\":\"969855\"},{\"id\":\"969889\"}],\"height\":400,\"left\":[{\"id\":\"969852\"}],\"renderers\":[{\"id\":\"969878\"},{\"id\":\"969895\"}],\"sizing_mode\":\"scale_width\",\"title\":{\"id\":\"969839\"},\"toolbar\":{\"id\":\"969863\"},\"toolbar_location\":null,\"width\":720,\"x_range\":{\"id\":\"969841\"},\"x_scale\":{\"id\":\"969845\"},\"y_range\":{\"id\":\"969843\"},\"y_scale\":{\"id\":\"969847\"}},\"id\":\"969838\",\"subtype\":\"Figure\",\"type\":\"Plot\"},{\"attributes\":{\"fill_alpha\":{\"value\":0.9},\"fill_color\":{\"value\":\"#1b9e77\"},\"line_color\":{\"value\":\"#1b9e77\"},\"top\":{\"field\":\"count\"},\"width\":{\"value\":0.4},\"x\":{\"field\":\"hour_of_week\",\"transform\":{\"id\":\"969803\"}}},\"id\":\"969805\",\"type\":\"VBar\"},{\"attributes\":{\"data_source\":{\"id\":\"969802\"},\"glyph\":{\"id\":\"969805\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"969806\"},\"view\":{\"id\":\"969808\"}},\"id\":\"969807\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"range\":{\"id\":\"969770\"},\"value\":0.3},\"id\":\"969803\",\"type\":\"Dodge\"},{\"attributes\":{\"fill_alpha\":{\"value\":0.1},\"fill_color\":{\"value\":\"#1b9e77\"},\"line_alpha\":{\"value\":0.1},\"line_color\":{\"value\":\"#1b9e77\"},\"top\":{\"field\":\"count\"},\"width\":{\"value\":0.4},\"x\":{\"field\":\"hour_of_week\",\"transform\":{\"id\":\"969803\"}}},\"id\":\"969806\",\"type\":\"VBar\"},{\"attributes\":{\"data\":{\"count\":{\"__ndarray__\":\"F23gvVKkoD8OOsNcRk+VPwaHzv7DBJA/PAoZKnKBjT+X43I32mOTP0f1HHPwqp8//xpFUpJYrj/7c/NCX1y3Pxi6Sr+T47k/wZuqGrSGtj+ANMHX32i0P0LAsU8VLbQ/afTZF6mJtD8o23sbXvK0P0crkR/g37Y/YBYhmPjLuD9wWWc3eRC5PxP7iPJtX7k/RaUvUjyAuD8Tb9LmP221P/lmAIX6F7I/JW78r9mYrj/fT6wfs82qPyxr67nrQKY//iLxSFGjnD9LSIydzxKTP+oTtv12GIw/zvKhsKHsiT8lmhYay4mQPwbYYGffaJw/52CyxcE0qz+ah5jSq/K0P7HpmdtvJrc/2p6ciDJrtD/V038+nH2yP6pLuVZbH7I/HJpDUY13sj+WBK2KPdqyPxYP+IN0abQ/8Qt3KmZCtj9aRfZ6FYK2P09qs4CaC7c/fzwXUdwgtj8hnTEcZx+zP0h68TmdWLA/8D3s7gCTrD9CXnOa18yoPxbqCaSItaQ/IinrtSR4nj9FBcNJyk2UPxLz1/XX9Y0/eqMeVPUPiz8oZ4AQ6PGQPxu9hPuB4Jw/34qqQqfgqj805IlZmbm0Pw7Lp0WXv7Y/wOKqr8YJtD8ZAnkzLFKyP/x/oIGzBrI/zN9dcJFnsj/QavWuvsqyP2wNehRieLQ/TOXLA5HstT/kQuFdVmG2P4PfGBnWAbc/jLRNQAQctj+kNrtGFquzP6hA0yOu17A/PnbGfbhorT/4MogNpumpP+rznO9b6aU/gJRUz202oD8OZuPiVg2WPyvnlUmw8o8/oMvmmEHkjD+6b8HXE/SRPxxUGab2lJ0/b948FG5sqz8fTsltQyG1P8bB2wfKT7c/SAKjQVeZtD8GitKSxnuyP6GmS6iIXLI/7xvPF+TXsj/95BNtCEWzP0mznaoz0rQ/M/nBOt6/tj/GIcgKqha3P/pK95xJhrc/knVpU+6+tj+/ri+q4nS0P00oKqwv9bE/wvPttGRprz/EwP6fL9irP5Z9gPUTxqc/NSXnxsWcpD+qA+TtFKqdPwCxVIp24JU/L0njEHOvkj8o8dzVUcWUP9XNKxZamZ4/2TxZzR3sqz/sQ4eCgK21Py9Vl5k1Erg/uJmCEYl0tT8C1Es7nqyzPyiQHXeFxLM/0DR+dD8vtD9Dn3f8sba0P6X2Pc8TprY/C5156tY3uD9zeLf1VUO4PwcDBA/Gf7g/hs/FMS+Ltz/O0wqHh4O1PzM/73MECbM/r32bPqTksD9EsrY26xyvP+9nA6Y4pqw/3KKmkn07sT88nQEKK5erPzkwKwuc/KY/a6QBJZmIoz+LhH4zQj+iP5ujrlSaKKE/AwHupa8wpj/MdcfJD5evPzq23U8r0LQ/GpyTi6NYuD/xCSV4CKm6P7arMs2DcLw/khmF4hEQvj9/wnamOMi+P+YqNoVrer8/F1OAGwrtvz9k1YfhhJ6/P+31Bl7tEr8/1c0rFlqZvj9js22Y90m9P2NYr3I6Abs/RCIALSCYuD/PkrqzmES3P0m6z1BY3LU/LvkAErVwtz/vxmo2iECzP9w1O7GAbLA/1l+zXfMrrD+/TPH0pBSpP49cH9T3YqM/cM8Kcg89pT9xXARvvmKsP4xVNVU0a7I/F7Lnq1mHtj8jwoCbC1K7P6tzMHLZi74/v/XafVZBwD/UEMsNFwvBP9vizYy9rcE/g1FijlnGwT831jetZGjBP9Y+n6FhvcA/zC2Wx+fBvz8gmFdEv3u8P/cceMqdirk/NTzKZbo1tj94Vdzw8HezP7j3u8JSI7E/\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[168]},\"hour_of_week\":[\"0\",\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\",\"10\",\"11\",\"12\",\"13\",\"14\",\"15\",\"16\",\"17\",\"18\",\"19\",\"20\",\"21\",\"22\",\"23\",\"24\",\"25\",\"26\",\"27\",\"28\",\"29\",\"30\",\"31\",\"32\",\"33\",\"34\",\"35\",\"36\",\"37\",\"38\",\"39\",\"40\",\"41\",\"42\",\"43\",\"44\",\"45\",\"46\",\"47\",\"48\",\"49\",\"50\",\"51\",\"52\",\"53\",\"54\",\"55\",\"56\",\"57\",\"58\",\"59\",\"60\",\"61\",\"62\",\"63\",\"64\",\"65\",\"66\",\"67\",\"68\",\"69\",\"70\",\"71\",\"72\",\"73\",\"74\",\"75\",\"76\",\"77\",\"78\",\"79\",\"80\",\"81\",\"82\",\"83\",\"84\",\"85\",\"86\",\"87\",\"88\",\"89\",\"90\",\"91\",\"92\",\"93\",\"94\",\"95\",\"96\",\"97\",\"98\",\"99\",\"100\",\"101\",\"102\",\"103\",\"104\",\"105\",\"106\",\"107\",\"108\",\"109\",\"110\",\"111\",\"112\",\"113\",\"114\",\"115\",\"116\",\"117\",\"118\",\"119\",\"120\",\"121\",\"122\",\"123\",\"124\",\"125\",\"126\",\"127\",\"128\",\"129\",\"130\",\"131\",\"132\",\"133\",\"134\",\"135\",\"136\",\"137\",\"138\",\"139\",\"140\",\"141\",\"142\",\"143\",\"144\",\"145\",\"146\",\"147\",\"148\",\"149\",\"150\",\"151\",\"152\",\"153\",\"154\",\"155\",\"156\",\"157\",\"158\",\"159\",\"160\",\"161\",\"162\",\"163\",\"164\",\"165\",\"166\",\"167\"],\"index\":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167]},\"selected\":{\"id\":\"969887\"},\"selection_policy\":{\"id\":\"969886\"}},\"id\":\"969873\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"text\":\"Distribution of counted vehicles and bycicles in Copenhagen per hour of the week\"},\"id\":\"969768\",\"type\":\"Title\"},{\"attributes\":{\"data\":{\"count\":{\"__ndarray__\":\"gPpVTq25jD8jBH2F9uqBP9YmIBl1XXo/HQHiSG+jdT8QKrrNBCF4P4ZJISh5Tok/ha+qjJ6TpT/cXkdrQMW9P6r4hAbKccQ/O2X5vbdTtj+n89b0/x2wP+p18ioJDrE/VYlxq/LSsj/IT0wCXUy0P9AZfNHzsrk/Cr1XqLJZwj9VMWeszGPFP9WECYISQcE/eY/0O5sEuD/ThS3sOnKwP7bPEDwmP6k/EUtdScyjpj+pMLVPHfOiPz7pRMC3d5s/Rqi2oYIyjz8kos9W6LWCP4MQWkHtq3o/t98srzAOdj+iEhc2SAh4P8wIl+M3HYk/eqPCshMrpj+e92LF2qG+P9AibfVbEsU/HVQUud43tz9QukE8HCuxP6oMr4xk9rE/sVUCjvxDsz8AAXvrUb60Pz1n3ItePro/bSAxSC3Fwj+y/mRFqQvGP11/Qa8a/cE/FqYoKp+guT9AAyafQAqyP2n9ko4Ymas/ZyjPbdiiqD/vKoHxQnqlPyTF9U70IJ8/9F739dEakz+/PQJU4TqHP2WkHvu0o4A/ywbc29bKeT+DFJHQ9Il7P7IbDHDj0oo/r6flQe/6pT92hiCnmjy+P7nroOq8xMQ/axgx+0Jhtz9AGUch6JOxP+M+Nm7wirI/EIjL/Oecsz+FYyj3avW0P/Ljy9IdS7o/kBdZgPDPwj+MxlkAOvPFPwZla+4lEsI/bfAbb8geuj+Z8E0QAm2yP64SEBWdcqw/ImDkuEl+qT+M1WMWYlmmP/7LfMKooaA/QXnJCg3+kz8nXCp0hZ2IP6jkjskLs4E/vpMcl9vPej+tJWZTIZN7PxX8iwSHCYo/wbbDsfF4pT98OSqFLKC9PyNH0ZcntcQ/Ih+SJEeItz91v9SrePGxP0zKMaegvbI/skgjcnrasz/MLqtcck21P5EYfOmjoro/EjRMptiuwj8iSwgnL5PFP+FInD4+3ME/bvY2gqh3uj8yS8cy+JyyPyCG4XcPgKw/vY9BF/ZPqT9I7BRmxnimP1lmXpWUVaE/YtxqHT4slT8+039NMkyLP203Bvd0B4Q/Zk55fn3Dfz/uC08wveV9P+aLD2tw84k/v0HeifhKpD9ZylJMO8C7P41bYQoFIcM/zjBcTaCStT/ALtv5lAuxP+bRl75rdLI/7nh2rRsntD/AAzceoxK2Pyx/pqbA/bs/vU9nBisuwj8et9NEz9XCP7dO1vKhp74/TTzQYN54tz/oUHQvXAuxP8joF9KYy6k/JP1v5WYGpj8c7TPtbCikPz3KXri0Z6M/Dhg+rInNnz+hA16tIDGYP3jIsOtIppM/27hmYMmSjj9LQabOdAGIPxkt5cwD8IY/76lHXvBylj/0MKc7AdSoP1+liHC8lLE/zUC8XyYBrT+L+IrEn1SuP+mM0fCDXbE/lhjIDKCKsj+fIIzPV5+zP+aBL9ztuLU/KIvbrNW7uD9dLwAo9Be6P0WTLFOaZrc/Iy513xcYsz/BBMEYmhKsP+CSQ7GafKY/VjRHiUSpoz/0YA4NVcuhP9ooCN+NfKA/bw3ZnUWEnD90+ahCuJaWP8+A45RiaZM/kYvIkBVKkD+TYOZUFH6LP9ajIh3Ahog/2Or4dgZVlD/ExLTfEn2lP05gy1Yy2K0/ZxWDRoePqD+WfDju3v6oP8e1imMxnaw/lNjr2rQWsD/NKr1kWEOxP55pnzCKMrM/suif0iPgtT9mTYoTY+i2P1CKVpVgPbQ/dksLrVFrsD8D/HpLEn2oP1eP3rbBfKM/DqHL8BiqoT8BPpSE6bWePwbqc8kKOpg/\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[168]},\"hour_of_week\":[\"0\",\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\",\"10\",\"11\",\"12\",\"13\",\"14\",\"15\",\"16\",\"17\",\"18\",\"19\",\"20\",\"21\",\"22\",\"23\",\"24\",\"25\",\"26\",\"27\",\"28\",\"29\",\"30\",\"31\",\"32\",\"33\",\"34\",\"35\",\"36\",\"37\",\"38\",\"39\",\"40\",\"41\",\"42\",\"43\",\"44\",\"45\",\"46\",\"47\",\"48\",\"49\",\"50\",\"51\",\"52\",\"53\",\"54\",\"55\",\"56\",\"57\",\"58\",\"59\",\"60\",\"61\",\"62\",\"63\",\"64\",\"65\",\"66\",\"67\",\"68\",\"69\",\"70\",\"71\",\"72\",\"73\",\"74\",\"75\",\"76\",\"77\",\"78\",\"79\",\"80\",\"81\",\"82\",\"83\",\"84\",\"85\",\"86\",\"87\",\"88\",\"89\",\"90\",\"91\",\"92\",\"93\",\"94\",\"95\",\"96\",\"97\",\"98\",\"99\",\"100\",\"101\",\"102\",\"103\",\"104\",\"105\",\"106\",\"107\",\"108\",\"109\",\"110\",\"111\",\"112\",\"113\",\"114\",\"115\",\"116\",\"117\",\"118\",\"119\",\"120\",\"121\",\"122\",\"123\",\"124\",\"125\",\"126\",\"127\",\"128\",\"129\",\"130\",\"131\",\"132\",\"133\",\"134\",\"135\",\"136\",\"137\",\"138\",\"139\",\"140\",\"141\",\"142\",\"143\",\"144\",\"145\",\"146\",\"147\",\"148\",\"149\",\"150\",\"151\",\"152\",\"153\",\"154\",\"155\",\"156\",\"157\",\"158\",\"159\",\"160\",\"161\",\"162\",\"163\",\"164\",\"165\",\"166\",\"167\"],\"index\":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167]},\"selected\":{\"id\":\"969835\"},\"selection_policy\":{\"id\":\"969834\"}},\"id\":\"969801\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"axis_label\":\"Hour of week\",\"formatter\":{\"id\":\"969799\"},\"major_label_orientation\":0,\"major_label_policy\":{\"id\":\"969810\"},\"ticker\":{\"id\":\"969779\"}},\"id\":\"969778\",\"type\":\"CategoricalAxis\"},{\"attributes\":{\"range\":{\"id\":\"969841\"},\"value\":0.7},\"id\":\"969891\",\"type\":\"Dodge\"},{\"attributes\":{},\"id\":\"969776\",\"type\":\"LinearScale\"},{\"attributes\":{},\"id\":\"969812\",\"type\":\"AllLabels\"},{\"attributes\":{\"factors\":[\"0\",\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\",\"10\",\"11\",\"12\",\"13\",\"14\",\"15\",\"16\",\"17\",\"18\",\"19\",\"20\",\"21\",\"22\",\"23\",\"24\",\"25\",\"26\",\"27\",\"28\",\"29\",\"30\",\"31\",\"32\",\"33\",\"34\",\"35\",\"36\",\"37\",\"38\",\"39\",\"40\",\"41\",\"42\",\"43\",\"44\",\"45\",\"46\",\"47\",\"48\",\"49\",\"50\",\"51\",\"52\",\"53\",\"54\",\"55\",\"56\",\"57\",\"58\",\"59\",\"60\",\"61\",\"62\",\"63\",\"64\",\"65\",\"66\",\"67\",\"68\",\"69\",\"70\",\"71\",\"72\",\"73\",\"74\",\"75\",\"76\",\"77\",\"78\",\"79\",\"80\",\"81\",\"82\",\"83\",\"84\",\"85\",\"86\",\"87\",\"88\",\"89\",\"90\",\"91\",\"92\",\"93\",\"94\",\"95\",\"96\",\"97\",\"98\",\"99\",\"100\",\"101\",\"102\",\"103\",\"104\",\"105\",\"106\",\"107\",\"108\",\"109\",\"110\",\"111\",\"112\",\"113\",\"114\",\"115\",\"116\",\"117\",\"118\",\"119\",\"120\",\"121\",\"122\",\"123\",\"124\",\"125\",\"126\",\"127\",\"128\",\"129\",\"130\",\"131\",\"132\",\"133\",\"134\",\"135\",\"136\",\"137\",\"138\",\"139\",\"140\",\"141\",\"142\",\"143\",\"144\",\"145\",\"146\",\"147\",\"148\",\"149\",\"150\",\"151\",\"152\",\"153\",\"154\",\"155\",\"156\",\"157\",\"158\",\"159\",\"160\",\"161\",\"162\",\"163\",\"164\",\"165\",\"166\",\"167\"]},\"id\":\"969770\",\"type\":\"FactorRange\"},{\"attributes\":{},\"id\":\"969814\",\"type\":\"BasicTickFormatter\"},{\"attributes\":{\"axis_label\":\"Distribution\",\"formatter\":{\"id\":\"969814\"},\"major_label_policy\":{\"id\":\"969812\"},\"ticker\":{\"id\":\"969782\"}},\"id\":\"969781\",\"type\":\"LinearAxis\"},{\"attributes\":{},\"id\":\"969790\",\"type\":\"HelpTool\"},{\"attributes\":{},\"id\":\"969774\",\"type\":\"CategoricalScale\"},{\"attributes\":{\"fill_alpha\":{\"value\":0.1},\"fill_color\":{\"value\":\"#d95f02\"},\"line_alpha\":{\"value\":0.1},\"line_color\":{\"value\":\"#d95f02\"},\"top\":{\"field\":\"count\"},\"width\":{\"value\":0.4},\"x\":{\"field\":\"hour_of_week\",\"transform\":{\"id\":\"969891\"}}},\"id\":\"969894\",\"type\":\"VBar\"},{\"attributes\":{},\"id\":\"969772\",\"type\":\"DataRange1d\"},{\"attributes\":{},\"id\":\"969779\",\"type\":\"CategoricalTicker\"},{\"attributes\":{\"axis\":{\"id\":\"969778\"},\"ticker\":null},\"id\":\"969780\",\"type\":\"Grid\"},{\"attributes\":{\"data_source\":{\"id\":\"969872\"},\"glyph\":{\"id\":\"969893\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"969894\"},\"view\":{\"id\":\"969896\"}},\"id\":\"969895\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"fill_alpha\":{\"value\":0.9},\"fill_color\":{\"value\":\"#d95f02\"},\"line_color\":{\"value\":\"#d95f02\"},\"top\":{\"field\":\"count\"},\"width\":{\"value\":0.4},\"x\":{\"field\":\"hour_of_week\",\"transform\":{\"id\":\"969891\"}}},\"id\":\"969893\",\"type\":\"VBar\"},{\"attributes\":{\"children\":[{\"id\":\"969838\"}],\"sizing_mode\":\"fixed\"},\"id\":\"969911\",\"type\":\"Row\"},{\"attributes\":{\"axis\":{\"id\":\"969781\"},\"dimension\":1,\"ticker\":null},\"id\":\"969784\",\"type\":\"Grid\"},{\"attributes\":{},\"id\":\"969782\",\"type\":\"BasicTicker\"},{\"attributes\":{\"source\":{\"id\":\"969872\"}},\"id\":\"969896\",\"type\":\"CDSView\"},{\"attributes\":{\"active_multi\":null,\"tools\":[{\"id\":\"969785\"},{\"id\":\"969786\"},{\"id\":\"969787\"},{\"id\":\"969788\"},{\"id\":\"969789\"},{\"id\":\"969790\"}]},\"id\":\"969792\",\"type\":\"Toolbar\"},{\"attributes\":{},\"id\":\"969786\",\"type\":\"WheelZoomTool\"},{\"attributes\":{},\"id\":\"969785\",\"type\":\"PanTool\"},{\"attributes\":{\"label\":{\"value\":\"bycicles\"},\"renderers\":[{\"id\":\"969895\"}]},\"id\":\"969908\",\"type\":\"LegendItem\"},{\"attributes\":{\"overlay\":{\"id\":\"969791\"}},\"id\":\"969787\",\"type\":\"BoxZoomTool\"},{\"attributes\":{},\"id\":\"969788\",\"type\":\"SaveTool\"},{\"attributes\":{},\"id\":\"969789\",\"type\":\"ResetTool\"},{\"attributes\":{\"data_source\":{\"id\":\"969873\"},\"glyph\":{\"id\":\"969876\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"969877\"},\"view\":{\"id\":\"969879\"}},\"id\":\"969878\",\"type\":\"GlyphRenderer\"},{\"attributes\":{},\"id\":\"969845\",\"type\":\"CategoricalScale\"},{\"attributes\":{\"code\":\"\\n    if (index % 6 == 0)\\n    {\\n        return tick;\\n    }\\n    else\\n    {\\n        return \\\"\\\";\\n    }\\n    \"},\"id\":\"969870\",\"type\":\"FuncTickFormatter\"},{\"attributes\":{\"source\":{\"id\":\"969873\"}},\"id\":\"969879\",\"type\":\"CDSView\"},{\"attributes\":{\"items\":[{\"id\":\"969890\"},{\"id\":\"969908\"}]},\"id\":\"969889\",\"type\":\"Legend\"},{\"attributes\":{\"fill_alpha\":{\"value\":0.1},\"fill_color\":{\"value\":\"#1b9e77\"},\"line_alpha\":{\"value\":0.1},\"line_color\":{\"value\":\"#1b9e77\"},\"top\":{\"field\":\"count\"},\"width\":{\"value\":0.4},\"x\":{\"field\":\"hour_of_week\",\"transform\":{\"id\":\"969874\"}}},\"id\":\"969877\",\"type\":\"VBar\"},{\"attributes\":{\"text\":\"Distribution of counted vehicles and bycicles in New-York per hour of the week\"},\"id\":\"969839\",\"type\":\"Title\"},{\"attributes\":{\"axis_label\":\"Hour of week\",\"formatter\":{\"id\":\"969870\"},\"major_label_orientation\":0,\"major_label_policy\":{\"id\":\"969881\"},\"ticker\":{\"id\":\"969850\"}},\"id\":\"969849\",\"type\":\"CategoricalAxis\"},{\"attributes\":{},\"id\":\"969847\",\"type\":\"LinearScale\"},{\"attributes\":{\"factors\":[\"0\",\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\",\"10\",\"11\",\"12\",\"13\",\"14\",\"15\",\"16\",\"17\",\"18\",\"19\",\"20\",\"21\",\"22\",\"23\",\"24\",\"25\",\"26\",\"27\",\"28\",\"29\",\"30\",\"31\",\"32\",\"33\",\"34\",\"35\",\"36\",\"37\",\"38\",\"39\",\"40\",\"41\",\"42\",\"43\",\"44\",\"45\",\"46\",\"47\",\"48\",\"49\",\"50\",\"51\",\"52\",\"53\",\"54\",\"55\",\"56\",\"57\",\"58\",\"59\",\"60\",\"61\",\"62\",\"63\",\"64\",\"65\",\"66\",\"67\",\"68\",\"69\",\"70\",\"71\",\"72\",\"73\",\"74\",\"75\",\"76\",\"77\",\"78\",\"79\",\"80\",\"81\",\"82\",\"83\",\"84\",\"85\",\"86\",\"87\",\"88\",\"89\",\"90\",\"91\",\"92\",\"93\",\"94\",\"95\",\"96\",\"97\",\"98\",\"99\",\"100\",\"101\",\"102\",\"103\",\"104\",\"105\",\"106\",\"107\",\"108\",\"109\",\"110\",\"111\",\"112\",\"113\",\"114\",\"115\",\"116\",\"117\",\"118\",\"119\",\"120\",\"121\",\"122\",\"123\",\"124\",\"125\",\"126\",\"127\",\"128\",\"129\",\"130\",\"131\",\"132\",\"133\",\"134\",\"135\",\"136\",\"137\",\"138\",\"139\",\"140\",\"141\",\"142\",\"143\",\"144\",\"145\",\"146\",\"147\",\"148\",\"149\",\"150\",\"151\",\"152\",\"153\",\"154\",\"155\",\"156\",\"157\",\"158\",\"159\",\"160\",\"161\",\"162\",\"163\",\"164\",\"165\",\"166\",\"167\"]},\"id\":\"969841\",\"type\":\"FactorRange\"},{\"attributes\":{\"axis_label\":\"Distribution\",\"formatter\":{\"id\":\"969885\"},\"major_label_policy\":{\"id\":\"969883\"},\"ticker\":{\"id\":\"969853\"}},\"id\":\"969852\",\"type\":\"LinearAxis\"},{\"attributes\":{},\"id\":\"969861\",\"type\":\"HelpTool\"},{\"attributes\":{},\"id\":\"969860\",\"type\":\"ResetTool\"},{\"attributes\":{},\"id\":\"969843\",\"type\":\"DataRange1d\"},{\"attributes\":{},\"id\":\"969850\",\"type\":\"CategoricalTicker\"},{\"attributes\":{\"axis\":{\"id\":\"969849\"},\"ticker\":null},\"id\":\"969851\",\"type\":\"Grid\"},{\"attributes\":{},\"id\":\"969815\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"axis\":{\"id\":\"969852\"},\"dimension\":1,\"ticker\":null},\"id\":\"969855\",\"type\":\"Grid\"},{\"attributes\":{},\"id\":\"969816\",\"type\":\"Selection\"},{\"attributes\":{},\"id\":\"969853\",\"type\":\"BasicTicker\"},{\"attributes\":{},\"id\":\"969857\",\"type\":\"WheelZoomTool\"},{\"attributes\":{},\"id\":\"969856\",\"type\":\"PanTool\"},{\"attributes\":{},\"id\":\"969859\",\"type\":\"SaveTool\"},{\"attributes\":{\"overlay\":{\"id\":\"969862\"}},\"id\":\"969858\",\"type\":\"BoxZoomTool\"},{\"attributes\":{\"range\":{\"id\":\"969770\"},\"value\":0.7},\"id\":\"969820\",\"type\":\"Dodge\"},{\"attributes\":{\"fill_alpha\":{\"value\":0.1},\"fill_color\":{\"value\":\"#d95f02\"},\"line_alpha\":{\"value\":0.1},\"line_color\":{\"value\":\"#d95f02\"},\"top\":{\"field\":\"count\"},\"width\":{\"value\":0.4},\"x\":{\"field\":\"hour_of_week\",\"transform\":{\"id\":\"969820\"}}},\"id\":\"969823\",\"type\":\"VBar\"},{\"attributes\":{},\"id\":\"969887\",\"type\":\"Selection\"},{\"attributes\":{\"data_source\":{\"id\":\"969801\"},\"glyph\":{\"id\":\"969822\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"969823\"},\"view\":{\"id\":\"969825\"}},\"id\":\"969824\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"fill_alpha\":{\"value\":0.9},\"fill_color\":{\"value\":\"#d95f02\"},\"line_color\":{\"value\":\"#d95f02\"},\"top\":{\"field\":\"count\"},\"width\":{\"value\":0.4},\"x\":{\"field\":\"hour_of_week\",\"transform\":{\"id\":\"969820\"}}},\"id\":\"969822\",\"type\":\"VBar\"},{\"attributes\":{\"bottom_units\":\"screen\",\"fill_alpha\":0.5,\"fill_color\":\"lightgrey\",\"left_units\":\"screen\",\"level\":\"overlay\",\"line_alpha\":1.0,\"line_color\":\"black\",\"line_dash\":[4,4],\"line_width\":2,\"right_units\":\"screen\",\"syncable\":false,\"top_units\":\"screen\"},\"id\":\"969862\",\"type\":\"BoxAnnotation\"},{\"attributes\":{},\"id\":\"969886\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"source\":{\"id\":\"969801\"}},\"id\":\"969825\",\"type\":\"CDSView\"},{\"attributes\":{\"label\":{\"value\":\"vehicles\"},\"renderers\":[{\"id\":\"969878\"}]},\"id\":\"969890\",\"type\":\"LegendItem\"},{\"attributes\":{\"label\":{\"value\":\"bycicles\"},\"renderers\":[{\"id\":\"969824\"}]},\"id\":\"969837\",\"type\":\"LegendItem\"},{\"attributes\":{},\"id\":\"969834\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"active_multi\":null,\"tools\":[{\"id\":\"969856\"},{\"id\":\"969857\"},{\"id\":\"969858\"},{\"id\":\"969859\"},{\"id\":\"969860\"},{\"id\":\"969861\"}]},\"id\":\"969863\",\"type\":\"Toolbar\"},{\"attributes\":{\"below\":[{\"id\":\"969778\"}],\"center\":[{\"id\":\"969780\"},{\"id\":\"969784\"},{\"id\":\"969818\"}],\"height\":400,\"left\":[{\"id\":\"969781\"}],\"renderers\":[{\"id\":\"969807\"},{\"id\":\"969824\"}],\"sizing_mode\":\"scale_width\",\"title\":{\"id\":\"969768\"},\"toolbar\":{\"id\":\"969792\"},\"toolbar_location\":null,\"width\":720,\"x_range\":{\"id\":\"969770\"},\"x_scale\":{\"id\":\"969774\"},\"y_range\":{\"id\":\"969772\"},\"y_scale\":{\"id\":\"969776\"}},\"id\":\"969767\",\"subtype\":\"Figure\",\"type\":\"Plot\"},{\"attributes\":{},\"id\":\"969835\",\"type\":\"Selection\"},{\"attributes\":{\"data\":{\"count\":{\"__ndarray__\":\"XkF9LvoZkD+/RjuEy7WEPymAp1wdWn8/n4jPED1WfD9qL0ud2E+CPxZxaqLI1ZI/AkNeOlA9qT+KwSLzG0K7P5k818GHKcE/kNjjdMsMuD+pwwgPpnm0P7tFj0DlPrU/QhHdlue7tj+GHI506OW3P2qzKW4ipbs/Bk41VacswT8mBwxDfFzCPxYWiJxem74/krxw5c+wtj+IS4oeFICwP3Ni7Aq0Jqo/vhFgLhM6pz9b2PsHDeSjP2uJcXQdsJw/rCUXVzVGkD+5fFixqAWEP+DP5H60oX0/nfdeqJ90ez+2wZkqhBOCPwxn6MqH6ZI/LISs68gZqj9WIxiOFEu8PzdU6Y12ysE/uIWLd2GtuD+15zfLtQa1P6FttAtFqrU/R5/4UiDdtj8HvBa/d/63PyVqKZtJ/bs/aaLMupJvwT9QYrf4BrrCPx8s3Mnic78/E+WFjE2otz9jwxcH5WixPwOyyTr6cqs/3ojCAqo8qD9HllKnKielPxHnqh6NSJ4/GNklig7Qkj94VBhidqeHP1+4mi59noE/kT9qncgmgD9Ov2kcvYGFPyO09ZpJppU/6KhzTTpgqz9ih79wnH68Px3cwpKKr8E//zhSjzkMuT/mJZ7yNLS1P3sOu8yforY/WD4nmd6/tz+7fQBWLvS4P3/NVz6P3bw/dZmLSsXZwT9mKrdvkvvCP/Drm+gfFcA/pwTGUzChuD+x+9+3iiqyP329jyYx2Kw/VjDEWu66qT99OtcN2p2mP1iPRxEdbKA/zVFfA/v0kz9e9qSrjTmJP369jlozv4I/aCSbJmLXgD+zpdOtowmGP144VdA2r5U/OAS8LxyLqj+n5YxWBGu7P/Yauty6UcE/pzx4QuCwuD9mFrtmPaC1P8RQteOFcrY/tUOb0cS4tz896lJrofG4P4aAJvmbtLw/wvcZbxiPwT/D9Pwuvo7CP8OJsVumpL8/czanx2KhuD9eMUs7HjCyPwa0S1YW5aw/wtQglc2aqT9FpC9aJ9CmP7X8d8OBWaE/gUqU9weFlT+pHh4nqZ+MP52ISLlL4YU/8O7Ry8f+gz/lDg1Z6qiHPyWTVjJ3dZU/AiMn9Q98qT/KvHWUPEu6PygcyVnfcMA/WF5UQiddtz/a97t1ij+1P2HqqVMzw7Y/+HBSqfGIuD/oZrQhOyW6PzJg2xXXNb4/XYiCy/N9wT+Es/dJDk/BPxwvmr+MHr0/8UhwueLvtj9yB5tK4yixP1axgOMc36o/qBQ079lipz9Uybp5YLSlPzGhiIcNf6M/EktbepDnnT+AlVkOgzaWP67jH1yO2pE/hva+k95Xjj+ZzZ42FFCOP5HIW6SbZ5M/yJHAqpamoD8msR48FzGsP18IyMac/LE/mKo2omKYsT+EELhFf1KzPyeuYAyoZ7U/sLrJwknYtj9+KRWHjbS3P+eeFjAuFbk/7dcA606Tuj8kAbavtHO6PxzAoaQf97c/PsofxcG4sz9eMbq7v9StPzVFBlWkhag/jxGPQDEGpj+6crko/WWkP3L4sRR6SKI/Pcnhb0Tsnj+0TUT2Z3yXP5935d9MvpM/fqxK51MCkj8Yt8UTLuaRPylOpnK/4ZQ/IfQoSfppnj+/LmEtDqGnP4dIuk6xoK0/eAzzpoNTrT9EheyGPlewP/1GdUw2krI/F/ZZJxjltD+OdrFbvji2P2jU16OFfLc/J+qqoV3EuD/Q1X0bc6q4P/H/eVdTI7Y/2Ua5ub9esj9JqR4zvfGsP0fdwCrMBKg/jffXv2pBpT977w0eOUWiPxd8mGZxmZs/\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[168]},\"hour_of_week\":[\"0\",\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\",\"10\",\"11\",\"12\",\"13\",\"14\",\"15\",\"16\",\"17\",\"18\",\"19\",\"20\",\"21\",\"22\",\"23\",\"24\",\"25\",\"26\",\"27\",\"28\",\"29\",\"30\",\"31\",\"32\",\"33\",\"34\",\"35\",\"36\",\"37\",\"38\",\"39\",\"40\",\"41\",\"42\",\"43\",\"44\",\"45\",\"46\",\"47\",\"48\",\"49\",\"50\",\"51\",\"52\",\"53\",\"54\",\"55\",\"56\",\"57\",\"58\",\"59\",\"60\",\"61\",\"62\",\"63\",\"64\",\"65\",\"66\",\"67\",\"68\",\"69\",\"70\",\"71\",\"72\",\"73\",\"74\",\"75\",\"76\",\"77\",\"78\",\"79\",\"80\",\"81\",\"82\",\"83\",\"84\",\"85\",\"86\",\"87\",\"88\",\"89\",\"90\",\"91\",\"92\",\"93\",\"94\",\"95\",\"96\",\"97\",\"98\",\"99\",\"100\",\"101\",\"102\",\"103\",\"104\",\"105\",\"106\",\"107\",\"108\",\"109\",\"110\",\"111\",\"112\",\"113\",\"114\",\"115\",\"116\",\"117\",\"118\",\"119\",\"120\",\"121\",\"122\",\"123\",\"124\",\"125\",\"126\",\"127\",\"128\",\"129\",\"130\",\"131\",\"132\",\"133\",\"134\",\"135\",\"136\",\"137\",\"138\",\"139\",\"140\",\"141\",\"142\",\"143\",\"144\",\"145\",\"146\",\"147\",\"148\",\"149\",\"150\",\"151\",\"152\",\"153\",\"154\",\"155\",\"156\",\"157\",\"158\",\"159\",\"160\",\"161\",\"162\",\"163\",\"164\",\"165\",\"166\",\"167\"],\"index\":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167]},\"selected\":{\"id\":\"969816\"},\"selection_policy\":{\"id\":\"969815\"}},\"id\":\"969802\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"data\":{\"count\":{\"__ndarray__\":\"BGYH398TmT931+bhoWaKP1f54GL7SXw/Ub3KzVMjcT83URtoLdJrPxfdo5adfmQ/nOby0ns7lD8bvsJv2f+lP6c+pfqCobw/mC3WC4RTyD+2EY/KHJ26P3A5yq7fKLA/uaaKEl/ArT+QiSABureuP+XLf1amp7A/iABurcvysj+xAzGqUWm1PwKH2mA+E7w/xjCcK7D2xj+Rsn61upXFPxJgepNwaLo/xBjHw/S8sT/MA4C1/ZisP0HgZpMj9aY/5fsmA3funj84N3RTDkCPP7TWERH53n4/gVWMNcLpcj8ZLgRd4vVwP6VSlqwJ2mg/8K8M228WlT9TwDVWO+SnP8Op++CS2rw/2ryyGV1uxz8OwQThlxK7P150OLnEB68/DabknitArD/06TAVfbyrPx6W4AvMjq0/dcPVgeQFsT8BXl8hrTm0P+yan9j1cLo/HZsN6vsTxT8TbNYBhofEP+YK3qJYOrk/Sm+yvhkYsj/U32R8lC2sPw5peK0TLqg/vyBpO9s9nj/ggx2qBPaRP3hcldEkAoA/v4r36PEGdT+EWXDr9uprP3tgeYdZA2k/7eqGce2nlD+MhTxLhbalP+ksLXWqpro/lJBCXSrqxj9YjOpPo+y6PzTJAfDCda8/1EFrGq9Eqz9qVtYFmiKrP8TFlFBM7a0/Ejw8iSqosD8oi/bc2qGzP+kWSmiJ7bk/tSq9se7uxD9N2OfsGcnDPxd8FibQp7c/XQ3YWs7bsD/VFh4uuhKsPzvZNOCXLqg/TT7PHcO0nz8WTl6x87SRP8RJyhKCSIE/gTps81UXdD8up5JvOuFwPwJJ9UHZwGU/SaulguTpkz+z+EA1FCOjP8jaAVPGkrg/2bs57A8uxT867xftuOe4P/P61uxSXK4/5gWhbQ0hqz83JVVO61+qP0RF2Lklzaw/zStlPLE2sT+1/vaXrHyzP7b7q73747k/fkc+bBJKxD/rQCFK1wvDPzPnbAzg4Lc/f9wpXTnZsD+NUe4hR5KsP7mUaw084Kg/s2p0fbeZoj8rkiVtwDuWP1u3Ol8+S4Y/VxQBpWccez8iQhsD7K9yPzwQ7pG9E2g/4i2D0RqSkz9+LgAuJWSjPwe+ljUKJbg/80snXHw/xD/HBshsCAW6PxVjyJDHLbA/fABlRNlsrj/6u5txfR6vP9ROMF/2D7E/uFFJuYt0tD//9htORwm3P6XW6PnPML0/QwZ6bXM6xD9nI9EEV4LAP866qiFbALQ/oGf9aDcmqz+dLlJcd8CmP7TemSD1kKY/k8Kugukhoj+ram43a0CaPxZY9aYa444/uMi5NnoEgj/IaM4KIxx5Py5YJASQ6mg/3KscmaJiiz+rnzWO9qSVP90Vq0a5K6I/yp+HvEgBqT9HfQqZmPKuP/qcmpyCd7M/mz5/BgAgtz/SlwXzmKi5P9nK/b9m4bk/I1B2ABG3uz/dauyfjHe7Pwy61VCyeLg/+R90vPuNtT+b+1yyT7SyP0LiWO69das/BUS7LzTUoz+9Jv/vPG+hPxqRgyhKTaI/JE0Om88ioT8z/U8ZAZqYP92slcbvoo0/SuJeNArPgz/PKZOPTd55P/uiUP8a0WM/ZgILt23qhz/3Gb5ZYzSVP1mJguphWKA/wk99UnR1pT/ZaXBPmQqtP+mRfu11VrM/wsIpyGQstz8yI2DQqrK5P7jWFDSfC7s/AbInTTNFuz8WuYIX6Lm7P4J+B3VTw7o/zy7QxJj3tz+ZxKMAKs+yP0shvYC8Yaw/FP396q49pT8Fi6GL4hikPyoeAMqCRKI/\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[168]},\"hour_of_week\":[\"0\",\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\",\"10\",\"11\",\"12\",\"13\",\"14\",\"15\",\"16\",\"17\",\"18\",\"19\",\"20\",\"21\",\"22\",\"23\",\"24\",\"25\",\"26\",\"27\",\"28\",\"29\",\"30\",\"31\",\"32\",\"33\",\"34\",\"35\",\"36\",\"37\",\"38\",\"39\",\"40\",\"41\",\"42\",\"43\",\"44\",\"45\",\"46\",\"47\",\"48\",\"49\",\"50\",\"51\",\"52\",\"53\",\"54\",\"55\",\"56\",\"57\",\"58\",\"59\",\"60\",\"61\",\"62\",\"63\",\"64\",\"65\",\"66\",\"67\",\"68\",\"69\",\"70\",\"71\",\"72\",\"73\",\"74\",\"75\",\"76\",\"77\",\"78\",\"79\",\"80\",\"81\",\"82\",\"83\",\"84\",\"85\",\"86\",\"87\",\"88\",\"89\",\"90\",\"91\",\"92\",\"93\",\"94\",\"95\",\"96\",\"97\",\"98\",\"99\",\"100\",\"101\",\"102\",\"103\",\"104\",\"105\",\"106\",\"107\",\"108\",\"109\",\"110\",\"111\",\"112\",\"113\",\"114\",\"115\",\"116\",\"117\",\"118\",\"119\",\"120\",\"121\",\"122\",\"123\",\"124\",\"125\",\"126\",\"127\",\"128\",\"129\",\"130\",\"131\",\"132\",\"133\",\"134\",\"135\",\"136\",\"137\",\"138\",\"139\",\"140\",\"141\",\"142\",\"143\",\"144\",\"145\",\"146\",\"147\",\"148\",\"149\",\"150\",\"151\",\"152\",\"153\",\"154\",\"155\",\"156\",\"157\",\"158\",\"159\",\"160\",\"161\",\"162\",\"163\",\"164\",\"165\",\"166\",\"167\"],\"index\":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167]},\"selected\":{\"id\":\"969906\"},\"selection_policy\":{\"id\":\"969905\"}},\"id\":\"969872\",\"type\":\"ColumnDataSource\"}],\"root_ids\":[\"969915\"]},\"title\":\"Bokeh Application\",\"version\":\"2.3.2\"}};\n",
       "  var render_items = [{\"docid\":\"1f809e38-3dab-46f8-a591-91e278af508b\",\"root_ids\":[\"969915\"],\"roots\":{\"969915\":\"eef413a1-0d49-4764-8cca-e3a941225eb9\"}}];\n",
       "  root.Bokeh.embed.embed_items_notebook(docs_json, render_items);\n",
       "\n",
       "  }\n",
       "  if (root.Bokeh !== undefined) {\n",
       "    embed_document(root);\n",
       "  } else {\n",
       "    var attempts = 0;\n",
       "    var timer = setInterval(function(root) {\n",
       "      if (root.Bokeh !== undefined) {\n",
       "        clearInterval(timer);\n",
       "        embed_document(root);\n",
       "      } else {\n",
       "        attempts++;\n",
       "        if (attempts > 100) {\n",
       "          clearInterval(timer);\n",
       "          console.log(\"Bokeh: ERROR: Unable to run BokehJS code because BokehJS library is missing\");\n",
       "        }\n",
       "      }\n",
       "    }, 10, root)\n",
       "  }\n",
       "})(window);"
      ],
      "application/vnd.bokehjs_exec.v0+json": ""
     },
     "metadata": {
      "application/vnd.bokehjs_exec.v0+json": {
       "id": "969915"
      }
     },
     "output_type": "display_data"
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "WARNING:bokeh.core.validation.check:W-1005 (FIXED_SIZING_MODE): 'fixed' sizing mode requires width and height to be set: Column(id='969910', ...)\n",
      "WARNING:bokeh.core.validation.check:W-1005 (FIXED_SIZING_MODE): 'fixed' sizing mode requires width and height to be set: Column(id='969912', ...)\n",
      "WARNING:bokeh.core.validation.check:W-1005 (FIXED_SIZING_MODE): 'fixed' sizing mode requires width and height to be set: Row(id='969909', ...)\n",
      "WARNING:bokeh.core.validation.check:W-1005 (FIXED_SIZING_MODE): 'fixed' sizing mode requires width and height to be set: Row(id='969911', ...)\n"
     ]
    }
   ],
   "source": [
    "from bokeh.models import FuncTickFormatter\n",
    "figures = []\n",
    "for city in cities:\n",
    "    df_city = df[df['city'] == city]\n",
    "    week_hour_bycicle_count = []\n",
    "    week_hour_vehicle_count = []\n",
    "    for weekday in range(7):\n",
    "        week_day_bycicle = df_city[(df_city['type'] == 'bicycle') & (df_city['time'].dt.weekday == weekday)]\n",
    "        week_day_vehicle = df_city[(df_city['type'] == 'vehicle') & (df_city['time'].dt.weekday == weekday)]\n",
    "        for h in range(24):\n",
    "            week_hour_bycicle_count.append(week_day_bycicle[week_day_bycicle['hour'] == h]['count'].sum())\n",
    "            week_hour_vehicle_count.append(week_day_vehicle[week_day_vehicle['hour'] == h]['count'].sum())\n",
    "    week_hour_bycicle_count = np.array(week_hour_bycicle_count)\n",
    "    week_hour_vehicle_count = np.array(week_hour_vehicle_count)\n",
    "    week_hour_bycicle_count = week_hour_bycicle_count / np.sqrt(np.sum(week_hour_bycicle_count**2))\n",
    "    week_hour_vehicle_count = week_hour_vehicle_count / np.sqrt(np.sum(week_hour_vehicle_count**2))\n",
    "    \n",
    "    hx = np.arange(7 * 24)  # the label locations\n",
    "    hx = np.char.mod('%d', hx)\n",
    "\n",
    "    hourly_bycicles_df = pd.DataFrame({'hour_of_week': hx, 'count': week_hour_bycicle_count})\n",
    "    hourly_vehicles_df = pd.DataFrame({'hour_of_week': hx, 'count': week_hour_vehicle_count})\n",
    "\n",
    "    #colors has a list of colors which can be used in plots \n",
    "    colors = itertools.cycle(palette)\n",
    "    p = figure(title=\"Distribution of counted vehicles and bycicles in {} per hour of the week\".format(city), \n",
    "           x_range=hx, toolbar_location=None, plot_width=720, plot_height=400)\n",
    "    p.sizing_mode = 'scale_width'\n",
    "    p.xaxis.major_label_orientation = 0 #math.pi/4\n",
    "    p.xaxis.axis_label = 'Hour of week'\n",
    "    p.yaxis.axis_label = 'Distribution'\n",
    "    p.xaxis.formatter = FuncTickFormatter(code=\"\"\"\n",
    "    if (index % 6 == 0)\n",
    "    {\n",
    "        return tick;\n",
    "    }\n",
    "    else\n",
    "    {\n",
    "        return \"\";\n",
    "    }\n",
    "    \"\"\")\n",
    "\n",
    "    hourly_bycicles_df = ColumnDataSource(hourly_bycicles_df)\n",
    "    hourly_vehicles_df = ColumnDataSource(hourly_vehicles_df)\n",
    "    c = next(colors)\n",
    "    b2 = p.vbar(x=dodge('hour_of_week', 0.3, range=p.x_range),  top=\"count\", width=0.4, source=hourly_vehicles_df, legend_label=\"vehicles\", fill_color=c, fill_alpha=.9, color=c)\n",
    "    c = next(colors)\n",
    "    b1 = p.vbar(x=dodge('hour_of_week', 0.7, range=p.x_range),  top=\"count\", width=0.4, source=hourly_bycicles_df, legend_label=\"bycicles\", fill_color=c, fill_alpha=.9, color=c)\n",
    "    figures.append(p)\n",
    "\n",
    "l1 = layout([[figures[0]]], sizing_mode='fixed')\n",
    "l2 = layout([[figures[1]]], sizing_mode='fixed')\n",
    "#l3 = layout([[figures[2]]],sizing_mode='fixed')\n",
    "\n",
    "tab1 = Panel(child=l1,title=cities[0])\n",
    "tab2 = Panel(child=l2,title=cities[1])\n",
    "#tab3 = Panel(child=l3,title=cities[2])\n",
    "#tabs = Tabs(tabs=[ tab1, tab2, tab3 ])\n",
    "tabs = Tabs(tabs=[ tab1, tab2 ])\n",
    "\n",
    "curdoc().add_root(tabs)\n",
    "show(tabs)\n",
    "saveFigureToJson(tabs, \"./visualizations/vis3.json\")"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "a08ddf0b",
   "metadata": {},
   "source": [
    "## Bicycle traffic variation based on temperature, wind and humidity\n",
    "In these visualization we wanted to see how the weather impacted the bicycle traffic. We computed the average bicycles counted in an hour using the whole dataset. Then we computed the average bicycles counted in an hour filtered by specific weather conditions. We then computed the percentage variation of the mean as follow:\n",
    "[(mean_specific_weather - mean_normal_day) / mean_normal_day] * 100\n",
    "\n",
    "We then visualized this variation using barplots.\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 620,
   "id": "5189c652",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "['-10.000000' '-5.000000' '0.000000' '5.000000' '10.000000' '15.000000'\n",
      " '20.000000' '25.000000' '30.000000' '35.000000']\n"
     ]
    }
   ],
   "source": [
    "temps = np.arange(-10, 40 + 1, 5)\n",
    "temps_ranges = [(temps[i], temps[i + 1]) for i in range(len(temps)-1)]\n",
    "labels = np.char.mod('%f', temps[:-1])\n",
    "print(labels)\n",
    "#print(temps_ranges)\n",
    "#winds = np.arange(0, 40 + 1, 2.5)\n",
    "#winds_ranges = [(winds[i], winds[i + 1]) for i in range(len(winds)-1)]\n",
    "#print(winds_ranges)\n",
    "\n",
    "traffic_temp = {cities[0]:[], cities[1]: []}\n",
    "\n",
    "f1 = figure(title=\"Bicycle traffic variation based on temperature\", \n",
    "    x_range=labels, y_range=Range1d(-150, 150), toolbar_location=None, plot_width=720, plot_height=400)\n",
    "f1.sizing_mode = 'scale_width'\n",
    "f1.xaxis.major_label_orientation = math.pi/4\n",
    "f1.xaxis.axis_label = 'Temperature in celsius'\n",
    "f1.yaxis.axis_label = 'Percentage traffic variation compared to mean traffic'\n",
    "\n",
    "colors = itertools.cycle(palette)\n",
    "#df['temp'] = df['temp'].fillna(method='ffill')\n",
    "df['count'] = df['count'].fillna(0)\n",
    "for i, city in enumerate(cities):\n",
    "    df_city = df[df['city'] == city]\n",
    "    df_bicycle = df_city[df_city['type'] == 'bicycle']\n",
    "    day_count_avg = df_bicycle.groupby(df_bicycle['time'].dt.date).mean()['count'].mean()\n",
    "    for trange in temps_ranges:\n",
    "        filtered_temp = df_bicycle[(df_bicycle['temp'] >= trange[0]) & (df_bicycle['temp'] <= trange[1])]\n",
    "        day_count_var = filtered_temp.groupby(filtered_temp['time'].dt.date).mean()['count'].mean() / day_count_avg\n",
    "        traffic_temp[city].append(day_count_var -1.0)\n",
    "    \n",
    "    traffic_temp[city] = np.array(traffic_temp[city]) * 100\n",
    "    #traffic_temp[city][np.isnan(traffic_temp[city])] = 0.0 #nan values \n",
    "    #traffic_temp[city] = traffic_temp[city] / np.sqrt(np.sum(traffic_temp[city]**2))\n",
    "    traffic_df = pd.DataFrame({'temperature': labels, 'count': traffic_temp[city]})\n",
    "\n",
    "    traffic_df = ColumnDataSource(traffic_df)\n",
    "    c = next(colors)\n",
    "    f1.vbar(x=dodge('temperature', -0.2 + 0.2 * i, range=f1.x_range),  top=\"count\", width=0.2, source=traffic_df, legend_label=city, fill_color=c, fill_alpha=.9, color=c)\n",
    "#show(f1)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 621,
   "id": "715d50b7",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "['0.000000' '7.000000' '14.000000' '21.000000' '28.000000' '35.000000'\n",
      " '42.000000' '49.000000']\n"
     ]
    }
   ],
   "source": [
    "winds = np.arange(0, 60 + 1, 7)\n",
    "winds_ranges = [(winds[i], winds[i + 1]) for i in range(len(winds)-1)]\n",
    "labels = np.char.mod('%f', winds[:-1])\n",
    "print(labels)\n",
    "\n",
    "traffic_temp = {cities[0]:[], cities[1]: []}\n",
    "\n",
    "f2 = figure(title=\"Bicycle traffic variation based on wind speed\", \n",
    "    x_range=labels, y_range=Range1d(-100, 100), toolbar_location=None, plot_width=720, plot_height=400)\n",
    "f2.sizing_mode = 'scale_width'\n",
    "f2.xaxis.major_label_orientation = math.pi/4\n",
    "f2.xaxis.axis_label = 'Wind speed in m/s'\n",
    "f2.yaxis.axis_label = 'Percentage traffic variation compared to mean traffic'\n",
    "\n",
    "colors = itertools.cycle(palette)\n",
    "#df['temp'] = df['temp'].fillna(method='ffill')\n",
    "df['count'] = df['count'].fillna(0)\n",
    "for i, city in enumerate(cities):\n",
    "    df_city = df[df['city'] == city]\n",
    "    df_bicycle = df_city[df_city['type'] == 'bicycle']\n",
    "    day_count_avg = df_bicycle.groupby(df_bicycle['time'].dt.date).mean()['count'].mean()\n",
    "    for wrange in winds_ranges:\n",
    "        filtered_temp = df_bicycle[(df_bicycle['wspd'] >= wrange[0]) & (df_bicycle['wspd'] <= wrange[1])]\n",
    "        day_count_var = filtered_temp.groupby(filtered_temp['time'].dt.date).mean()['count'].mean() / day_count_avg\n",
    "        traffic_temp[city].append(day_count_var - 1.0)\n",
    "    \n",
    "    traffic_temp[city] = np.array(traffic_temp[city]) * 100\n",
    "    traffic_temp[city][np.isnan(traffic_temp[city])] = 0.0 #nan values \n",
    "    #traffic_temp[city] = traffic_temp[city] / np.sqrt(np.sum(traffic_temp[city]**2))\n",
    "    traffic_df = pd.DataFrame({'windspeed': labels, 'count': traffic_temp[city]})\n",
    "\n",
    "    traffic_df = ColumnDataSource(traffic_df)\n",
    "    c = next(colors)\n",
    "    f2.vbar(x=dodge('windspeed', -0.2 + 0.2 * i, range=f2.x_range),  top=\"count\", width=0.2, source=traffic_df, legend_label=city, fill_color=c, fill_alpha=.9, color=c)\n",
    "#show(f2)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 622,
   "id": "ef7e52d5",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "['0.000000' '7.000000' '14.000000' '21.000000' '28.000000' '35.000000'\n",
      " '42.000000' '49.000000' '56.000000' '63.000000' '70.000000' '77.000000'\n",
      " '84.000000' '91.000000']\n"
     ]
    }
   ],
   "source": [
    "rhum = np.arange(0, 100 + 1, 7)\n",
    "rhum_ranges = [(rhum[i], rhum[i + 1]) for i in range(len(rhum)-1)]\n",
    "labels = np.char.mod('%f', rhum[:-1])\n",
    "print(labels)\n",
    "\n",
    "traffic_rhum = {cities[0]:[], cities[1]: []}\n",
    "\n",
    "f3 = figure(title=\"Bicycle traffic variation based on wind speed\", \n",
    "    x_range=labels, y_range=Range1d(-100, 100), toolbar_location=None, plot_width=720, plot_height=400)\n",
    "f3.sizing_mode = 'scale_width'\n",
    "f3.xaxis.major_label_orientation = math.pi/4\n",
    "f3.xaxis.axis_label = 'Air humidity %'\n",
    "f3.yaxis.axis_label = 'Percentage traffic variation compared to mean traffic'\n",
    "\n",
    "colors = itertools.cycle(palette)\n",
    "#df['temp'] = df['temp'].fillna(method='ffill')\n",
    "df['rhum'] = df['rhum'].fillna(0)\n",
    "df['count'] = df['count'].fillna(0)\n",
    "for i, city in enumerate(cities):\n",
    "    df_city = df[df['city'] == city]\n",
    "    df_bicycle = df_city[df_city['type'] == 'bicycle']\n",
    "    day_count_avg = df_bicycle.groupby(df_bicycle['time'].dt.date).mean()['count'].mean()\n",
    "    for rhrange in rhum_ranges:\n",
    "        filtered_rhum = df_bicycle[(df_bicycle['rhum'] >= rhrange[0]) & (df_bicycle['rhum'] <= rhrange[1])]\n",
    "        day_count_var = filtered_rhum.groupby(filtered_rhum['time'].dt.date).mean()['count'].mean() / day_count_avg\n",
    "        traffic_rhum[city].append(day_count_var - 1.0)\n",
    "    \n",
    "    traffic_rhum[city] = np.array(traffic_rhum[city]) * 100\n",
    "    traffic_rhum[city][np.isnan(traffic_rhum[city])] = 0.0 #nan values \n",
    "    #traffic_temp[city] = traffic_temp[city] / np.sqrt(np.sum(traffic_temp[city]**2))\n",
    "    traffic_df = pd.DataFrame({'rhum': labels, 'count': traffic_rhum[city]})\n",
    "\n",
    "    traffic_df = ColumnDataSource(traffic_df)\n",
    "    c = next(colors)\n",
    "    f3.vbar(x=dodge('rhum', -0.2 + 0.2 * i, range=f3.x_range),  top=\"count\", width=0.2, source=traffic_df, legend_label=city, fill_color=c, fill_alpha=.9, color=c)\n",
    "#show(f2)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 623,
   "id": "61cd716b",
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "WARNING:bokeh.core.validation.check:W-1005 (FIXED_SIZING_MODE): 'fixed' sizing mode requires width and height to be set: Column(id='976483', ...)\n",
      "WARNING:bokeh.core.validation.check:W-1005 (FIXED_SIZING_MODE): 'fixed' sizing mode requires width and height to be set: Column(id='976485', ...)\n",
      "WARNING:bokeh.core.validation.check:W-1005 (FIXED_SIZING_MODE): 'fixed' sizing mode requires width and height to be set: Column(id='976487', ...)\n",
      "WARNING:bokeh.core.validation.check:W-1005 (FIXED_SIZING_MODE): 'fixed' sizing mode requires width and height to be set: Row(id='976482', ...)\n",
      "WARNING:bokeh.core.validation.check:W-1005 (FIXED_SIZING_MODE): 'fixed' sizing mode requires width and height to be set: Row(id='976484', ...)\n",
      "WARNING:bokeh.core.validation.check:W-1005 (FIXED_SIZING_MODE): 'fixed' sizing mode requires width and height to be set: Row(id='976486', ...)\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "\n",
       "\n",
       "\n",
       "\n",
       "\n",
       "\n",
       "  <div class=\"bk-root\" id=\"7db1a10b-f6df-4168-b750-b9ed8616c998\" data-root-id=\"976491\"></div>\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "application/javascript": [
       "(function(root) {\n",
       "  function embed_document(root) {\n",
       "    \n",
       "  var docs_json = {\"2fff3b6b-0880-48fc-8b9a-095f59d5d6e4\":{\"defs\":[],\"roots\":{\"references\":[{\"attributes\":{\"tabs\":[{\"id\":\"976488\"},{\"id\":\"976489\"},{\"id\":\"976490\"}]},\"id\":\"976491\",\"type\":\"Tabs\"},{\"attributes\":{\"fill_alpha\":{\"value\":0.9},\"fill_color\":{\"value\":\"#d95f02\"},\"line_color\":{\"value\":\"#d95f02\"},\"top\":{\"field\":\"count\"},\"width\":{\"value\":0.2},\"x\":{\"field\":\"rhum\",\"transform\":{\"id\":\"976463\"}}},\"id\":\"976465\",\"type\":\"VBar\"},{\"attributes\":{\"data\":{\"count\":{\"__ndarray__\":\"KWQ6sZWTSMDIZwZMgLM/wKoq2CvfiTnAXukeWba1JsBDoNPNL+8hwEKfJ2mrqT5AOJIOpJ6QSkC2+7niTbRPQIsNw82t02RAAAAAAAAA+H8=\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[10]},\"index\":[0,1,2,3,4,5,6,7,8,9],\"temperature\":[\"-10.000000\",\"-5.000000\",\"0.000000\",\"5.000000\",\"10.000000\",\"15.000000\",\"20.000000\",\"25.000000\",\"30.000000\",\"35.000000\"]},\"selected\":{\"id\":\"976316\"},\"selection_policy\":{\"id\":\"976315\"}},\"id\":\"976301\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"factors\":[\"-10.000000\",\"-5.000000\",\"0.000000\",\"5.000000\",\"10.000000\",\"15.000000\",\"20.000000\",\"25.000000\",\"30.000000\",\"35.000000\"]},\"id\":\"976273\",\"type\":\"FactorRange\"},{\"attributes\":{\"axis\":{\"id\":\"976422\"},\"ticker\":null},\"id\":\"976424\",\"type\":\"Grid\"},{\"attributes\":{\"label\":{\"value\":\"Copenhagen\"},\"renderers\":[{\"id\":\"976306\"}]},\"id\":\"976319\",\"type\":\"LegendItem\"},{\"attributes\":{\"child\":{\"id\":\"976485\"},\"title\":\"Wind\"},\"id\":\"976489\",\"type\":\"Panel\"},{\"attributes\":{},\"id\":\"976420\",\"type\":\"LinearScale\"},{\"attributes\":{\"fill_alpha\":{\"value\":0.1},\"fill_color\":{\"value\":\"#d95f02\"},\"line_alpha\":{\"value\":0.1},\"line_color\":{\"value\":\"#d95f02\"},\"top\":{\"field\":\"count\"},\"width\":{\"value\":0.2},\"x\":{\"field\":\"rhum\",\"transform\":{\"id\":\"976463\"}}},\"id\":\"976466\",\"type\":\"VBar\"},{\"attributes\":{\"end\":100,\"start\":-100},\"id\":\"976411\",\"type\":\"Range1d\"},{\"attributes\":{},\"id\":\"976423\",\"type\":\"CategoricalTicker\"},{\"attributes\":{},\"id\":\"976316\",\"type\":\"Selection\"},{\"attributes\":{\"below\":[{\"id\":\"976422\"}],\"center\":[{\"id\":\"976424\"},{\"id\":\"976428\"},{\"id\":\"976460\"}],\"height\":400,\"left\":[{\"id\":\"976425\"}],\"renderers\":[{\"id\":\"976448\"},{\"id\":\"976467\"}],\"sizing_mode\":\"scale_width\",\"title\":{\"id\":\"976413\"},\"toolbar\":{\"id\":\"976436\"},\"toolbar_location\":null,\"width\":720,\"x_range\":{\"id\":\"976415\"},\"x_scale\":{\"id\":\"976418\"},\"y_range\":{\"id\":\"976411\"},\"y_scale\":{\"id\":\"976420\"}},\"id\":\"976412\",\"subtype\":\"Figure\",\"type\":\"Plot\"},{\"attributes\":{},\"id\":\"976363\",\"type\":\"HelpTool\"},{\"attributes\":{},\"id\":\"976336\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"source\":{\"id\":\"976462\"}},\"id\":\"976468\",\"type\":\"CDSView\"},{\"attributes\":{},\"id\":\"976337\",\"type\":\"Selection\"},{\"attributes\":{\"items\":[{\"id\":\"976319\"},{\"id\":\"976339\"}]},\"id\":\"976318\",\"type\":\"Legend\"},{\"attributes\":{\"text\":\"Bicycle traffic variation based on wind speed\"},\"id\":\"976413\",\"type\":\"Title\"},{\"attributes\":{\"fill_alpha\":{\"value\":0.9},\"fill_color\":{\"value\":\"#1b9e77\"},\"line_color\":{\"value\":\"#1b9e77\"},\"top\":{\"field\":\"count\"},\"width\":{\"value\":0.2},\"x\":{\"field\":\"rhum\",\"transform\":{\"id\":\"976444\"}}},\"id\":\"976446\",\"type\":\"VBar\"},{\"attributes\":{\"children\":[{\"id\":\"976341\"}],\"sizing_mode\":\"fixed\"},\"id\":\"976484\",\"type\":\"Row\"},{\"attributes\":{\"axis_label\":\"Air humidity %\",\"formatter\":{\"id\":\"976453\"},\"major_label_orientation\":0.7853981633974483,\"major_label_policy\":{\"id\":\"976451\"},\"ticker\":{\"id\":\"976423\"}},\"id\":\"976422\",\"type\":\"CategoricalAxis\"},{\"attributes\":{\"label\":{\"value\":\"New-York\"},\"renderers\":[{\"id\":\"976467\"}]},\"id\":\"976481\",\"type\":\"LegendItem\"},{\"attributes\":{\"range\":{\"id\":\"976415\"},\"value\":-0.2},\"id\":\"976444\",\"type\":\"Dodge\"},{\"attributes\":{\"child\":{\"id\":\"976483\"},\"title\":\"Temperature\"},\"id\":\"976488\",\"type\":\"Panel\"},{\"attributes\":{\"range\":{\"id\":\"976415\"}},\"id\":\"976463\",\"type\":\"Dodge\"},{\"attributes\":{\"label\":{\"value\":\"New-York\"},\"renderers\":[{\"id\":\"976396\"}]},\"id\":\"976410\",\"type\":\"LegendItem\"},{\"attributes\":{},\"id\":\"976355\",\"type\":\"BasicTicker\"},{\"attributes\":{\"active_multi\":null,\"tools\":[{\"id\":\"976358\"},{\"id\":\"976359\"},{\"id\":\"976360\"},{\"id\":\"976361\"},{\"id\":\"976362\"},{\"id\":\"976363\"}]},\"id\":\"976365\",\"type\":\"Toolbar\"},{\"attributes\":{},\"id\":\"976315\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"range\":{\"id\":\"976273\"}},\"id\":\"976321\",\"type\":\"Dodge\"},{\"attributes\":{\"fill_alpha\":{\"value\":0.1},\"fill_color\":{\"value\":\"#d95f02\"},\"line_alpha\":{\"value\":0.1},\"line_color\":{\"value\":\"#d95f02\"},\"top\":{\"field\":\"count\"},\"width\":{\"value\":0.2},\"x\":{\"field\":\"windspeed\",\"transform\":{\"id\":\"976392\"}}},\"id\":\"976395\",\"type\":\"VBar\"},{\"attributes\":{\"fill_alpha\":{\"value\":0.9},\"fill_color\":{\"value\":\"#d95f02\"},\"line_color\":{\"value\":\"#d95f02\"},\"top\":{\"field\":\"count\"},\"width\":{\"value\":0.2},\"x\":{\"field\":\"windspeed\",\"transform\":{\"id\":\"976392\"}}},\"id\":\"976394\",\"type\":\"VBar\"},{\"attributes\":{},\"id\":\"976387\",\"type\":\"Selection\"},{\"attributes\":{\"range\":{\"id\":\"976344\"}},\"id\":\"976392\",\"type\":\"Dodge\"},{\"attributes\":{\"source\":{\"id\":\"976391\"}},\"id\":\"976397\",\"type\":\"CDSView\"},{\"attributes\":{\"data_source\":{\"id\":\"976391\"},\"glyph\":{\"id\":\"976394\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"976395\"},\"view\":{\"id\":\"976397\"}},\"id\":\"976396\",\"type\":\"GlyphRenderer\"},{\"attributes\":{},\"id\":\"976359\",\"type\":\"WheelZoomTool\"},{\"attributes\":{\"data\":{\"count\":{\"__ndarray__\":\"WEZLSVf4HUDMWt+d75cAwESZ/nmAsfg/4kG0oLerHkD5f87nYxsgwPIZvHrs1zTAqSA4zaQEP8AF66DZmYVNwA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[8]},\"index\":[0,1,2,3,4,5,6,7],\"windspeed\":[\"0.000000\",\"7.000000\",\"14.000000\",\"21.000000\",\"28.000000\",\"35.000000\",\"42.000000\",\"49.000000\"]},\"selected\":{\"id\":\"976408\"},\"selection_policy\":{\"id\":\"976407\"}},\"id\":\"976391\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"overlay\":{\"id\":\"976364\"}},\"id\":\"976360\",\"type\":\"BoxZoomTool\"},{\"attributes\":{\"axis_label\":\"Percentage traffic variation compared to mean traffic\",\"formatter\":{\"id\":\"976385\"},\"major_label_policy\":{\"id\":\"976383\"},\"ticker\":{\"id\":\"976355\"}},\"id\":\"976354\",\"type\":\"LinearAxis\"},{\"attributes\":{},\"id\":\"976362\",\"type\":\"ResetTool\"},{\"attributes\":{},\"id\":\"976358\",\"type\":\"PanTool\"},{\"attributes\":{\"range\":{\"id\":\"976344\"},\"value\":-0.2},\"id\":\"976373\",\"type\":\"Dodge\"},{\"attributes\":{},\"id\":\"976361\",\"type\":\"SaveTool\"},{\"attributes\":{},\"id\":\"976418\",\"type\":\"CategoricalScale\"},{\"attributes\":{\"axis\":{\"id\":\"976354\"},\"dimension\":1,\"ticker\":null},\"id\":\"976357\",\"type\":\"Grid\"},{\"attributes\":{},\"id\":\"976451\",\"type\":\"AllLabels\"},{\"attributes\":{},\"id\":\"976386\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"data\":{\"count\":{\"__ndarray__\":\"81aUMn30KMAAAAAAAAAAAIF/vcsrnENAODxgHl88PEAhginsY6lKQN0Xe2DlBlBAqtlOZGgPTUBahHzZmvhLQEUdwp0TY0dAxCFTkzWjQUA+89J+RWcxQHvuK3bLPwvAGJ8WpQzkNcD6GfXWXXNBwA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[14]},\"index\":[0,1,2,3,4,5,6,7,8,9,10,11,12,13],\"rhum\":[\"0.000000\",\"7.000000\",\"14.000000\",\"21.000000\",\"28.000000\",\"35.000000\",\"42.000000\",\"49.000000\",\"56.000000\",\"63.000000\",\"70.000000\",\"77.000000\",\"84.000000\",\"91.000000\"]},\"selected\":{\"id\":\"976458\"},\"selection_policy\":{\"id\":\"976457\"}},\"id\":\"976443\",\"type\":\"ColumnDataSource\"},{\"attributes\":{},\"id\":\"976407\",\"type\":\"UnionRenderers\"},{\"attributes\":{},\"id\":\"976408\",\"type\":\"Selection\"},{\"attributes\":{},\"id\":\"976457\",\"type\":\"UnionRenderers\"},{\"attributes\":{},\"id\":\"976458\",\"type\":\"Selection\"},{\"attributes\":{\"children\":[{\"id\":\"976484\"}],\"sizing_mode\":\"fixed\"},\"id\":\"976485\",\"type\":\"Column\"},{\"attributes\":{\"data_source\":{\"id\":\"976462\"},\"glyph\":{\"id\":\"976465\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"976466\"},\"view\":{\"id\":\"976468\"}},\"id\":\"976467\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"children\":[{\"id\":\"976412\"}],\"sizing_mode\":\"fixed\"},\"id\":\"976486\",\"type\":\"Row\"},{\"attributes\":{},\"id\":\"976385\",\"type\":\"BasicTickFormatter\"},{\"attributes\":{\"children\":[{\"id\":\"976270\"}],\"sizing_mode\":\"fixed\"},\"id\":\"976482\",\"type\":\"Row\"},{\"attributes\":{\"children\":[{\"id\":\"976482\"}],\"sizing_mode\":\"fixed\"},\"id\":\"976483\",\"type\":\"Column\"},{\"attributes\":{\"data\":{\"count\":{\"__ndarray__\":\"AAAAAAAAAADyaR3ZFGI5QE6au2WZQyZAcKdh6Oca7j+Jl82AutQ+QJLqKOt9a0FAkrlNdmFAMkCoi/GXBNcGQKlTIy8M9Q3AE6or+kTRFUAqKiRN6EsKQEO35EhBSBdA95gK1OlCL8AtwGhoxYA+wA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[14]},\"index\":[0,1,2,3,4,5,6,7,8,9,10,11,12,13],\"rhum\":[\"0.000000\",\"7.000000\",\"14.000000\",\"21.000000\",\"28.000000\",\"35.000000\",\"42.000000\",\"49.000000\",\"56.000000\",\"63.000000\",\"70.000000\",\"77.000000\",\"84.000000\",\"91.000000\"]},\"selected\":{\"id\":\"976479\"},\"selection_policy\":{\"id\":\"976478\"}},\"id\":\"976462\",\"type\":\"ColumnDataSource\"},{\"attributes\":{},\"id\":\"976383\",\"type\":\"AllLabels\"},{\"attributes\":{\"child\":{\"id\":\"976487\"},\"title\":\"Humidity\"},\"id\":\"976490\",\"type\":\"Panel\"},{\"attributes\":{\"children\":[{\"id\":\"976486\"}],\"sizing_mode\":\"fixed\"},\"id\":\"976487\",\"type\":\"Column\"},{\"attributes\":{\"factors\":[\"0.000000\",\"7.000000\",\"14.000000\",\"21.000000\",\"28.000000\",\"35.000000\",\"42.000000\",\"49.000000\",\"56.000000\",\"63.000000\",\"70.000000\",\"77.000000\",\"84.000000\",\"91.000000\"]},\"id\":\"976415\",\"type\":\"FactorRange\"},{\"attributes\":{\"bottom_units\":\"screen\",\"fill_alpha\":0.5,\"fill_color\":\"lightgrey\",\"left_units\":\"screen\",\"level\":\"overlay\",\"line_alpha\":1.0,\"line_color\":\"black\",\"line_dash\":[4,4],\"line_width\":2,\"right_units\":\"screen\",\"syncable\":false,\"top_units\":\"screen\"},\"id\":\"976293\",\"type\":\"BoxAnnotation\"},{\"attributes\":{\"data\":{\"count\":{\"__ndarray__\":\"mD3I4EIhNMAiXXfWcTstwHTPhYNls/I/4csd0K+9IEC03WJATeAjQOcnsdYTpBVAANPWJGe0rz937I10wagLwA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[8]},\"index\":[0,1,2,3,4,5,6,7],\"windspeed\":[\"0.000000\",\"7.000000\",\"14.000000\",\"21.000000\",\"28.000000\",\"35.000000\",\"42.000000\",\"49.000000\"]},\"selected\":{\"id\":\"976387\"},\"selection_policy\":{\"id\":\"976386\"}},\"id\":\"976372\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"range\":{\"id\":\"976273\"},\"value\":-0.2},\"id\":\"976302\",\"type\":\"Dodge\"},{\"attributes\":{\"axis_label\":\"Wind speed in m/s\",\"formatter\":{\"id\":\"976382\"},\"major_label_orientation\":0.7853981633974483,\"major_label_policy\":{\"id\":\"976380\"},\"ticker\":{\"id\":\"976352\"}},\"id\":\"976351\",\"type\":\"CategoricalAxis\"},{\"attributes\":{\"text\":\"Bicycle traffic variation based on wind speed\"},\"id\":\"976342\",\"type\":\"Title\"},{\"attributes\":{\"fill_alpha\":{\"value\":0.1},\"fill_color\":{\"value\":\"#1b9e77\"},\"line_alpha\":{\"value\":0.1},\"line_color\":{\"value\":\"#1b9e77\"},\"top\":{\"field\":\"count\"},\"width\":{\"value\":0.2},\"x\":{\"field\":\"rhum\",\"transform\":{\"id\":\"976444\"}}},\"id\":\"976447\",\"type\":\"VBar\"},{\"attributes\":{\"data_source\":{\"id\":\"976301\"},\"glyph\":{\"id\":\"976304\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"976305\"},\"view\":{\"id\":\"976307\"}},\"id\":\"976306\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"data_source\":{\"id\":\"976443\"},\"glyph\":{\"id\":\"976446\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"976447\"},\"view\":{\"id\":\"976449\"}},\"id\":\"976448\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"source\":{\"id\":\"976372\"}},\"id\":\"976378\",\"type\":\"CDSView\"},{\"attributes\":{},\"id\":\"976349\",\"type\":\"LinearScale\"},{\"attributes\":{\"fill_alpha\":{\"value\":0.1},\"fill_color\":{\"value\":\"#1b9e77\"},\"line_alpha\":{\"value\":0.1},\"line_color\":{\"value\":\"#1b9e77\"},\"top\":{\"field\":\"count\"},\"width\":{\"value\":0.2},\"x\":{\"field\":\"windspeed\",\"transform\":{\"id\":\"976373\"}}},\"id\":\"976376\",\"type\":\"VBar\"},{\"attributes\":{\"fill_alpha\":{\"value\":0.1},\"fill_color\":{\"value\":\"#1b9e77\"},\"line_alpha\":{\"value\":0.1},\"line_color\":{\"value\":\"#1b9e77\"},\"top\":{\"field\":\"count\"},\"width\":{\"value\":0.2},\"x\":{\"field\":\"temperature\",\"transform\":{\"id\":\"976302\"}}},\"id\":\"976305\",\"type\":\"VBar\"},{\"attributes\":{\"active_multi\":null,\"tools\":[{\"id\":\"976429\"},{\"id\":\"976430\"},{\"id\":\"976431\"},{\"id\":\"976432\"},{\"id\":\"976433\"},{\"id\":\"976434\"}]},\"id\":\"976436\",\"type\":\"Toolbar\"},{\"attributes\":{},\"id\":\"976311\",\"type\":\"CategoricalTickFormatter\"},{\"attributes\":{\"below\":[{\"id\":\"976351\"}],\"center\":[{\"id\":\"976353\"},{\"id\":\"976357\"},{\"id\":\"976389\"}],\"height\":400,\"left\":[{\"id\":\"976354\"}],\"renderers\":[{\"id\":\"976377\"},{\"id\":\"976396\"}],\"sizing_mode\":\"scale_width\",\"title\":{\"id\":\"976342\"},\"toolbar\":{\"id\":\"976365\"},\"toolbar_location\":null,\"width\":720,\"x_range\":{\"id\":\"976344\"},\"x_scale\":{\"id\":\"976347\"},\"y_range\":{\"id\":\"976340\"},\"y_scale\":{\"id\":\"976349\"}},\"id\":\"976341\",\"subtype\":\"Figure\",\"type\":\"Plot\"},{\"attributes\":{\"fill_alpha\":{\"value\":0.9},\"fill_color\":{\"value\":\"#1b9e77\"},\"line_color\":{\"value\":\"#1b9e77\"},\"top\":{\"field\":\"count\"},\"width\":{\"value\":0.2},\"x\":{\"field\":\"windspeed\",\"transform\":{\"id\":\"976373\"}}},\"id\":\"976375\",\"type\":\"VBar\"},{\"attributes\":{\"bottom_units\":\"screen\",\"fill_alpha\":0.5,\"fill_color\":\"lightgrey\",\"left_units\":\"screen\",\"level\":\"overlay\",\"line_alpha\":1.0,\"line_color\":\"black\",\"line_dash\":[4,4],\"line_width\":2,\"right_units\":\"screen\",\"syncable\":false,\"top_units\":\"screen\"},\"id\":\"976364\",\"type\":\"BoxAnnotation\"},{\"attributes\":{\"items\":[{\"id\":\"976390\"},{\"id\":\"976410\"}]},\"id\":\"976389\",\"type\":\"Legend\"},{\"attributes\":{\"source\":{\"id\":\"976301\"}},\"id\":\"976307\",\"type\":\"CDSView\"},{\"attributes\":{\"bottom_units\":\"screen\",\"fill_alpha\":0.5,\"fill_color\":\"lightgrey\",\"left_units\":\"screen\",\"level\":\"overlay\",\"line_alpha\":1.0,\"line_color\":\"black\",\"line_dash\":[4,4],\"line_width\":2,\"right_units\":\"screen\",\"syncable\":false,\"top_units\":\"screen\"},\"id\":\"976435\",\"type\":\"BoxAnnotation\"},{\"attributes\":{\"fill_alpha\":{\"value\":0.9},\"fill_color\":{\"value\":\"#1b9e77\"},\"line_color\":{\"value\":\"#1b9e77\"},\"top\":{\"field\":\"count\"},\"width\":{\"value\":0.2},\"x\":{\"field\":\"temperature\",\"transform\":{\"id\":\"976302\"}}},\"id\":\"976304\",\"type\":\"VBar\"},{\"attributes\":{\"data_source\":{\"id\":\"976372\"},\"glyph\":{\"id\":\"976375\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"976376\"},\"view\":{\"id\":\"976378\"}},\"id\":\"976377\",\"type\":\"GlyphRenderer\"},{\"attributes\":{},\"id\":\"976288\",\"type\":\"WheelZoomTool\"},{\"attributes\":{},\"id\":\"976291\",\"type\":\"ResetTool\"},{\"attributes\":{},\"id\":\"976276\",\"type\":\"CategoricalScale\"},{\"attributes\":{},\"id\":\"976278\",\"type\":\"LinearScale\"},{\"attributes\":{\"axis\":{\"id\":\"976283\"},\"dimension\":1,\"ticker\":null},\"id\":\"976286\",\"type\":\"Grid\"},{\"attributes\":{\"below\":[{\"id\":\"976280\"}],\"center\":[{\"id\":\"976282\"},{\"id\":\"976286\"},{\"id\":\"976318\"}],\"height\":400,\"left\":[{\"id\":\"976283\"}],\"renderers\":[{\"id\":\"976306\"},{\"id\":\"976325\"}],\"sizing_mode\":\"scale_width\",\"title\":{\"id\":\"976271\"},\"toolbar\":{\"id\":\"976294\"},\"toolbar_location\":null,\"width\":720,\"x_range\":{\"id\":\"976273\"},\"x_scale\":{\"id\":\"976276\"},\"y_range\":{\"id\":\"976269\"},\"y_scale\":{\"id\":\"976278\"}},\"id\":\"976270\",\"subtype\":\"Figure\",\"type\":\"Plot\"},{\"attributes\":{},\"id\":\"976309\",\"type\":\"AllLabels\"},{\"attributes\":{},\"id\":\"976380\",\"type\":\"AllLabels\"},{\"attributes\":{},\"id\":\"976347\",\"type\":\"CategoricalScale\"},{\"attributes\":{},\"id\":\"976382\",\"type\":\"CategoricalTickFormatter\"},{\"attributes\":{\"overlay\":{\"id\":\"976293\"}},\"id\":\"976289\",\"type\":\"BoxZoomTool\"},{\"attributes\":{},\"id\":\"976312\",\"type\":\"AllLabels\"},{\"attributes\":{\"factors\":[\"0.000000\",\"7.000000\",\"14.000000\",\"21.000000\",\"28.000000\",\"35.000000\",\"42.000000\",\"49.000000\"]},\"id\":\"976344\",\"type\":\"FactorRange\"},{\"attributes\":{\"data_source\":{\"id\":\"976320\"},\"glyph\":{\"id\":\"976323\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"976324\"},\"view\":{\"id\":\"976326\"}},\"id\":\"976325\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"axis\":{\"id\":\"976351\"},\"ticker\":null},\"id\":\"976353\",\"type\":\"Grid\"},{\"attributes\":{},\"id\":\"976281\",\"type\":\"CategoricalTicker\"},{\"attributes\":{\"label\":{\"value\":\"Copenhagen\"},\"renderers\":[{\"id\":\"976377\"}]},\"id\":\"976390\",\"type\":\"LegendItem\"},{\"attributes\":{\"label\":{\"value\":\"New-York\"},\"renderers\":[{\"id\":\"976325\"}]},\"id\":\"976339\",\"type\":\"LegendItem\"},{\"attributes\":{\"fill_alpha\":{\"value\":0.1},\"fill_color\":{\"value\":\"#d95f02\"},\"line_alpha\":{\"value\":0.1},\"line_color\":{\"value\":\"#d95f02\"},\"top\":{\"field\":\"count\"},\"width\":{\"value\":0.2},\"x\":{\"field\":\"temperature\",\"transform\":{\"id\":\"976321\"}}},\"id\":\"976324\",\"type\":\"VBar\"},{\"attributes\":{},\"id\":\"976314\",\"type\":\"BasicTickFormatter\"},{\"attributes\":{\"active_multi\":null,\"tools\":[{\"id\":\"976287\"},{\"id\":\"976288\"},{\"id\":\"976289\"},{\"id\":\"976290\"},{\"id\":\"976291\"},{\"id\":\"976292\"}]},\"id\":\"976294\",\"type\":\"Toolbar\"},{\"attributes\":{\"label\":{\"value\":\"Copenhagen\"},\"renderers\":[{\"id\":\"976448\"}]},\"id\":\"976461\",\"type\":\"LegendItem\"},{\"attributes\":{\"end\":150,\"start\":-150},\"id\":\"976269\",\"type\":\"Range1d\"},{\"attributes\":{},\"id\":\"976478\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"text\":\"Bicycle traffic variation based on temperature\"},\"id\":\"976271\",\"type\":\"Title\"},{\"attributes\":{\"source\":{\"id\":\"976443\"}},\"id\":\"976449\",\"type\":\"CDSView\"},{\"attributes\":{\"axis_label\":\"Temperature in celsius\",\"formatter\":{\"id\":\"976311\"},\"major_label_orientation\":0.7853981633974483,\"major_label_policy\":{\"id\":\"976309\"},\"ticker\":{\"id\":\"976281\"}},\"id\":\"976280\",\"type\":\"CategoricalAxis\"},{\"attributes\":{},\"id\":\"976479\",\"type\":\"Selection\"},{\"attributes\":{},\"id\":\"976454\",\"type\":\"AllLabels\"},{\"attributes\":{\"axis_label\":\"Percentage traffic variation compared to mean traffic\",\"formatter\":{\"id\":\"976314\"},\"major_label_policy\":{\"id\":\"976312\"},\"ticker\":{\"id\":\"976284\"}},\"id\":\"976283\",\"type\":\"LinearAxis\"},{\"attributes\":{},\"id\":\"976284\",\"type\":\"BasicTicker\"},{\"attributes\":{\"source\":{\"id\":\"976320\"}},\"id\":\"976326\",\"type\":\"CDSView\"},{\"attributes\":{},\"id\":\"976433\",\"type\":\"ResetTool\"},{\"attributes\":{},\"id\":\"976292\",\"type\":\"HelpTool\"},{\"attributes\":{},\"id\":\"976352\",\"type\":\"CategoricalTicker\"},{\"attributes\":{},\"id\":\"976434\",\"type\":\"HelpTool\"},{\"attributes\":{},\"id\":\"976290\",\"type\":\"SaveTool\"},{\"attributes\":{\"data\":{\"count\":{\"__ndarray__\":\"K7DfplylUcBBgfWzhXpKwMZO0mc5tD/AnC5m13QBFsCUwuhi+ZgrQAnB7ObpskJAsu3AWu0/QkA2bCLfkyFNQAMJAUakmFBAelQKx/TNQMA=\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[10]},\"index\":[0,1,2,3,4,5,6,7,8,9],\"temperature\":[\"-10.000000\",\"-5.000000\",\"0.000000\",\"5.000000\",\"10.000000\",\"15.000000\",\"20.000000\",\"25.000000\",\"30.000000\",\"35.000000\"]},\"selected\":{\"id\":\"976337\"},\"selection_policy\":{\"id\":\"976336\"}},\"id\":\"976320\",\"type\":\"ColumnDataSource\"},{\"attributes\":{},\"id\":\"976456\",\"type\":\"BasicTickFormatter\"},{\"attributes\":{\"axis\":{\"id\":\"976425\"},\"dimension\":1,\"ticker\":null},\"id\":\"976428\",\"type\":\"Grid\"},{\"attributes\":{\"overlay\":{\"id\":\"976435\"}},\"id\":\"976431\",\"type\":\"BoxZoomTool\"},{\"attributes\":{},\"id\":\"976453\",\"type\":\"CategoricalTickFormatter\"},{\"attributes\":{\"items\":[{\"id\":\"976461\"},{\"id\":\"976481\"}]},\"id\":\"976460\",\"type\":\"Legend\"},{\"attributes\":{\"axis\":{\"id\":\"976280\"},\"ticker\":null},\"id\":\"976282\",\"type\":\"Grid\"},{\"attributes\":{\"end\":100,\"start\":-100},\"id\":\"976340\",\"type\":\"Range1d\"},{\"attributes\":{},\"id\":\"976432\",\"type\":\"SaveTool\"},{\"attributes\":{\"fill_alpha\":{\"value\":0.9},\"fill_color\":{\"value\":\"#d95f02\"},\"line_color\":{\"value\":\"#d95f02\"},\"top\":{\"field\":\"count\"},\"width\":{\"value\":0.2},\"x\":{\"field\":\"temperature\",\"transform\":{\"id\":\"976321\"}}},\"id\":\"976323\",\"type\":\"VBar\"},{\"attributes\":{},\"id\":\"976430\",\"type\":\"WheelZoomTool\"},{\"attributes\":{},\"id\":\"976429\",\"type\":\"PanTool\"},{\"attributes\":{\"axis_label\":\"Percentage traffic variation compared to mean traffic\",\"formatter\":{\"id\":\"976456\"},\"major_label_policy\":{\"id\":\"976454\"},\"ticker\":{\"id\":\"976426\"}},\"id\":\"976425\",\"type\":\"LinearAxis\"},{\"attributes\":{},\"id\":\"976287\",\"type\":\"PanTool\"},{\"attributes\":{},\"id\":\"976426\",\"type\":\"BasicTicker\"}],\"root_ids\":[\"976491\"]},\"title\":\"Bokeh Application\",\"version\":\"2.3.2\"}};\n",
       "  var render_items = [{\"docid\":\"2fff3b6b-0880-48fc-8b9a-095f59d5d6e4\",\"root_ids\":[\"976491\"],\"roots\":{\"976491\":\"7db1a10b-f6df-4168-b750-b9ed8616c998\"}}];\n",
       "  root.Bokeh.embed.embed_items_notebook(docs_json, render_items);\n",
       "\n",
       "  }\n",
       "  if (root.Bokeh !== undefined) {\n",
       "    embed_document(root);\n",
       "  } else {\n",
       "    var attempts = 0;\n",
       "    var timer = setInterval(function(root) {\n",
       "      if (root.Bokeh !== undefined) {\n",
       "        clearInterval(timer);\n",
       "        embed_document(root);\n",
       "      } else {\n",
       "        attempts++;\n",
       "        if (attempts > 100) {\n",
       "          clearInterval(timer);\n",
       "          console.log(\"Bokeh: ERROR: Unable to run BokehJS code because BokehJS library is missing\");\n",
       "        }\n",
       "      }\n",
       "    }, 10, root)\n",
       "  }\n",
       "})(window);"
      ],
      "application/vnd.bokehjs_exec.v0+json": ""
     },
     "metadata": {
      "application/vnd.bokehjs_exec.v0+json": {
       "id": "976491"
      }
     },
     "output_type": "display_data"
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "WARNING:bokeh.core.validation.check:W-1005 (FIXED_SIZING_MODE): 'fixed' sizing mode requires width and height to be set: Column(id='976483', ...)\n",
      "WARNING:bokeh.core.validation.check:W-1005 (FIXED_SIZING_MODE): 'fixed' sizing mode requires width and height to be set: Column(id='976485', ...)\n",
      "WARNING:bokeh.core.validation.check:W-1005 (FIXED_SIZING_MODE): 'fixed' sizing mode requires width and height to be set: Column(id='976487', ...)\n",
      "WARNING:bokeh.core.validation.check:W-1005 (FIXED_SIZING_MODE): 'fixed' sizing mode requires width and height to be set: Row(id='976482', ...)\n",
      "WARNING:bokeh.core.validation.check:W-1005 (FIXED_SIZING_MODE): 'fixed' sizing mode requires width and height to be set: Row(id='976484', ...)\n",
      "WARNING:bokeh.core.validation.check:W-1005 (FIXED_SIZING_MODE): 'fixed' sizing mode requires width and height to be set: Row(id='976486', ...)\n"
     ]
    }
   ],
   "source": [
    "l1 = layout([[f1]], sizing_mode='fixed')\n",
    "l2 = layout([[f2]], sizing_mode='fixed')\n",
    "l3 = layout([[f3]], sizing_mode='fixed')\n",
    "\n",
    "tab1 = Panel(child=l1,title='Temperature')\n",
    "tab2 = Panel(child=l2,title='Wind')\n",
    "tab3 = Panel(child=l3,title='Humidity')\n",
    "#tab3 = Panel(child=l3,title=cities[2])\n",
    "#tabs = Tabs(tabs=[ tab1, tab2, tab3 ])\n",
    "tabs = Tabs(tabs=[ tab1, tab2, tab3 ])\n",
    "show(tabs)\n",
    "saveFigureToJson(tabs, \"./visualizations/vis4.json\")"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "a17f6d95",
   "metadata": {},
   "source": [
    "## Vehicle traffic variation based on temperature, wind and humidity\n",
    "In these visualization we wanted to see how the weather impacted the vehicle traffic. We computed the average number of vehicles counted in an hour using the whole dataset. Then we computed the average vehicles counted in an hour filtered by specific weather conditions. We then computed the percentage variation of the mean as follow:\n",
    "[(mean_specific_weather - mean_normal_day) / mean_normal_day] * 100\n",
    "\n",
    "We then visualized this variation using barplots."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 624,
   "id": "4af0736f",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "['-10.000000' '-5.000000' '0.000000' '5.000000' '10.000000' '15.000000'\n",
      " '20.000000' '25.000000']\n"
     ]
    }
   ],
   "source": [
    "temps = np.arange(-10, 32 + 1, 5)\n",
    "temps_ranges = [(temps[i], temps[i + 1]) for i in range(len(temps)-1)]\n",
    "labels = np.char.mod('%f', temps[:-1])\n",
    "print(labels)\n",
    "#print(temps_ranges)\n",
    "#winds = np.arange(0, 40 + 1, 2.5)\n",
    "#winds_ranges = [(winds[i], winds[i + 1]) for i in range(len(winds)-1)]\n",
    "#print(winds_ranges)\n",
    "\n",
    "traffic_temp = {cities[0]:[], cities[1]: []}\n",
    "\n",
    "f1 = figure(title=\"Vehicle traffic variation based on temperature\", \n",
    "    x_range=labels, y_range=Range1d(-150, 150), toolbar_location=None, plot_width=720, plot_height=400)\n",
    "f1.sizing_mode = 'scale_width'\n",
    "f1.xaxis.major_label_orientation = math.pi/4\n",
    "f1.xaxis.axis_label = 'Temperature in celsius'\n",
    "f1.yaxis.axis_label = 'Percentage traffic variation compared to mean traffic'\n",
    "\n",
    "colors = itertools.cycle(palette)\n",
    "#df['temp'] = df['temp'].fillna(method='ffill')\n",
    "df['count'] = df['count'].fillna(0)\n",
    "for i, city in enumerate(cities):\n",
    "    df_city = df[df['city'] == city]\n",
    "    df_vehicle = df_city[df_city['type'] == 'vehicle']\n",
    "    day_count_avg = df_vehicle.groupby(df_vehicle['time'].dt.date).mean()['count'].mean()\n",
    "    for trange in temps_ranges:\n",
    "        filtered_temp = df_vehicle[(df_vehicle['temp'] >= trange[0]) & (df_vehicle['temp'] <= trange[1])]\n",
    "        day_count_var = filtered_temp.groupby(filtered_temp['time'].dt.date).mean()['count'].mean() / day_count_avg\n",
    "        traffic_temp[city].append(day_count_var -1.0)\n",
    "    \n",
    "    traffic_temp[city] = np.array(traffic_temp[city]) * 100\n",
    "    #traffic_temp[city][np.isnan(traffic_temp[city])] = 0.0 #nan values \n",
    "    #traffic_temp[city] = traffic_temp[city] / np.sqrt(np.sum(traffic_temp[city]**2))\n",
    "    traffic_df = pd.DataFrame({'temperature': labels, 'count': traffic_temp[city]})\n",
    "\n",
    "    traffic_df = ColumnDataSource(traffic_df)\n",
    "    c = next(colors)\n",
    "    f1.vbar(x=dodge('temperature', -0.2 + 0.2 * i, range=f1.x_range),  top=\"count\", width=0.2, source=traffic_df, legend_label=city, fill_color=c, fill_alpha=.9, color=c)\n",
    "#show(f1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 625,
   "id": "9e8c98ab",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "['0.000000' '7.000000' '14.000000' '21.000000' '28.000000' '35.000000'\n",
      " '42.000000' '49.000000']\n"
     ]
    }
   ],
   "source": [
    "winds = np.arange(0, 60 + 1, 7)\n",
    "winds_ranges = [(winds[i], winds[i + 1]) for i in range(len(winds)-1)]\n",
    "labels = np.char.mod('%f', winds[:-1])\n",
    "print(labels)\n",
    "\n",
    "traffic_temp = {cities[0]:[], cities[1]: []}\n",
    "\n",
    "f2 = figure(title=\"Vehicle traffic variation based on wind speed\", \n",
    "    x_range=labels, y_range=Range1d(-100, 100), toolbar_location=None, plot_width=720, plot_height=400)\n",
    "f2.sizing_mode = 'scale_width'\n",
    "f2.xaxis.major_label_orientation = math.pi/4\n",
    "f2.xaxis.axis_label = 'Wind speed in m/s'\n",
    "f2.yaxis.axis_label = 'Percentage traffic variation compared to mean traffic'\n",
    "\n",
    "colors = itertools.cycle(palette)\n",
    "#df['temp'] = df['temp'].fillna(method='ffill')\n",
    "df['count'] = df['count'].fillna(0)\n",
    "for i, city in enumerate(cities):\n",
    "    df_city = df[df['city'] == city]\n",
    "    df_vehicle = df_city[df_city['type'] == 'vehicle']\n",
    "    day_count_avg = df_vehicle.groupby(df_vehicle['time'].dt.date).mean()['count'].mean()\n",
    "    for wrange in winds_ranges:\n",
    "        filtered_temp = df_vehicle[(df_vehicle['wspd'] >= wrange[0]) & (df_vehicle['wspd'] <= wrange[1])]\n",
    "        day_count_var = filtered_temp.groupby(filtered_temp['time'].dt.date).mean()['count'].mean() / day_count_avg\n",
    "        traffic_temp[city].append(day_count_var - 1.0)\n",
    "    \n",
    "    traffic_temp[city] = np.array(traffic_temp[city]) * 100\n",
    "    traffic_temp[city][np.isnan(traffic_temp[city])] = 0.0 #nan values \n",
    "    #traffic_temp[city] = traffic_temp[city] / np.sqrt(np.sum(traffic_temp[city]**2))\n",
    "    traffic_df = pd.DataFrame({'windspeed': labels, 'count': traffic_temp[city]})\n",
    "\n",
    "    traffic_df = ColumnDataSource(traffic_df)\n",
    "    c = next(colors)\n",
    "    f2.vbar(x=dodge('windspeed', -0.2 + 0.2 * i, range=f2.x_range),  top=\"count\", width=0.2, source=traffic_df, legend_label=city, fill_color=c, fill_alpha=.9, color=c)\n",
    "#show(f2)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 626,
   "id": "269ea17a",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "['0.000000' '7.000000' '14.000000' '21.000000' '28.000000' '35.000000'\n",
      " '42.000000' '49.000000' '56.000000' '63.000000' '70.000000' '77.000000'\n",
      " '84.000000' '91.000000']\n"
     ]
    }
   ],
   "source": [
    "rhum = np.arange(0, 100 + 1, 7)\n",
    "rhum_ranges = [(rhum[i], rhum[i + 1]) for i in range(len(rhum)-1)]\n",
    "labels = np.char.mod('%f', rhum[:-1])\n",
    "print(labels)\n",
    "\n",
    "traffic_rhum = {cities[0]:[], cities[1]: []}\n",
    "\n",
    "f3 = figure(title=\"Vehicle traffic variation based on humidity\", \n",
    "    x_range=labels, y_range=Range1d(-100, 100), toolbar_location=None, plot_width=720, plot_height=400)\n",
    "f3.sizing_mode = 'scale_width'\n",
    "f3.xaxis.major_label_orientation = math.pi/4\n",
    "f3.xaxis.axis_label = 'Air humidity %'\n",
    "f3.yaxis.axis_label = 'Percentage traffic variation compared to mean traffic'\n",
    "\n",
    "colors = itertools.cycle(palette)\n",
    "#df['temp'] = df['temp'].fillna(method='ffill')\n",
    "df['rhum'] = df['rhum'].fillna(0)\n",
    "df['count'] = df['count'].fillna(0)\n",
    "for i, city in enumerate(cities):\n",
    "    df_city = df[df['city'] == city]\n",
    "    df_vehicle = df_city[df_city['type'] == 'vehicle']\n",
    "    day_count_avg = df_vehicle.groupby(df_vehicle['time'].dt.date).mean()['count'].mean()\n",
    "    for rhrange in rhum_ranges:\n",
    "        filtered_rhum = df_vehicle[(df_vehicle['rhum'] >= rhrange[0]) & (df_vehicle['rhum'] <= rhrange[1])]\n",
    "        day_count_var = filtered_rhum.groupby(filtered_rhum['time'].dt.date).mean()['count'].mean() / day_count_avg\n",
    "        traffic_rhum[city].append(day_count_var - 1.0)\n",
    "    \n",
    "    traffic_rhum[city] = np.array(traffic_rhum[city]) * 100\n",
    "    traffic_rhum[city][np.isnan(traffic_rhum[city])] = 0.0 #nan values \n",
    "    #traffic_temp[city] = traffic_temp[city] / np.sqrt(np.sum(traffic_temp[city]**2))\n",
    "    traffic_df = pd.DataFrame({'rhum': labels, 'count': traffic_rhum[city]})\n",
    "\n",
    "    traffic_df = ColumnDataSource(traffic_df)\n",
    "    c = next(colors)\n",
    "    f3.vbar(x=dodge('rhum', -0.2 + 0.2 * i, range=f3.x_range),  top=\"count\", width=0.2, source=traffic_df, legend_label=city, fill_color=c, fill_alpha=.9, color=c)\n",
    "#show(f2)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 627,
   "id": "8de8260b",
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "WARNING:bokeh.core.validation.check:W-1005 (FIXED_SIZING_MODE): 'fixed' sizing mode requires width and height to be set: Column(id='983235', ...)\n",
      "WARNING:bokeh.core.validation.check:W-1005 (FIXED_SIZING_MODE): 'fixed' sizing mode requires width and height to be set: Column(id='983237', ...)\n",
      "WARNING:bokeh.core.validation.check:W-1005 (FIXED_SIZING_MODE): 'fixed' sizing mode requires width and height to be set: Column(id='983239', ...)\n",
      "WARNING:bokeh.core.validation.check:W-1005 (FIXED_SIZING_MODE): 'fixed' sizing mode requires width and height to be set: Row(id='983234', ...)\n",
      "WARNING:bokeh.core.validation.check:W-1005 (FIXED_SIZING_MODE): 'fixed' sizing mode requires width and height to be set: Row(id='983236', ...)\n",
      "WARNING:bokeh.core.validation.check:W-1005 (FIXED_SIZING_MODE): 'fixed' sizing mode requires width and height to be set: Row(id='983238', ...)\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "\n",
       "\n",
       "\n",
       "\n",
       "\n",
       "\n",
       "  <div class=\"bk-root\" id=\"8d56017b-2ca4-4a8f-8a36-4de985e5f670\" data-root-id=\"983243\"></div>\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "application/javascript": [
       "(function(root) {\n",
       "  function embed_document(root) {\n",
       "    \n",
       "  var docs_json = {\"fd89c32b-c95f-4168-b291-60d4beedf1cc\":{\"defs\":[],\"roots\":{\"references\":[{\"attributes\":{\"tabs\":[{\"id\":\"983240\"},{\"id\":\"983241\"},{\"id\":\"983242\"}]},\"id\":\"983243\",\"type\":\"Tabs\"},{\"attributes\":{\"factors\":[\"0.000000\",\"7.000000\",\"14.000000\",\"21.000000\",\"28.000000\",\"35.000000\",\"42.000000\",\"49.000000\"]},\"id\":\"983096\",\"type\":\"FactorRange\"},{\"attributes\":{},\"id\":\"983206\",\"type\":\"AllLabels\"},{\"attributes\":{},\"id\":\"983185\",\"type\":\"ResetTool\"},{\"attributes\":{},\"id\":\"983186\",\"type\":\"HelpTool\"},{\"attributes\":{},\"id\":\"983175\",\"type\":\"CategoricalTicker\"},{\"attributes\":{\"children\":[{\"id\":\"983164\"}],\"sizing_mode\":\"fixed\"},\"id\":\"983238\",\"type\":\"Row\"},{\"attributes\":{},\"id\":\"983028\",\"type\":\"CategoricalScale\"},{\"attributes\":{},\"id\":\"983170\",\"type\":\"CategoricalScale\"},{\"attributes\":{\"active_multi\":null,\"tools\":[{\"id\":\"983181\"},{\"id\":\"983182\"},{\"id\":\"983183\"},{\"id\":\"983184\"},{\"id\":\"983185\"},{\"id\":\"983186\"}]},\"id\":\"983188\",\"type\":\"Toolbar\"},{\"attributes\":{\"range\":{\"id\":\"983025\"},\"value\":-0.2},\"id\":\"983054\",\"type\":\"Dodge\"},{\"attributes\":{\"factors\":[\"0.000000\",\"7.000000\",\"14.000000\",\"21.000000\",\"28.000000\",\"35.000000\",\"42.000000\",\"49.000000\",\"56.000000\",\"63.000000\",\"70.000000\",\"77.000000\",\"84.000000\",\"91.000000\"]},\"id\":\"983167\",\"type\":\"FactorRange\"},{\"attributes\":{},\"id\":\"983181\",\"type\":\"PanTool\"},{\"attributes\":{\"axis_label\":\"Percentage traffic variation compared to mean traffic\",\"formatter\":{\"id\":\"983208\"},\"major_label_policy\":{\"id\":\"983206\"},\"ticker\":{\"id\":\"983178\"}},\"id\":\"983177\",\"type\":\"LinearAxis\"},{\"attributes\":{},\"id\":\"983178\",\"type\":\"BasicTicker\"},{\"attributes\":{\"overlay\":{\"id\":\"983187\"}},\"id\":\"983183\",\"type\":\"BoxZoomTool\"},{\"attributes\":{\"children\":[{\"id\":\"983093\"}],\"sizing_mode\":\"fixed\"},\"id\":\"983236\",\"type\":\"Row\"},{\"attributes\":{},\"id\":\"983208\",\"type\":\"BasicTickFormatter\"},{\"attributes\":{},\"id\":\"983030\",\"type\":\"LinearScale\"},{\"attributes\":{},\"id\":\"983184\",\"type\":\"SaveTool\"},{\"attributes\":{},\"id\":\"983172\",\"type\":\"LinearScale\"},{\"attributes\":{\"fill_alpha\":{\"value\":0.1},\"fill_color\":{\"value\":\"#1b9e77\"},\"line_alpha\":{\"value\":0.1},\"line_color\":{\"value\":\"#1b9e77\"},\"top\":{\"field\":\"count\"},\"width\":{\"value\":0.2},\"x\":{\"field\":\"rhum\",\"transform\":{\"id\":\"983196\"}}},\"id\":\"983199\",\"type\":\"VBar\"},{\"attributes\":{},\"id\":\"983182\",\"type\":\"WheelZoomTool\"},{\"attributes\":{\"child\":{\"id\":\"983235\"},\"title\":\"Temperature\"},\"id\":\"983240\",\"type\":\"Panel\"},{\"attributes\":{\"axis\":{\"id\":\"983174\"},\"ticker\":null},\"id\":\"983176\",\"type\":\"Grid\"},{\"attributes\":{\"axis\":{\"id\":\"983177\"},\"dimension\":1,\"ticker\":null},\"id\":\"983180\",\"type\":\"Grid\"},{\"attributes\":{\"below\":[{\"id\":\"983174\"}],\"center\":[{\"id\":\"983176\"},{\"id\":\"983180\"},{\"id\":\"983212\"}],\"height\":400,\"left\":[{\"id\":\"983177\"}],\"renderers\":[{\"id\":\"983200\"},{\"id\":\"983219\"}],\"sizing_mode\":\"scale_width\",\"title\":{\"id\":\"983165\"},\"toolbar\":{\"id\":\"983188\"},\"toolbar_location\":null,\"width\":720,\"x_range\":{\"id\":\"983167\"},\"x_scale\":{\"id\":\"983170\"},\"y_range\":{\"id\":\"983163\"},\"y_scale\":{\"id\":\"983172\"}},\"id\":\"983164\",\"subtype\":\"Figure\",\"type\":\"Plot\"},{\"attributes\":{\"end\":100,\"start\":-100},\"id\":\"983163\",\"type\":\"Range1d\"},{\"attributes\":{\"label\":{\"value\":\"New-York\"},\"renderers\":[{\"id\":\"983148\"}]},\"id\":\"983162\",\"type\":\"LegendItem\"},{\"attributes\":{\"axis_label\":\"Air humidity %\",\"formatter\":{\"id\":\"983205\"},\"major_label_orientation\":0.7853981633974483,\"major_label_policy\":{\"id\":\"983203\"},\"ticker\":{\"id\":\"983175\"}},\"id\":\"983174\",\"type\":\"CategoricalAxis\"},{\"attributes\":{\"data_source\":{\"id\":\"983214\"},\"glyph\":{\"id\":\"983217\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"983218\"},\"view\":{\"id\":\"983220\"}},\"id\":\"983219\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"text\":\"Vehicle traffic variation based on humidity\"},\"id\":\"983165\",\"type\":\"Title\"},{\"attributes\":{\"children\":[{\"id\":\"983238\"}],\"sizing_mode\":\"fixed\"},\"id\":\"983239\",\"type\":\"Column\"},{\"attributes\":{\"range\":{\"id\":\"983096\"}},\"id\":\"983144\",\"type\":\"Dodge\"},{\"attributes\":{\"fill_alpha\":{\"value\":0.1},\"fill_color\":{\"value\":\"#d95f02\"},\"line_alpha\":{\"value\":0.1},\"line_color\":{\"value\":\"#d95f02\"},\"top\":{\"field\":\"count\"},\"width\":{\"value\":0.2},\"x\":{\"field\":\"windspeed\",\"transform\":{\"id\":\"983144\"}}},\"id\":\"983147\",\"type\":\"VBar\"},{\"attributes\":{\"range\":{\"id\":\"983167\"},\"value\":-0.2},\"id\":\"983196\",\"type\":\"Dodge\"},{\"attributes\":{},\"id\":\"983230\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"children\":[{\"id\":\"983234\"}],\"sizing_mode\":\"fixed\"},\"id\":\"983235\",\"type\":\"Column\"},{\"attributes\":{\"label\":{\"value\":\"Copenhagen\"},\"renderers\":[{\"id\":\"983200\"}]},\"id\":\"983213\",\"type\":\"LegendItem\"},{\"attributes\":{\"fill_alpha\":{\"value\":0.9},\"fill_color\":{\"value\":\"#1b9e77\"},\"line_color\":{\"value\":\"#1b9e77\"},\"top\":{\"field\":\"count\"},\"width\":{\"value\":0.2},\"x\":{\"field\":\"rhum\",\"transform\":{\"id\":\"983196\"}}},\"id\":\"983198\",\"type\":\"VBar\"},{\"attributes\":{\"source\":{\"id\":\"983195\"}},\"id\":\"983201\",\"type\":\"CDSView\"},{\"attributes\":{\"fill_alpha\":{\"value\":0.9},\"fill_color\":{\"value\":\"#d95f02\"},\"line_color\":{\"value\":\"#d95f02\"},\"top\":{\"field\":\"count\"},\"width\":{\"value\":0.2},\"x\":{\"field\":\"rhum\",\"transform\":{\"id\":\"983215\"}}},\"id\":\"983217\",\"type\":\"VBar\"},{\"attributes\":{\"data_source\":{\"id\":\"983195\"},\"glyph\":{\"id\":\"983198\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"983199\"},\"view\":{\"id\":\"983201\"}},\"id\":\"983200\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"data\":{\"count\":{\"__ndarray__\":\"K4X6ect9QMAAAAAAAAAAAFUNWsYHiRRAgkzy7+ZJCcDKCFuDojM7QJ117C1V+UhAzYNtOhtpRkBfHr2D7iFHQEahRMZ8XUNAXlZdcHqwPUAsVq2A/yIrQAz5LnxrGBDAitpJT9f5M8DlHwurueI/wA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[14]},\"index\":[0,1,2,3,4,5,6,7,8,9,10,11,12,13],\"rhum\":[\"0.000000\",\"7.000000\",\"14.000000\",\"21.000000\",\"28.000000\",\"35.000000\",\"42.000000\",\"49.000000\",\"56.000000\",\"63.000000\",\"70.000000\",\"77.000000\",\"84.000000\",\"91.000000\"]},\"selected\":{\"id\":\"983210\"},\"selection_policy\":{\"id\":\"983209\"}},\"id\":\"983195\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"data_source\":{\"id\":\"983143\"},\"glyph\":{\"id\":\"983146\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"983147\"},\"view\":{\"id\":\"983149\"}},\"id\":\"983148\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"child\":{\"id\":\"983237\"},\"title\":\"Wind\"},\"id\":\"983241\",\"type\":\"Panel\"},{\"attributes\":{\"fill_alpha\":{\"value\":0.9},\"fill_color\":{\"value\":\"#d95f02\"},\"line_color\":{\"value\":\"#d95f02\"},\"top\":{\"field\":\"count\"},\"width\":{\"value\":0.2},\"x\":{\"field\":\"windspeed\",\"transform\":{\"id\":\"983144\"}}},\"id\":\"983146\",\"type\":\"VBar\"},{\"attributes\":{\"source\":{\"id\":\"983143\"}},\"id\":\"983149\",\"type\":\"CDSView\"},{\"attributes\":{\"data\":{\"count\":{\"__ndarray__\":\"MRcPRxuZMsDArAzHBBXuP5WXils44xxABMTxWc32CEAJuYAvrUMwQO1vGek3aUTAeqkGm+OJIUAAAAAAAAAAAA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[8]},\"index\":[0,1,2,3,4,5,6,7],\"windspeed\":[\"0.000000\",\"7.000000\",\"14.000000\",\"21.000000\",\"28.000000\",\"35.000000\",\"42.000000\",\"49.000000\"]},\"selected\":{\"id\":\"983160\"},\"selection_policy\":{\"id\":\"983159\"}},\"id\":\"983143\",\"type\":\"ColumnDataSource\"},{\"attributes\":{},\"id\":\"983231\",\"type\":\"Selection\"},{\"attributes\":{\"data\":{\"count\":{\"__ndarray__\":\"AAAAAAAAAAAAAAAAAAAAAE6W7RqcpTBADxZuTLHyHEAK8gxpDO9QQHAhVsx67do/XsmFdjjG+b+ZwwMxkOQCwNcA4b4i1BjAHWCOgSycI0AL2wqSU+ArwChHnu24OSTA9jc21dq7JMCwEERY3skQwA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[14]},\"index\":[0,1,2,3,4,5,6,7,8,9,10,11,12,13],\"rhum\":[\"0.000000\",\"7.000000\",\"14.000000\",\"21.000000\",\"28.000000\",\"35.000000\",\"42.000000\",\"49.000000\",\"56.000000\",\"63.000000\",\"70.000000\",\"77.000000\",\"84.000000\",\"91.000000\"]},\"selected\":{\"id\":\"983231\"},\"selection_policy\":{\"id\":\"983230\"}},\"id\":\"983214\",\"type\":\"ColumnDataSource\"},{\"attributes\":{},\"id\":\"983159\",\"type\":\"UnionRenderers\"},{\"attributes\":{},\"id\":\"983160\",\"type\":\"Selection\"},{\"attributes\":{\"fill_alpha\":{\"value\":0.1},\"fill_color\":{\"value\":\"#d95f02\"},\"line_alpha\":{\"value\":0.1},\"line_color\":{\"value\":\"#d95f02\"},\"top\":{\"field\":\"count\"},\"width\":{\"value\":0.2},\"x\":{\"field\":\"rhum\",\"transform\":{\"id\":\"983215\"}}},\"id\":\"983218\",\"type\":\"VBar\"},{\"attributes\":{\"children\":[{\"id\":\"983022\"}],\"sizing_mode\":\"fixed\"},\"id\":\"983234\",\"type\":\"Row\"},{\"attributes\":{\"items\":[{\"id\":\"983213\"},{\"id\":\"983233\"}]},\"id\":\"983212\",\"type\":\"Legend\"},{\"attributes\":{\"label\":{\"value\":\"New-York\"},\"renderers\":[{\"id\":\"983219\"}]},\"id\":\"983233\",\"type\":\"LegendItem\"},{\"attributes\":{\"child\":{\"id\":\"983239\"},\"title\":\"Humidity\"},\"id\":\"983242\",\"type\":\"Panel\"},{\"attributes\":{\"source\":{\"id\":\"983214\"}},\"id\":\"983220\",\"type\":\"CDSView\"},{\"attributes\":{\"active_multi\":null,\"tools\":[{\"id\":\"983110\"},{\"id\":\"983111\"},{\"id\":\"983112\"},{\"id\":\"983113\"},{\"id\":\"983114\"},{\"id\":\"983115\"}]},\"id\":\"983117\",\"type\":\"Toolbar\"},{\"attributes\":{},\"id\":\"983203\",\"type\":\"AllLabels\"},{\"attributes\":{\"fill_alpha\":{\"value\":0.1},\"fill_color\":{\"value\":\"#1b9e77\"},\"line_alpha\":{\"value\":0.1},\"line_color\":{\"value\":\"#1b9e77\"},\"top\":{\"field\":\"count\"},\"width\":{\"value\":0.2},\"x\":{\"field\":\"windspeed\",\"transform\":{\"id\":\"983125\"}}},\"id\":\"983128\",\"type\":\"VBar\"},{\"attributes\":{\"text\":\"Vehicle traffic variation based on temperature\"},\"id\":\"983023\",\"type\":\"Title\"},{\"attributes\":{\"factors\":[\"-10.000000\",\"-5.000000\",\"0.000000\",\"5.000000\",\"10.000000\",\"15.000000\",\"20.000000\",\"25.000000\"]},\"id\":\"983025\",\"type\":\"FactorRange\"},{\"attributes\":{\"axis\":{\"id\":\"983032\"},\"ticker\":null},\"id\":\"983034\",\"type\":\"Grid\"},{\"attributes\":{},\"id\":\"983113\",\"type\":\"SaveTool\"},{\"attributes\":{\"range\":{\"id\":\"983167\"}},\"id\":\"983215\",\"type\":\"Dodge\"},{\"attributes\":{},\"id\":\"983107\",\"type\":\"BasicTicker\"},{\"attributes\":{\"axis_label\":\"Percentage traffic variation compared to mean traffic\",\"formatter\":{\"id\":\"983066\"},\"major_label_policy\":{\"id\":\"983064\"},\"ticker\":{\"id\":\"983036\"}},\"id\":\"983035\",\"type\":\"LinearAxis\"},{\"attributes\":{\"fill_alpha\":{\"value\":0.1},\"fill_color\":{\"value\":\"#1b9e77\"},\"line_alpha\":{\"value\":0.1},\"line_color\":{\"value\":\"#1b9e77\"},\"top\":{\"field\":\"count\"},\"width\":{\"value\":0.2},\"x\":{\"field\":\"temperature\",\"transform\":{\"id\":\"983054\"}}},\"id\":\"983057\",\"type\":\"VBar\"},{\"attributes\":{},\"id\":\"983044\",\"type\":\"HelpTool\"},{\"attributes\":{},\"id\":\"983101\",\"type\":\"LinearScale\"},{\"attributes\":{\"axis\":{\"id\":\"983035\"},\"dimension\":1,\"ticker\":null},\"id\":\"983038\",\"type\":\"Grid\"},{\"attributes\":{},\"id\":\"983114\",\"type\":\"ResetTool\"},{\"attributes\":{},\"id\":\"983210\",\"type\":\"Selection\"},{\"attributes\":{\"axis\":{\"id\":\"983106\"},\"dimension\":1,\"ticker\":null},\"id\":\"983109\",\"type\":\"Grid\"},{\"attributes\":{},\"id\":\"983036\",\"type\":\"BasicTicker\"},{\"attributes\":{\"end\":150,\"start\":-150},\"id\":\"983021\",\"type\":\"Range1d\"},{\"attributes\":{},\"id\":\"983040\",\"type\":\"WheelZoomTool\"},{\"attributes\":{},\"id\":\"983115\",\"type\":\"HelpTool\"},{\"attributes\":{},\"id\":\"983039\",\"type\":\"PanTool\"},{\"attributes\":{},\"id\":\"983104\",\"type\":\"CategoricalTicker\"},{\"attributes\":{\"range\":{\"id\":\"983096\"},\"value\":-0.2},\"id\":\"983125\",\"type\":\"Dodge\"},{\"attributes\":{\"overlay\":{\"id\":\"983045\"}},\"id\":\"983041\",\"type\":\"BoxZoomTool\"},{\"attributes\":{},\"id\":\"983042\",\"type\":\"SaveTool\"},{\"attributes\":{},\"id\":\"983043\",\"type\":\"ResetTool\"},{\"attributes\":{\"overlay\":{\"id\":\"983116\"}},\"id\":\"983112\",\"type\":\"BoxZoomTool\"},{\"attributes\":{\"label\":{\"value\":\"Copenhagen\"},\"renderers\":[{\"id\":\"983058\"}]},\"id\":\"983071\",\"type\":\"LegendItem\"},{\"attributes\":{},\"id\":\"983139\",\"type\":\"Selection\"},{\"attributes\":{},\"id\":\"983209\",\"type\":\"UnionRenderers\"},{\"attributes\":{},\"id\":\"983111\",\"type\":\"WheelZoomTool\"},{\"attributes\":{},\"id\":\"983099\",\"type\":\"CategoricalScale\"},{\"attributes\":{\"bottom_units\":\"screen\",\"fill_alpha\":0.5,\"fill_color\":\"lightgrey\",\"left_units\":\"screen\",\"level\":\"overlay\",\"line_alpha\":1.0,\"line_color\":\"black\",\"line_dash\":[4,4],\"line_width\":2,\"right_units\":\"screen\",\"syncable\":false,\"top_units\":\"screen\"},\"id\":\"983187\",\"type\":\"BoxAnnotation\"},{\"attributes\":{\"fill_alpha\":{\"value\":0.9},\"fill_color\":{\"value\":\"#1b9e77\"},\"line_color\":{\"value\":\"#1b9e77\"},\"top\":{\"field\":\"count\"},\"width\":{\"value\":0.2},\"x\":{\"field\":\"windspeed\",\"transform\":{\"id\":\"983125\"}}},\"id\":\"983127\",\"type\":\"VBar\"},{\"attributes\":{\"items\":[{\"id\":\"983071\"},{\"id\":\"983091\"}]},\"id\":\"983070\",\"type\":\"Legend\"},{\"attributes\":{},\"id\":\"983110\",\"type\":\"PanTool\"},{\"attributes\":{\"axis\":{\"id\":\"983103\"},\"ticker\":null},\"id\":\"983105\",\"type\":\"Grid\"},{\"attributes\":{\"fill_alpha\":{\"value\":0.9},\"fill_color\":{\"value\":\"#1b9e77\"},\"line_color\":{\"value\":\"#1b9e77\"},\"top\":{\"field\":\"count\"},\"width\":{\"value\":0.2},\"x\":{\"field\":\"temperature\",\"transform\":{\"id\":\"983054\"}}},\"id\":\"983056\",\"type\":\"VBar\"},{\"attributes\":{\"source\":{\"id\":\"983124\"}},\"id\":\"983130\",\"type\":\"CDSView\"},{\"attributes\":{\"bottom_units\":\"screen\",\"fill_alpha\":0.5,\"fill_color\":\"lightgrey\",\"left_units\":\"screen\",\"level\":\"overlay\",\"line_alpha\":1.0,\"line_color\":\"black\",\"line_dash\":[4,4],\"line_width\":2,\"right_units\":\"screen\",\"syncable\":false,\"top_units\":\"screen\"},\"id\":\"983045\",\"type\":\"BoxAnnotation\"},{\"attributes\":{\"end\":100,\"start\":-100},\"id\":\"983092\",\"type\":\"Range1d\"},{\"attributes\":{\"data_source\":{\"id\":\"983124\"},\"glyph\":{\"id\":\"983127\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"983128\"},\"view\":{\"id\":\"983130\"}},\"id\":\"983129\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"source\":{\"id\":\"983053\"}},\"id\":\"983059\",\"type\":\"CDSView\"},{\"attributes\":{\"label\":{\"value\":\"New-York\"},\"renderers\":[{\"id\":\"983077\"}]},\"id\":\"983091\",\"type\":\"LegendItem\"},{\"attributes\":{\"data\":{\"count\":{\"__ndarray__\":\"vsUW4bKDM8D/xLgMOLgswGjHbEsOt+s/UKcRqaw2H0Do6ou7gt8hQD2UVWqFAx1A/v4LhEXcJkBbM15dlWg2wA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[8]},\"index\":[0,1,2,3,4,5,6,7],\"windspeed\":[\"0.000000\",\"7.000000\",\"14.000000\",\"21.000000\",\"28.000000\",\"35.000000\",\"42.000000\",\"49.000000\"]},\"selected\":{\"id\":\"983139\"},\"selection_policy\":{\"id\":\"983138\"}},\"id\":\"983124\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"data_source\":{\"id\":\"983053\"},\"glyph\":{\"id\":\"983056\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"983057\"},\"view\":{\"id\":\"983059\"}},\"id\":\"983058\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"data\":{\"count\":{\"__ndarray__\":\"Fayetb+qNcC2DVlFSxghwLVYxsSXrzrA3Lxo7idrLcAk+E+OZCIkwLdJOT+6DDRAK9tKwHuOR0AAJdTB4TJOQA==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[8]},\"index\":[0,1,2,3,4,5,6,7],\"temperature\":[\"-10.000000\",\"-5.000000\",\"0.000000\",\"5.000000\",\"10.000000\",\"15.000000\",\"20.000000\",\"25.000000\"]},\"selected\":{\"id\":\"983068\"},\"selection_policy\":{\"id\":\"983067\"}},\"id\":\"983053\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"axis_label\":\"Wind speed in m/s\",\"formatter\":{\"id\":\"983134\"},\"major_label_orientation\":0.7853981633974483,\"major_label_policy\":{\"id\":\"983132\"},\"ticker\":{\"id\":\"983104\"}},\"id\":\"983103\",\"type\":\"CategoricalAxis\"},{\"attributes\":{\"axis_label\":\"Percentage traffic variation compared to mean traffic\",\"formatter\":{\"id\":\"983137\"},\"major_label_policy\":{\"id\":\"983135\"},\"ticker\":{\"id\":\"983107\"}},\"id\":\"983106\",\"type\":\"LinearAxis\"},{\"attributes\":{\"fill_alpha\":{\"value\":0.1},\"fill_color\":{\"value\":\"#d95f02\"},\"line_alpha\":{\"value\":0.1},\"line_color\":{\"value\":\"#d95f02\"},\"top\":{\"field\":\"count\"},\"width\":{\"value\":0.2},\"x\":{\"field\":\"temperature\",\"transform\":{\"id\":\"983073\"}}},\"id\":\"983076\",\"type\":\"VBar\"},{\"attributes\":{\"below\":[{\"id\":\"983103\"}],\"center\":[{\"id\":\"983105\"},{\"id\":\"983109\"},{\"id\":\"983141\"}],\"height\":400,\"left\":[{\"id\":\"983106\"}],\"renderers\":[{\"id\":\"983129\"},{\"id\":\"983148\"}],\"sizing_mode\":\"scale_width\",\"title\":{\"id\":\"983094\"},\"toolbar\":{\"id\":\"983117\"},\"toolbar_location\":null,\"width\":720,\"x_range\":{\"id\":\"983096\"},\"x_scale\":{\"id\":\"983099\"},\"y_range\":{\"id\":\"983092\"},\"y_scale\":{\"id\":\"983101\"}},\"id\":\"983093\",\"subtype\":\"Figure\",\"type\":\"Plot\"},{\"attributes\":{},\"id\":\"983138\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"text\":\"Vehicle traffic variation based on wind speed\"},\"id\":\"983094\",\"type\":\"Title\"},{\"attributes\":{},\"id\":\"983205\",\"type\":\"CategoricalTickFormatter\"},{\"attributes\":{},\"id\":\"983132\",\"type\":\"AllLabels\"},{\"attributes\":{\"children\":[{\"id\":\"983236\"}],\"sizing_mode\":\"fixed\"},\"id\":\"983237\",\"type\":\"Column\"},{\"attributes\":{\"bottom_units\":\"screen\",\"fill_alpha\":0.5,\"fill_color\":\"lightgrey\",\"left_units\":\"screen\",\"level\":\"overlay\",\"line_alpha\":1.0,\"line_color\":\"black\",\"line_dash\":[4,4],\"line_width\":2,\"right_units\":\"screen\",\"syncable\":false,\"top_units\":\"screen\"},\"id\":\"983116\",\"type\":\"BoxAnnotation\"},{\"attributes\":{\"data_source\":{\"id\":\"983072\"},\"glyph\":{\"id\":\"983075\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"983076\"},\"view\":{\"id\":\"983078\"}},\"id\":\"983077\",\"type\":\"GlyphRenderer\"},{\"attributes\":{},\"id\":\"983134\",\"type\":\"CategoricalTickFormatter\"},{\"attributes\":{},\"id\":\"983061\",\"type\":\"AllLabels\"},{\"attributes\":{},\"id\":\"983063\",\"type\":\"CategoricalTickFormatter\"},{\"attributes\":{\"active_multi\":null,\"tools\":[{\"id\":\"983039\"},{\"id\":\"983040\"},{\"id\":\"983041\"},{\"id\":\"983042\"},{\"id\":\"983043\"},{\"id\":\"983044\"}]},\"id\":\"983046\",\"type\":\"Toolbar\"},{\"attributes\":{},\"id\":\"983135\",\"type\":\"AllLabels\"},{\"attributes\":{},\"id\":\"983137\",\"type\":\"BasicTickFormatter\"},{\"attributes\":{},\"id\":\"983064\",\"type\":\"AllLabels\"},{\"attributes\":{\"fill_alpha\":{\"value\":0.9},\"fill_color\":{\"value\":\"#d95f02\"},\"line_color\":{\"value\":\"#d95f02\"},\"top\":{\"field\":\"count\"},\"width\":{\"value\":0.2},\"x\":{\"field\":\"temperature\",\"transform\":{\"id\":\"983073\"}}},\"id\":\"983075\",\"type\":\"VBar\"},{\"attributes\":{},\"id\":\"983033\",\"type\":\"CategoricalTicker\"},{\"attributes\":{},\"id\":\"983066\",\"type\":\"BasicTickFormatter\"},{\"attributes\":{\"source\":{\"id\":\"983072\"}},\"id\":\"983078\",\"type\":\"CDSView\"},{\"attributes\":{\"data\":{\"count\":{\"__ndarray__\":\"AAAAAAAA+H9ACRrcyNvmP3KTHzSTty9AJ0MpdEstJkA991dCX7wvwAsMD+04fiPAkv46/yS1J0AAAAAAAAD4fw==\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[8]},\"index\":[0,1,2,3,4,5,6,7],\"temperature\":[\"-10.000000\",\"-5.000000\",\"0.000000\",\"5.000000\",\"10.000000\",\"15.000000\",\"20.000000\",\"25.000000\"]},\"selected\":{\"id\":\"983089\"},\"selection_policy\":{\"id\":\"983088\"}},\"id\":\"983072\",\"type\":\"ColumnDataSource\"},{\"attributes\":{},\"id\":\"983068\",\"type\":\"Selection\"},{\"attributes\":{},\"id\":\"983067\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"items\":[{\"id\":\"983142\"},{\"id\":\"983162\"}]},\"id\":\"983141\",\"type\":\"Legend\"},{\"attributes\":{\"range\":{\"id\":\"983025\"}},\"id\":\"983073\",\"type\":\"Dodge\"},{\"attributes\":{},\"id\":\"983088\",\"type\":\"UnionRenderers\"},{\"attributes\":{},\"id\":\"983089\",\"type\":\"Selection\"},{\"attributes\":{\"below\":[{\"id\":\"983032\"}],\"center\":[{\"id\":\"983034\"},{\"id\":\"983038\"},{\"id\":\"983070\"}],\"height\":400,\"left\":[{\"id\":\"983035\"}],\"renderers\":[{\"id\":\"983058\"},{\"id\":\"983077\"}],\"sizing_mode\":\"scale_width\",\"title\":{\"id\":\"983023\"},\"toolbar\":{\"id\":\"983046\"},\"toolbar_location\":null,\"width\":720,\"x_range\":{\"id\":\"983025\"},\"x_scale\":{\"id\":\"983028\"},\"y_range\":{\"id\":\"983021\"},\"y_scale\":{\"id\":\"983030\"}},\"id\":\"983022\",\"subtype\":\"Figure\",\"type\":\"Plot\"},{\"attributes\":{\"axis_label\":\"Temperature in celsius\",\"formatter\":{\"id\":\"983063\"},\"major_label_orientation\":0.7853981633974483,\"major_label_policy\":{\"id\":\"983061\"},\"ticker\":{\"id\":\"983033\"}},\"id\":\"983032\",\"type\":\"CategoricalAxis\"},{\"attributes\":{\"label\":{\"value\":\"Copenhagen\"},\"renderers\":[{\"id\":\"983129\"}]},\"id\":\"983142\",\"type\":\"LegendItem\"}],\"root_ids\":[\"983243\"]},\"title\":\"Bokeh Application\",\"version\":\"2.3.2\"}};\n",
       "  var render_items = [{\"docid\":\"fd89c32b-c95f-4168-b291-60d4beedf1cc\",\"root_ids\":[\"983243\"],\"roots\":{\"983243\":\"8d56017b-2ca4-4a8f-8a36-4de985e5f670\"}}];\n",
       "  root.Bokeh.embed.embed_items_notebook(docs_json, render_items);\n",
       "\n",
       "  }\n",
       "  if (root.Bokeh !== undefined) {\n",
       "    embed_document(root);\n",
       "  } else {\n",
       "    var attempts = 0;\n",
       "    var timer = setInterval(function(root) {\n",
       "      if (root.Bokeh !== undefined) {\n",
       "        clearInterval(timer);\n",
       "        embed_document(root);\n",
       "      } else {\n",
       "        attempts++;\n",
       "        if (attempts > 100) {\n",
       "          clearInterval(timer);\n",
       "          console.log(\"Bokeh: ERROR: Unable to run BokehJS code because BokehJS library is missing\");\n",
       "        }\n",
       "      }\n",
       "    }, 10, root)\n",
       "  }\n",
       "})(window);"
      ],
      "application/vnd.bokehjs_exec.v0+json": ""
     },
     "metadata": {
      "application/vnd.bokehjs_exec.v0+json": {
       "id": "983243"
      }
     },
     "output_type": "display_data"
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "WARNING:bokeh.core.validation.check:W-1005 (FIXED_SIZING_MODE): 'fixed' sizing mode requires width and height to be set: Column(id='983235', ...)\n",
      "WARNING:bokeh.core.validation.check:W-1005 (FIXED_SIZING_MODE): 'fixed' sizing mode requires width and height to be set: Column(id='983237', ...)\n",
      "WARNING:bokeh.core.validation.check:W-1005 (FIXED_SIZING_MODE): 'fixed' sizing mode requires width and height to be set: Column(id='983239', ...)\n",
      "WARNING:bokeh.core.validation.check:W-1005 (FIXED_SIZING_MODE): 'fixed' sizing mode requires width and height to be set: Row(id='983234', ...)\n",
      "WARNING:bokeh.core.validation.check:W-1005 (FIXED_SIZING_MODE): 'fixed' sizing mode requires width and height to be set: Row(id='983236', ...)\n",
      "WARNING:bokeh.core.validation.check:W-1005 (FIXED_SIZING_MODE): 'fixed' sizing mode requires width and height to be set: Row(id='983238', ...)\n"
     ]
    }
   ],
   "source": [
    "l1 = layout([[f1]], sizing_mode='fixed')\n",
    "l2 = layout([[f2]], sizing_mode='fixed')\n",
    "l3 = layout([[f3]],sizing_mode='fixed')\n",
    "\n",
    "tab1 = Panel(child=l1,title='Temperature')\n",
    "tab2 = Panel(child=l2,title='Wind')\n",
    "tab3 = Panel(child=l3,title='Humidity')\n",
    "tabs = Tabs(tabs=[ tab1, tab2, tab3 ])\n",
    "show(tabs)\n",
    "saveFigureToJson(tabs, \"./visualizations/vis5.json\")"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "3c8ec4aa",
   "metadata": {},
   "source": [
    "## Bicycle traffic variation based on temperature, wind\n",
    "We devided the temperature and wind data into ranges. We then computed the average bicycles counted for every specific temperature and wind ranges and stored into a matrix. From this matrix we created a heatmap that shows how the traffic increases/decreases based on weather conditions. A black square means the the bycicle traffic in those weather conditions is on average less than the average traffic recorded, while a fully red square means that the traffic is higher than normal on average in those circumstances."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 635,
   "id": "d5cde20a",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "176.45921128611946\n",
      "13.064231049070788\n"
     ]
    }
   ],
   "source": [
    "def blend(color, alpha, base=[0,0,255]):\n",
    "    out = [int(round((alpha * color[i]) + ((1 - alpha) * base[i]))) for i in range(3)]\n",
    "    return out\n",
    "\n",
    "def to_hex(color):\n",
    "    return ''.join([\"%02x\" % e for e in color])\n",
    "\n",
    "df['temp'] = df['temp'].fillna(method='ffill')\n",
    "df['wspd'] = df['wspd'].fillna(method='ffill')\n",
    "\n",
    "winds = np.arange(0, 60 + 1, 7)\n",
    "winds_ranges = [(winds[i], winds[i + 1]) for i in range(len(winds)-1)]\n",
    "temps = np.arange(-10, 32 + 1, 5)\n",
    "temps_ranges = [(temps[i], temps[i + 1]) for i in range(len(temps)-1)]\n",
    "\n",
    "width = len(winds_ranges)\n",
    "height = len(temps_ranges)\n",
    "x = np.array([x[0] for x in winds_ranges] * height)\n",
    "y = np.array([[y[0] for x in winds_ranges] for y in temps_ranges]).flatten() + 5/2\n",
    "\n",
    "heatmaps = []\n",
    "for city in cities:\n",
    "    colors = [to_hex(blend([255,0,0], x / (width * height))) for x in range(width * height)]\n",
    "    df_city = df[df['city'] == city]\n",
    "    df_bicycle = df_city[df_city['type'] == 'bicycle']\n",
    "\n",
    "    day_count_avg = df_bicycle.groupby(df_bicycle['time'].dt.date).mean()['count'].mean()\n",
    "    print(day_count_avg)\n",
    "    intensities = np.zeros((width, height))\n",
    "    not_enough_data = []\n",
    "\n",
    "    for yy,tr in enumerate(temps_ranges):\n",
    "        for xx,wr in enumerate(winds_ranges):\n",
    "            filtered_temp = df_bicycle[(df_bicycle['temp'] >= tr[0]) & (df_bicycle['temp'] <= tr[1])]\n",
    "            filtered_wind = filtered_temp[(filtered_temp['wspd'] >= wr[0]) & (filtered_temp['wspd'] <= wr[1])]    \n",
    "            count_mean_filtered = filtered_wind.groupby(filtered_wind['time'].dt.date).mean()['count'].mean()\n",
    "            intensity = count_mean_filtered / (2 * day_count_avg)\n",
    "            if math.isnan(intensity):\n",
    "                not_enough_data.append((xx, yy))\n",
    "                intensities[xx, yy] = 0.0\n",
    "            else:\n",
    "                intensities[xx, yy] = intensity\n",
    "\n",
    "    #min_i = np.min(intensities)\n",
    "    #max_i = np.max(intensities)\n",
    "    #intensities = (intensities - min_i) / (max_i - min_i)\n",
    "\n",
    "    for yy in range(height):\n",
    "        for xx in range(width):\n",
    "            colors[yy * width + xx] = to_hex(blend([255, 0,0], intensities[xx, yy]))\n",
    "    \n",
    "    for coord in not_enough_data:\n",
    "        colors[coord[1] * width + coord[0]] = to_hex(blend([255, 255,255], 1.0))\n",
    "    \n",
    "    hm = figure(title=\"Mean biking traffic based on temperature and wind speed\", plot_width=720, plot_height=400, y_range=(min(temps), max(temps)), toolbar_location=None)\n",
    "    hm.rect(x, y, width=7, height=5, fill_color=colors, line_color=\"white\")\n",
    "    hm.yaxis.axis_label = 'Temperature in celsius'\n",
    "    hm.xaxis.axis_label = 'Wind speed m/s'\n",
    "    heatmaps.append(hm)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 636,
   "id": "7f7c0f09",
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "WARNING:bokeh.core.validation.check:W-1005 (FIXED_SIZING_MODE): 'fixed' sizing mode requires width and height to be set: Column(id='1009470', ...)\n",
      "WARNING:bokeh.core.validation.check:W-1005 (FIXED_SIZING_MODE): 'fixed' sizing mode requires width and height to be set: Column(id='1009472', ...)\n",
      "WARNING:bokeh.core.validation.check:W-1005 (FIXED_SIZING_MODE): 'fixed' sizing mode requires width and height to be set: Row(id='1009469', ...)\n",
      "WARNING:bokeh.core.validation.check:W-1005 (FIXED_SIZING_MODE): 'fixed' sizing mode requires width and height to be set: Row(id='1009471', ...)\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "\n",
       "\n",
       "\n",
       "\n",
       "\n",
       "\n",
       "  <div class=\"bk-root\" id=\"72c35357-b2e0-481c-acd3-72904eb449fb\" data-root-id=\"1009475\"></div>\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "application/javascript": [
       "(function(root) {\n",
       "  function embed_document(root) {\n",
       "    \n",
       "  var docs_json = {\"53d95a8b-e471-4e02-9855-cecc042e49a1\":{\"defs\":[],\"roots\":{\"references\":[{\"attributes\":{\"tabs\":[{\"id\":\"1009473\"},{\"id\":\"1009474\"}]},\"id\":\"1009475\",\"type\":\"Tabs\"},{\"attributes\":{},\"id\":\"1015751\",\"type\":\"BasicTickFormatter\"},{\"attributes\":{\"data_source\":{\"id\":\"1009464\"},\"glyph\":{\"id\":\"1009465\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"1009466\"},\"view\":{\"id\":\"1009468\"}},\"id\":\"1009467\",\"type\":\"GlyphRenderer\"},{\"attributes\":{},\"id\":\"1009438\",\"type\":\"LinearScale\"},{\"attributes\":{\"child\":{\"id\":\"1009470\"},\"title\":\"Copenaghen\"},\"id\":\"1009473\",\"type\":\"Panel\"},{\"attributes\":{},\"id\":\"1015758\",\"type\":\"UnionRenderers\"},{\"attributes\":{},\"id\":\"1015743\",\"type\":\"AllLabels\"},{\"attributes\":{\"source\":{\"id\":\"1009426\"}},\"id\":\"1009430\",\"type\":\"CDSView\"},{\"attributes\":{},\"id\":\"1015754\",\"type\":\"BasicTickFormatter\"},{\"attributes\":{\"children\":[{\"id\":\"1009471\"}],\"sizing_mode\":\"fixed\"},\"id\":\"1009472\",\"type\":\"Column\"},{\"attributes\":{\"source\":{\"id\":\"1009464\"}},\"id\":\"1009468\",\"type\":\"CDSView\"},{\"attributes\":{\"data_source\":{\"id\":\"1009426\"},\"glyph\":{\"id\":\"1009427\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"1009428\"},\"view\":{\"id\":\"1009430\"}},\"id\":\"1009429\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"end\":30,\"start\":-10},\"id\":\"1009436\",\"type\":\"Range1d\"},{\"attributes\":{\"child\":{\"id\":\"1009472\"},\"title\":\"New-York\"},\"id\":\"1009474\",\"type\":\"Panel\"},{\"attributes\":{\"axis\":{\"id\":\"1009404\"},\"ticker\":null},\"id\":\"1009407\",\"type\":\"Grid\"},{\"attributes\":{\"axis_label\":\"Temperature in celsius\",\"formatter\":{\"id\":\"1015754\"},\"major_label_policy\":{\"id\":\"1015752\"},\"ticker\":{\"id\":\"1009447\"}},\"id\":\"1009446\",\"type\":\"LinearAxis\"},{\"attributes\":{},\"id\":\"1009454\",\"type\":\"ResetTool\"},{\"attributes\":{},\"id\":\"1015756\",\"type\":\"Selection\"},{\"attributes\":{},\"id\":\"1009400\",\"type\":\"LinearScale\"},{\"attributes\":{\"children\":[{\"id\":\"1009431\"}],\"sizing_mode\":\"fixed\"},\"id\":\"1009471\",\"type\":\"Row\"},{\"attributes\":{\"children\":[{\"id\":\"1009393\"}],\"sizing_mode\":\"fixed\"},\"id\":\"1009469\",\"type\":\"Row\"},{\"attributes\":{},\"id\":\"1009416\",\"type\":\"ResetTool\"},{\"attributes\":{},\"id\":\"1009396\",\"type\":\"DataRange1d\"},{\"attributes\":{\"axis_label\":\"Wind speed m/s\",\"formatter\":{\"id\":\"1015751\"},\"major_label_policy\":{\"id\":\"1015749\"},\"ticker\":{\"id\":\"1009443\"}},\"id\":\"1009442\",\"type\":\"LinearAxis\"},{\"attributes\":{\"data\":{\"fill_color\":[\"2500da\",\"2700d8\",\"2000df\",\"2500da\",\"1b00e4\",\"0f00f0\",\"1700e8\",\"680097\",\"4300bc\",\"3f00c0\",\"3500ca\",\"2100de\",\"2100de\",\"1b00e4\",\"1700e8\",\"2b00d4\",\"5c00a3\",\"5f00a0\",\"5000af\",\"3f00c0\",\"2b00d4\",\"3200cd\",\"3800c7\",\"1f00e0\",\"7b0084\",\"80007f\",\"71008e\",\"6b0094\",\"5100ae\",\"4d00b2\",\"6c0093\",\"2a00d5\",\"8c0073\",\"870078\",\"81007e\",\"95006a\",\"b4004b\",\"91006e\",\"6f0090\",\"3f00c0\",\"ae0051\",\"ad0052\",\"9d0062\",\"bc0043\",\"9b0064\",\"f4000b\",\"94006b\",\"2600d9\",\"c3003c\",\"9d0062\",\"a80057\",\"cd0032\",\"10f00-10\",\"7c0083\",\"d2002d\",\"ffffff\",\"10100-2\",\"c1003e\",\"bb0044\",\"9d0062\",\"a80057\",\"8e0071\",\"2400db\",\"ffffff\"],\"x\":[0,7,14,21,28,35,42,49,0,7,14,21,28,35,42,49,0,7,14,21,28,35,42,49,0,7,14,21,28,35,42,49,0,7,14,21,28,35,42,49,0,7,14,21,28,35,42,49,0,7,14,21,28,35,42,49,0,7,14,21,28,35,42,49],\"y\":{\"__ndarray__\":\"AAAAAAAAHsAAAAAAAAAewAAAAAAAAB7AAAAAAAAAHsAAAAAAAAAewAAAAAAAAB7AAAAAAAAAHsAAAAAAAAAewAAAAAAAAATAAAAAAAAABMAAAAAAAAAEwAAAAAAAAATAAAAAAAAABMAAAAAAAAAEwAAAAAAAAATAAAAAAAAABMAAAAAAAAAEQAAAAAAAAARAAAAAAAAABEAAAAAAAAAEQAAAAAAAAARAAAAAAAAABEAAAAAAAAAEQAAAAAAAAARAAAAAAAAAHkAAAAAAAAAeQAAAAAAAAB5AAAAAAAAAHkAAAAAAAAAeQAAAAAAAAB5AAAAAAAAAHkAAAAAAAAAeQAAAAAAAAClAAAAAAAAAKUAAAAAAAAApQAAAAAAAAClAAAAAAAAAKUAAAAAAAAApQAAAAAAAAClAAAAAAAAAKUAAAAAAAIAxQAAAAAAAgDFAAAAAAACAMUAAAAAAAIAxQAAAAAAAgDFAAAAAAACAMUAAAAAAAIAxQAAAAAAAgDFAAAAAAACANkAAAAAAAIA2QAAAAAAAgDZAAAAAAACANkAAAAAAAIA2QAAAAAAAgDZAAAAAAACANkAAAAAAAIA2QAAAAAAAgDtAAAAAAACAO0AAAAAAAIA7QAAAAAAAgDtAAAAAAACAO0AAAAAAAIA7QAAAAAAAgDtAAAAAAACAO0A=\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[64]}},\"selected\":{\"id\":\"1015759\"},\"selection_policy\":{\"id\":\"1015758\"}},\"id\":\"1009464\",\"type\":\"ColumnDataSource\"},{\"attributes\":{},\"id\":\"1015746\",\"type\":\"AllLabels\"},{\"attributes\":{\"children\":[{\"id\":\"1009469\"}],\"sizing_mode\":\"fixed\"},\"id\":\"1009470\",\"type\":\"Column\"},{\"attributes\":{},\"id\":\"1009440\",\"type\":\"LinearScale\"},{\"attributes\":{\"fill_color\":{\"field\":\"fill_color\"},\"height\":{\"value\":5},\"line_color\":{\"value\":\"white\"},\"width\":{\"value\":7},\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1009427\",\"type\":\"Rect\"},{\"attributes\":{},\"id\":\"1009415\",\"type\":\"SaveTool\"},{\"attributes\":{\"below\":[{\"id\":\"1009404\"}],\"center\":[{\"id\":\"1009407\"},{\"id\":\"1009411\"}],\"height\":400,\"left\":[{\"id\":\"1009408\"}],\"renderers\":[{\"id\":\"1009429\"}],\"sizing_mode\":\"fixed\",\"title\":{\"id\":\"1009394\"},\"toolbar\":{\"id\":\"1009419\"},\"toolbar_location\":null,\"width\":720,\"x_range\":{\"id\":\"1009396\"},\"x_scale\":{\"id\":\"1009400\"},\"y_range\":{\"id\":\"1009398\"},\"y_scale\":{\"id\":\"1009402\"}},\"id\":\"1009393\",\"subtype\":\"Figure\",\"type\":\"Plot\"},{\"attributes\":{},\"id\":\"1015748\",\"type\":\"BasicTickFormatter\"},{\"attributes\":{\"active_multi\":null,\"tools\":[{\"id\":\"1009412\"},{\"id\":\"1009413\"},{\"id\":\"1009414\"},{\"id\":\"1009415\"},{\"id\":\"1009416\"},{\"id\":\"1009417\"}]},\"id\":\"1009419\",\"type\":\"Toolbar\"},{\"attributes\":{\"fill_color\":{\"field\":\"fill_color\"},\"height\":{\"value\":5},\"line_color\":{\"value\":\"white\"},\"width\":{\"value\":7},\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1009465\",\"type\":\"Rect\"},{\"attributes\":{},\"id\":\"1009405\",\"type\":\"BasicTicker\"},{\"attributes\":{\"end\":30,\"start\":-10},\"id\":\"1009398\",\"type\":\"Range1d\"},{\"attributes\":{\"below\":[{\"id\":\"1009442\"}],\"center\":[{\"id\":\"1009445\"},{\"id\":\"1009449\"}],\"height\":400,\"left\":[{\"id\":\"1009446\"}],\"renderers\":[{\"id\":\"1009467\"}],\"sizing_mode\":\"fixed\",\"title\":{\"id\":\"1009432\"},\"toolbar\":{\"id\":\"1009457\"},\"toolbar_location\":null,\"width\":720,\"x_range\":{\"id\":\"1009434\"},\"x_scale\":{\"id\":\"1009438\"},\"y_range\":{\"id\":\"1009436\"},\"y_scale\":{\"id\":\"1009440\"}},\"id\":\"1009431\",\"subtype\":\"Figure\",\"type\":\"Plot\"},{\"attributes\":{\"text\":\"Mean biking traffic based on temperature and wind speed\"},\"id\":\"1009394\",\"type\":\"Title\"},{\"attributes\":{\"overlay\":{\"id\":\"1009418\"}},\"id\":\"1009414\",\"type\":\"BoxZoomTool\"},{\"attributes\":{\"axis_label\":\"Wind speed m/s\",\"formatter\":{\"id\":\"1015745\"},\"major_label_policy\":{\"id\":\"1015743\"},\"ticker\":{\"id\":\"1009405\"}},\"id\":\"1009404\",\"type\":\"LinearAxis\"},{\"attributes\":{},\"id\":\"1009413\",\"type\":\"WheelZoomTool\"},{\"attributes\":{},\"id\":\"1009451\",\"type\":\"WheelZoomTool\"},{\"attributes\":{},\"id\":\"1009402\",\"type\":\"LinearScale\"},{\"attributes\":{\"axis\":{\"id\":\"1009446\"},\"dimension\":1,\"ticker\":null},\"id\":\"1009449\",\"type\":\"Grid\"},{\"attributes\":{},\"id\":\"1009412\",\"type\":\"PanTool\"},{\"attributes\":{\"fill_alpha\":{\"value\":0.1},\"fill_color\":{\"field\":\"fill_color\"},\"height\":{\"value\":5},\"line_alpha\":{\"value\":0.1},\"line_color\":{\"value\":\"white\"},\"width\":{\"value\":7},\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1009466\",\"type\":\"Rect\"},{\"attributes\":{},\"id\":\"1009443\",\"type\":\"BasicTicker\"},{\"attributes\":{\"bottom_units\":\"screen\",\"fill_alpha\":0.5,\"fill_color\":\"lightgrey\",\"left_units\":\"screen\",\"level\":\"overlay\",\"line_alpha\":1.0,\"line_color\":\"black\",\"line_dash\":[4,4],\"line_width\":2,\"right_units\":\"screen\",\"syncable\":false,\"top_units\":\"screen\"},\"id\":\"1009456\",\"type\":\"BoxAnnotation\"},{\"attributes\":{\"data\":{\"fill_color\":[\"3c00c3\",\"3c00c3\",\"4a00b5\",\"4000bf\",\"4300bc\",\"1c00e3\",\"0d00f2\",\"ffffff\",\"5100ae\",\"5300ac\",\"5600a9\",\"61009e\",\"5f00a0\",\"660099\",\"6c0093\",\"8b0074\",\"5500aa\",\"5900a6\",\"5f00a0\",\"6e0091\",\"71008e\",\"6c0093\",\"62009d\",\"74008b\",\"6b0094\",\"680097\",\"760089\",\"760089\",\"870078\",\"81007e\",\"94006b\",\"64009b\",\"63009c\",\"660099\",\"7b0084\",\"8c0073\",\"960069\",\"a5005a\",\"95006a\",\"b90046\",\"83007c\",\"95006a\",\"a90056\",\"b4004b\",\"b80047\",\"be0041\",\"be0041\",\"ffffff\",\"b90046\",\"c1003e\",\"bc0043\",\"c80037\",\"c80037\",\"b80047\",\"ffffff\",\"ffffff\",\"d80027\",\"cb0034\",\"d70028\",\"d2002d\",\"b80047\",\"c2003d\",\"ffffff\",\"ffffff\"],\"x\":[0,7,14,21,28,35,42,49,0,7,14,21,28,35,42,49,0,7,14,21,28,35,42,49,0,7,14,21,28,35,42,49,0,7,14,21,28,35,42,49,0,7,14,21,28,35,42,49,0,7,14,21,28,35,42,49,0,7,14,21,28,35,42,49],\"y\":{\"__ndarray__\":\"AAAAAAAAHsAAAAAAAAAewAAAAAAAAB7AAAAAAAAAHsAAAAAAAAAewAAAAAAAAB7AAAAAAAAAHsAAAAAAAAAewAAAAAAAAATAAAAAAAAABMAAAAAAAAAEwAAAAAAAAATAAAAAAAAABMAAAAAAAAAEwAAAAAAAAATAAAAAAAAABMAAAAAAAAAEQAAAAAAAAARAAAAAAAAABEAAAAAAAAAEQAAAAAAAAARAAAAAAAAABEAAAAAAAAAEQAAAAAAAAARAAAAAAAAAHkAAAAAAAAAeQAAAAAAAAB5AAAAAAAAAHkAAAAAAAAAeQAAAAAAAAB5AAAAAAAAAHkAAAAAAAAAeQAAAAAAAAClAAAAAAAAAKUAAAAAAAAApQAAAAAAAAClAAAAAAAAAKUAAAAAAAAApQAAAAAAAAClAAAAAAAAAKUAAAAAAAIAxQAAAAAAAgDFAAAAAAACAMUAAAAAAAIAxQAAAAAAAgDFAAAAAAACAMUAAAAAAAIAxQAAAAAAAgDFAAAAAAACANkAAAAAAAIA2QAAAAAAAgDZAAAAAAACANkAAAAAAAIA2QAAAAAAAgDZAAAAAAACANkAAAAAAAIA2QAAAAAAAgDtAAAAAAACAO0AAAAAAAIA7QAAAAAAAgDtAAAAAAACAO0AAAAAAAIA7QAAAAAAAgDtAAAAAAACAO0A=\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[64]}},\"selected\":{\"id\":\"1015756\"},\"selection_policy\":{\"id\":\"1015755\"}},\"id\":\"1009426\",\"type\":\"ColumnDataSource\"},{\"attributes\":{},\"id\":\"1015752\",\"type\":\"AllLabels\"},{\"attributes\":{\"axis\":{\"id\":\"1009442\"},\"ticker\":null},\"id\":\"1009445\",\"type\":\"Grid\"},{\"attributes\":{},\"id\":\"1009455\",\"type\":\"HelpTool\"},{\"attributes\":{\"active_multi\":null,\"tools\":[{\"id\":\"1009450\"},{\"id\":\"1009451\"},{\"id\":\"1009452\"},{\"id\":\"1009453\"},{\"id\":\"1009454\"},{\"id\":\"1009455\"}]},\"id\":\"1009457\",\"type\":\"Toolbar\"},{\"attributes\":{\"fill_alpha\":{\"value\":0.1},\"fill_color\":{\"field\":\"fill_color\"},\"height\":{\"value\":5},\"line_alpha\":{\"value\":0.1},\"line_color\":{\"value\":\"white\"},\"width\":{\"value\":7},\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1009428\",\"type\":\"Rect\"},{\"attributes\":{},\"id\":\"1015745\",\"type\":\"BasicTickFormatter\"},{\"attributes\":{},\"id\":\"1015759\",\"type\":\"Selection\"},{\"attributes\":{},\"id\":\"1009453\",\"type\":\"SaveTool\"},{\"attributes\":{\"text\":\"Mean biking traffic based on temperature and wind speed\"},\"id\":\"1009432\",\"type\":\"Title\"},{\"attributes\":{\"axis\":{\"id\":\"1009408\"},\"dimension\":1,\"ticker\":null},\"id\":\"1009411\",\"type\":\"Grid\"},{\"attributes\":{\"bottom_units\":\"screen\",\"fill_alpha\":0.5,\"fill_color\":\"lightgrey\",\"left_units\":\"screen\",\"level\":\"overlay\",\"line_alpha\":1.0,\"line_color\":\"black\",\"line_dash\":[4,4],\"line_width\":2,\"right_units\":\"screen\",\"syncable\":false,\"top_units\":\"screen\"},\"id\":\"1009418\",\"type\":\"BoxAnnotation\"},{\"attributes\":{},\"id\":\"1009417\",\"type\":\"HelpTool\"},{\"attributes\":{},\"id\":\"1015749\",\"type\":\"AllLabels\"},{\"attributes\":{},\"id\":\"1009450\",\"type\":\"PanTool\"},{\"attributes\":{\"overlay\":{\"id\":\"1009456\"}},\"id\":\"1009452\",\"type\":\"BoxZoomTool\"},{\"attributes\":{},\"id\":\"1015755\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"axis_label\":\"Temperature in celsius\",\"formatter\":{\"id\":\"1015748\"},\"major_label_policy\":{\"id\":\"1015746\"},\"ticker\":{\"id\":\"1009409\"}},\"id\":\"1009408\",\"type\":\"LinearAxis\"},{\"attributes\":{},\"id\":\"1009409\",\"type\":\"BasicTicker\"},{\"attributes\":{},\"id\":\"1009447\",\"type\":\"BasicTicker\"},{\"attributes\":{},\"id\":\"1009434\",\"type\":\"DataRange1d\"}],\"root_ids\":[\"1009475\"]},\"title\":\"Bokeh Application\",\"version\":\"2.3.2\"}};\n",
       "  var render_items = [{\"docid\":\"53d95a8b-e471-4e02-9855-cecc042e49a1\",\"root_ids\":[\"1009475\"],\"roots\":{\"1009475\":\"72c35357-b2e0-481c-acd3-72904eb449fb\"}}];\n",
       "  root.Bokeh.embed.embed_items_notebook(docs_json, render_items);\n",
       "\n",
       "  }\n",
       "  if (root.Bokeh !== undefined) {\n",
       "    embed_document(root);\n",
       "  } else {\n",
       "    var attempts = 0;\n",
       "    var timer = setInterval(function(root) {\n",
       "      if (root.Bokeh !== undefined) {\n",
       "        clearInterval(timer);\n",
       "        embed_document(root);\n",
       "      } else {\n",
       "        attempts++;\n",
       "        if (attempts > 100) {\n",
       "          clearInterval(timer);\n",
       "          console.log(\"Bokeh: ERROR: Unable to run BokehJS code because BokehJS library is missing\");\n",
       "        }\n",
       "      }\n",
       "    }, 10, root)\n",
       "  }\n",
       "})(window);"
      ],
      "application/vnd.bokehjs_exec.v0+json": ""
     },
     "metadata": {
      "application/vnd.bokehjs_exec.v0+json": {
       "id": "1009475"
      }
     },
     "output_type": "display_data"
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "WARNING:bokeh.core.validation.check:W-1005 (FIXED_SIZING_MODE): 'fixed' sizing mode requires width and height to be set: Column(id='1009470', ...)\n",
      "WARNING:bokeh.core.validation.check:W-1005 (FIXED_SIZING_MODE): 'fixed' sizing mode requires width and height to be set: Column(id='1009472', ...)\n",
      "WARNING:bokeh.core.validation.check:W-1005 (FIXED_SIZING_MODE): 'fixed' sizing mode requires width and height to be set: Row(id='1009469', ...)\n",
      "WARNING:bokeh.core.validation.check:W-1005 (FIXED_SIZING_MODE): 'fixed' sizing mode requires width and height to be set: Row(id='1009471', ...)\n"
     ]
    }
   ],
   "source": [
    "l1 = layout([[heatmaps[0]]], sizing_mode='fixed')\n",
    "l2 = layout([[heatmaps[1]]], sizing_mode='fixed')\n",
    "#l3 = layout([[figures[2]]],sizing_mode='fixed')\n",
    "\n",
    "tab1 = Panel(child=l1,title='Copenaghen')\n",
    "tab2 = Panel(child=l2,title='New-York')\n",
    "#tab3 = Panel(child=l3,title=cities[2])\n",
    "#tabs = Tabs(tabs=[ tab1, tab2, tab3 ])\n",
    "tabs = Tabs(tabs=[ tab1, tab2 ])\n",
    "show(tabs)\n",
    "saveFigureToJson(tabs, \"./visualizations/vis6.json\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 633,
   "id": "403fec66",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "176.45921128611946\n",
      "13.064231049070788\n"
     ]
    }
   ],
   "source": [
    "def blend(color, alpha, base=[0,0,255]):\n",
    "    out = [int(round((alpha * color[i]) + ((1 - alpha) * base[i]))) for i in range(3)]\n",
    "    return out\n",
    "\n",
    "def to_hex(color):\n",
    "    return ''.join([\"%02x\" % e for e in color])\n",
    "\n",
    "df['temp'] = df['temp'].fillna(method='ffill')\n",
    "df['rhum'] = df['rhum'].fillna(method='ffill')\n",
    "\n",
    "rhum = np.arange(0, 100 + 1, 7)\n",
    "rhum_ranges = [(rhum[i], rhum[i + 1]) for i in range(len(rhum)-1)]\n",
    "temps = np.arange(-10, 32 + 1, 5)\n",
    "temps_ranges = [(temps[i], temps[i + 1]) for i in range(len(temps)-1)]\n",
    "\n",
    "width = len(rhum_ranges)\n",
    "height = len(temps_ranges)\n",
    "x = np.array([x[0] for x in rhum_ranges] * height)\n",
    "y = np.array([[y[0] for x in rhum_ranges] for y in temps_ranges]).flatten() + 5/2\n",
    "\n",
    "heatmaps = []\n",
    "for city in cities:\n",
    "    colors = [to_hex(blend([255,0,0], x / (width * height))) for x in range(width * height)]\n",
    "    df_city = df[df['city'] == city]\n",
    "    df_bicycle = df_city[df_city['type'] == 'bicycle']\n",
    "\n",
    "    day_count_avg = df_bicycle.groupby(df_bicycle['time'].dt.date).mean()['count'].mean()\n",
    "    print(day_count_avg)\n",
    "    intensities = np.zeros((width, height))\n",
    "    not_enough_data = []\n",
    "\n",
    "    for yy,tr in enumerate(temps_ranges):\n",
    "        for xx,wr in enumerate(rhum_ranges):\n",
    "            filtered_temp = df_bicycle[(df_bicycle['temp'] >= tr[0]) & (df_bicycle['temp'] <= tr[1])]\n",
    "            filtered_rhum = filtered_temp[(filtered_temp['rhum'] >= wr[0]) & (filtered_temp['rhum'] <= wr[1])]    \n",
    "            count_mean_filtered = filtered_rhum.groupby(filtered_rhum['time'].dt.date).mean()['count'].mean()\n",
    "            intensity = count_mean_filtered / (2 * day_count_avg)\n",
    "            if math.isnan(intensity):\n",
    "                not_enough_data.append((xx, yy))\n",
    "                intensities[xx, yy] = 0.0\n",
    "            else:\n",
    "                intensities[xx, yy] = intensity\n",
    "\n",
    "    #min_i = np.min(intensities)\n",
    "    #max_i = np.max(intensities)\n",
    "    #intensities = (intensities - min_i) / (max_i - min_i)\n",
    "\n",
    "    for yy in range(height):\n",
    "        for xx in range(width):\n",
    "            colors[yy * width + xx] = to_hex(blend([255, 0,0], intensities[xx, yy]))\n",
    "    \n",
    "    for coord in not_enough_data:\n",
    "        colors[coord[1] * width + coord[0]] = to_hex(blend([255, 255,255], 1.0))\n",
    "    \n",
    "    hm = figure(title=\"Mean biking traffic based on temperature and air humidity\", plot_width=720, plot_height=400, y_range=(min(temps), max(temps)), toolbar_location=None)\n",
    "    hm.rect(x, y, width=7, height=5, fill_color=colors, line_color=\"white\")\n",
    "    hm.yaxis.axis_label = 'Temperature in celsius'\n",
    "    hm.xaxis.axis_label = 'Air humidity %'\n",
    "    heatmaps.append(hm)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 634,
   "id": "66d7498c",
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "WARNING:bokeh.core.validation.check:W-1005 (FIXED_SIZING_MODE): 'fixed' sizing mode requires width and height to be set: Column(id='1002922', ...)\n",
      "WARNING:bokeh.core.validation.check:W-1005 (FIXED_SIZING_MODE): 'fixed' sizing mode requires width and height to be set: Column(id='1002924', ...)\n",
      "WARNING:bokeh.core.validation.check:W-1005 (FIXED_SIZING_MODE): 'fixed' sizing mode requires width and height to be set: Row(id='1002921', ...)\n",
      "WARNING:bokeh.core.validation.check:W-1005 (FIXED_SIZING_MODE): 'fixed' sizing mode requires width and height to be set: Row(id='1002923', ...)\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "\n",
       "\n",
       "\n",
       "\n",
       "\n",
       "\n",
       "  <div class=\"bk-root\" id=\"9e36a05c-498c-460a-93f9-b24e6cb7fdbf\" data-root-id=\"1002927\"></div>\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "application/javascript": [
       "(function(root) {\n",
       "  function embed_document(root) {\n",
       "    \n",
       "  var docs_json = {\"92e92d85-562d-44af-b312-41759a66eaa8\":{\"defs\":[],\"roots\":{\"references\":[{\"attributes\":{\"tabs\":[{\"id\":\"1002925\"},{\"id\":\"1002926\"}]},\"id\":\"1002927\",\"type\":\"Tabs\"},{\"attributes\":{\"axis\":{\"id\":\"1002894\"},\"ticker\":null},\"id\":\"1002897\",\"type\":\"Grid\"},{\"attributes\":{},\"id\":\"1002867\",\"type\":\"SaveTool\"},{\"attributes\":{},\"id\":\"1002902\",\"type\":\"PanTool\"},{\"attributes\":{\"fill_color\":{\"field\":\"fill_color\"},\"height\":{\"value\":5},\"line_color\":{\"value\":\"white\"},\"width\":{\"value\":7},\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1002879\",\"type\":\"Rect\"},{\"attributes\":{\"active_multi\":null,\"tools\":[{\"id\":\"1002902\"},{\"id\":\"1002903\"},{\"id\":\"1002904\"},{\"id\":\"1002905\"},{\"id\":\"1002906\"},{\"id\":\"1002907\"}]},\"id\":\"1002909\",\"type\":\"Toolbar\"},{\"attributes\":{},\"id\":\"1002899\",\"type\":\"BasicTicker\"},{\"attributes\":{},\"id\":\"1009188\",\"type\":\"Selection\"},{\"attributes\":{\"below\":[{\"id\":\"1002894\"}],\"center\":[{\"id\":\"1002897\"},{\"id\":\"1002901\"}],\"height\":400,\"left\":[{\"id\":\"1002898\"}],\"renderers\":[{\"id\":\"1002919\"}],\"sizing_mode\":\"fixed\",\"title\":{\"id\":\"1002884\"},\"toolbar\":{\"id\":\"1002909\"},\"toolbar_location\":null,\"width\":720,\"x_range\":{\"id\":\"1002886\"},\"x_scale\":{\"id\":\"1002890\"},\"y_range\":{\"id\":\"1002888\"},\"y_scale\":{\"id\":\"1002892\"}},\"id\":\"1002883\",\"subtype\":\"Figure\",\"type\":\"Plot\"},{\"attributes\":{\"data_source\":{\"id\":\"1002916\"},\"glyph\":{\"id\":\"1002917\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"1002918\"},\"view\":{\"id\":\"1002920\"}},\"id\":\"1002919\",\"type\":\"GlyphRenderer\"},{\"attributes\":{},\"id\":\"1009178\",\"type\":\"AllLabels\"},{\"attributes\":{\"bottom_units\":\"screen\",\"fill_alpha\":0.5,\"fill_color\":\"lightgrey\",\"left_units\":\"screen\",\"level\":\"overlay\",\"line_alpha\":1.0,\"line_color\":\"black\",\"line_dash\":[4,4],\"line_width\":2,\"right_units\":\"screen\",\"syncable\":false,\"top_units\":\"screen\"},\"id\":\"1002908\",\"type\":\"BoxAnnotation\"},{\"attributes\":{\"text\":\"Mean biking traffic based on temperature and air humidity\"},\"id\":\"1002846\",\"type\":\"Title\"},{\"attributes\":{\"active_multi\":null,\"tools\":[{\"id\":\"1002864\"},{\"id\":\"1002865\"},{\"id\":\"1002866\"},{\"id\":\"1002867\"},{\"id\":\"1002868\"},{\"id\":\"1002869\"}]},\"id\":\"1002871\",\"type\":\"Toolbar\"},{\"attributes\":{\"source\":{\"id\":\"1002878\"}},\"id\":\"1002882\",\"type\":\"CDSView\"},{\"attributes\":{},\"id\":\"1002907\",\"type\":\"HelpTool\"},{\"attributes\":{\"fill_color\":{\"field\":\"fill_color\"},\"height\":{\"value\":5},\"line_color\":{\"value\":\"white\"},\"width\":{\"value\":7},\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1002917\",\"type\":\"Rect\"},{\"attributes\":{},\"id\":\"1002906\",\"type\":\"ResetTool\"},{\"attributes\":{},\"id\":\"1002854\",\"type\":\"LinearScale\"},{\"attributes\":{},\"id\":\"1009187\",\"type\":\"UnionRenderers\"},{\"attributes\":{},\"id\":\"1002886\",\"type\":\"DataRange1d\"},{\"attributes\":{},\"id\":\"1002865\",\"type\":\"WheelZoomTool\"},{\"attributes\":{},\"id\":\"1002905\",\"type\":\"SaveTool\"},{\"attributes\":{\"axis\":{\"id\":\"1002856\"},\"ticker\":null},\"id\":\"1002859\",\"type\":\"Grid\"},{\"attributes\":{},\"id\":\"1002868\",\"type\":\"ResetTool\"},{\"attributes\":{},\"id\":\"1002852\",\"type\":\"LinearScale\"},{\"attributes\":{},\"id\":\"1002861\",\"type\":\"BasicTicker\"},{\"attributes\":{\"text\":\"Mean biking traffic based on temperature and air humidity\"},\"id\":\"1002884\",\"type\":\"Title\"},{\"attributes\":{\"axis_label\":\"Air humidity %\",\"formatter\":{\"id\":\"1009177\"},\"major_label_policy\":{\"id\":\"1009175\"},\"ticker\":{\"id\":\"1002857\"}},\"id\":\"1002856\",\"type\":\"LinearAxis\"},{\"attributes\":{\"data_source\":{\"id\":\"1002878\"},\"glyph\":{\"id\":\"1002879\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"1002880\"},\"view\":{\"id\":\"1002882\"}},\"id\":\"1002881\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"overlay\":{\"id\":\"1002908\"}},\"id\":\"1002904\",\"type\":\"BoxZoomTool\"},{\"attributes\":{},\"id\":\"1009181\",\"type\":\"AllLabels\"},{\"attributes\":{\"source\":{\"id\":\"1002916\"}},\"id\":\"1002920\",\"type\":\"CDSView\"},{\"attributes\":{},\"id\":\"1002857\",\"type\":\"BasicTicker\"},{\"attributes\":{\"child\":{\"id\":\"1002922\"},\"title\":\"Copenaghen\"},\"id\":\"1002925\",\"type\":\"Panel\"},{\"attributes\":{},\"id\":\"1002848\",\"type\":\"DataRange1d\"},{\"attributes\":{\"end\":30,\"start\":-10},\"id\":\"1002850\",\"type\":\"Range1d\"},{\"attributes\":{},\"id\":\"1002895\",\"type\":\"BasicTicker\"},{\"attributes\":{},\"id\":\"1002869\",\"type\":\"HelpTool\"},{\"attributes\":{\"children\":[{\"id\":\"1002921\"}],\"sizing_mode\":\"fixed\"},\"id\":\"1002922\",\"type\":\"Column\"},{\"attributes\":{},\"id\":\"1009183\",\"type\":\"BasicTickFormatter\"},{\"attributes\":{\"data\":{\"fill_color\":[\"ffffff\",\"ffffff\",\"ffffff\",\"1500ea\",\"1c00e3\",\"2300dc\",\"2800d7\",\"2500da\",\"2200dd\",\"2200dd\",\"1600e9\",\"1a00e5\",\"0e00f1\",\"0b00f4\",\"ffffff\",\"ffffff\",\"ffffff\",\"2700d8\",\"2f00d0\",\"2200dd\",\"2800d7\",\"2300dc\",\"2e00d1\",\"4500ba\",\"5200ad\",\"3f00c0\",\"1300ec\",\"1400eb\",\"ffffff\",\"ffffff\",\"14700-48\",\"5000af\",\"3500ca\",\"4400bb\",\"4700b8\",\"4900b6\",\"4600b9\",\"5600a9\",\"60009f\",\"690096\",\"3700c8\",\"2800d7\",\"ffffff\",\"ffffff\",\"2500da\",\"4400bb\",\"790086\",\"7d0082\",\"7e0081\",\"7b0084\",\"690096\",\"72008d\",\"83007c\",\"71008e\",\"5b00a4\",\"6f0090\",\"ffffff\",\"6f0090\",\"3d00c2\",\"5c00a3\",\"6e0091\",\"92006d\",\"9a0065\",\"8c0073\",\"990066\",\"880077\",\"a4005b\",\"970068\",\"6f0090\",\"5c00a3\",\"ffffff\",\"a0005f\",\"960069\",\"b0004f\",\"d2002d\",\"cf0030\",\"ab0054\",\"970068\",\"a90056\",\"bf0040\",\"ac0053\",\"b90046\",\"94006b\",\"6a0095\",\"ffffff\",\"ffffff\",\"14800-49\",\"d2002d\",\"e5001a\",\"fa0005\",\"d5002a\",\"be0041\",\"a60059\",\"a2005d\",\"8b0074\",\"7b0084\",\"760089\",\"670098\",\"ffffff\",\"ffffff\",\"e80017\",\"10c00-d\",\"12400-25\",\"11100-12\",\"ef0010\",\"cc0033\",\"9a0065\",\"81007e\",\"680097\",\"5300ac\",\"4200bd\",\"4700b8\"],\"x\":[0,7,14,21,28,35,42,49,56,63,70,77,84,91,0,7,14,21,28,35,42,49,56,63,70,77,84,91,0,7,14,21,28,35,42,49,56,63,70,77,84,91,0,7,14,21,28,35,42,49,56,63,70,77,84,91,0,7,14,21,28,35,42,49,56,63,70,77,84,91,0,7,14,21,28,35,42,49,56,63,70,77,84,91,0,7,14,21,28,35,42,49,56,63,70,77,84,91,0,7,14,21,28,35,42,49,56,63,70,77,84,91],\"y\":{\"__ndarray__\":\"AAAAAAAAHsAAAAAAAAAewAAAAAAAAB7AAAAAAAAAHsAAAAAAAAAewAAAAAAAAB7AAAAAAAAAHsAAAAAAAAAewAAAAAAAAB7AAAAAAAAAHsAAAAAAAAAewAAAAAAAAB7AAAAAAAAAHsAAAAAAAAAewAAAAAAAAATAAAAAAAAABMAAAAAAAAAEwAAAAAAAAATAAAAAAAAABMAAAAAAAAAEwAAAAAAAAATAAAAAAAAABMAAAAAAAAAEwAAAAAAAAATAAAAAAAAABMAAAAAAAAAEwAAAAAAAAATAAAAAAAAABMAAAAAAAAAEQAAAAAAAAARAAAAAAAAABEAAAAAAAAAEQAAAAAAAAARAAAAAAAAABEAAAAAAAAAEQAAAAAAAAARAAAAAAAAABEAAAAAAAAAEQAAAAAAAAARAAAAAAAAABEAAAAAAAAAEQAAAAAAAAARAAAAAAAAAHkAAAAAAAAAeQAAAAAAAAB5AAAAAAAAAHkAAAAAAAAAeQAAAAAAAAB5AAAAAAAAAHkAAAAAAAAAeQAAAAAAAAB5AAAAAAAAAHkAAAAAAAAAeQAAAAAAAAB5AAAAAAAAAHkAAAAAAAAAeQAAAAAAAAClAAAAAAAAAKUAAAAAAAAApQAAAAAAAAClAAAAAAAAAKUAAAAAAAAApQAAAAAAAAClAAAAAAAAAKUAAAAAAAAApQAAAAAAAAClAAAAAAAAAKUAAAAAAAAApQAAAAAAAAClAAAAAAAAAKUAAAAAAAIAxQAAAAAAAgDFAAAAAAACAMUAAAAAAAIAxQAAAAAAAgDFAAAAAAACAMUAAAAAAAIAxQAAAAAAAgDFAAAAAAACAMUAAAAAAAIAxQAAAAAAAgDFAAAAAAACAMUAAAAAAAIAxQAAAAAAAgDFAAAAAAACANkAAAAAAAIA2QAAAAAAAgDZAAAAAAACANkAAAAAAAIA2QAAAAAAAgDZAAAAAAACANkAAAAAAAIA2QAAAAAAAgDZAAAAAAACANkAAAAAAAIA2QAAAAAAAgDZAAAAAAACANkAAAAAAAIA2QAAAAAAAgDtAAAAAAACAO0AAAAAAAIA7QAAAAAAAgDtAAAAAAACAO0AAAAAAAIA7QAAAAAAAgDtAAAAAAACAO0AAAAAAAIA7QAAAAAAAgDtAAAAAAACAO0AAAAAAAIA7QAAAAAAAgDtAAAAAAACAO0A=\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[112]}},\"selected\":{\"id\":\"1009191\"},\"selection_policy\":{\"id\":\"1009190\"}},\"id\":\"1002916\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"axis\":{\"id\":\"1002860\"},\"dimension\":1,\"ticker\":null},\"id\":\"1002863\",\"type\":\"Grid\"},{\"attributes\":{},\"id\":\"1009177\",\"type\":\"BasicTickFormatter\"},{\"attributes\":{\"fill_alpha\":{\"value\":0.1},\"fill_color\":{\"field\":\"fill_color\"},\"height\":{\"value\":5},\"line_alpha\":{\"value\":0.1},\"line_color\":{\"value\":\"white\"},\"width\":{\"value\":7},\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1002880\",\"type\":\"Rect\"},{\"attributes\":{},\"id\":\"1009175\",\"type\":\"AllLabels\"},{\"attributes\":{\"children\":[{\"id\":\"1002923\"}],\"sizing_mode\":\"fixed\"},\"id\":\"1002924\",\"type\":\"Column\"},{\"attributes\":{},\"id\":\"1009190\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"end\":30,\"start\":-10},\"id\":\"1002888\",\"type\":\"Range1d\"},{\"attributes\":{\"below\":[{\"id\":\"1002856\"}],\"center\":[{\"id\":\"1002859\"},{\"id\":\"1002863\"}],\"height\":400,\"left\":[{\"id\":\"1002860\"}],\"renderers\":[{\"id\":\"1002881\"}],\"sizing_mode\":\"fixed\",\"title\":{\"id\":\"1002846\"},\"toolbar\":{\"id\":\"1002871\"},\"toolbar_location\":null,\"width\":720,\"x_range\":{\"id\":\"1002848\"},\"x_scale\":{\"id\":\"1002852\"},\"y_range\":{\"id\":\"1002850\"},\"y_scale\":{\"id\":\"1002854\"}},\"id\":\"1002845\",\"subtype\":\"Figure\",\"type\":\"Plot\"},{\"attributes\":{\"children\":[{\"id\":\"1002883\"}],\"sizing_mode\":\"fixed\"},\"id\":\"1002923\",\"type\":\"Row\"},{\"attributes\":{\"axis\":{\"id\":\"1002898\"},\"dimension\":1,\"ticker\":null},\"id\":\"1002901\",\"type\":\"Grid\"},{\"attributes\":{\"axis_label\":\"Air humidity %\",\"formatter\":{\"id\":\"1009183\"},\"major_label_policy\":{\"id\":\"1009181\"},\"ticker\":{\"id\":\"1002895\"}},\"id\":\"1002894\",\"type\":\"LinearAxis\"},{\"attributes\":{},\"id\":\"1009186\",\"type\":\"BasicTickFormatter\"},{\"attributes\":{\"axis_label\":\"Temperature in celsius\",\"formatter\":{\"id\":\"1009180\"},\"major_label_policy\":{\"id\":\"1009178\"},\"ticker\":{\"id\":\"1002861\"}},\"id\":\"1002860\",\"type\":\"LinearAxis\"},{\"attributes\":{},\"id\":\"1009184\",\"type\":\"AllLabels\"},{\"attributes\":{\"fill_alpha\":{\"value\":0.1},\"fill_color\":{\"field\":\"fill_color\"},\"height\":{\"value\":5},\"line_alpha\":{\"value\":0.1},\"line_color\":{\"value\":\"white\"},\"width\":{\"value\":7},\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1002918\",\"type\":\"Rect\"},{\"attributes\":{},\"id\":\"1009191\",\"type\":\"Selection\"},{\"attributes\":{\"axis_label\":\"Temperature in celsius\",\"formatter\":{\"id\":\"1009186\"},\"major_label_policy\":{\"id\":\"1009184\"},\"ticker\":{\"id\":\"1002899\"}},\"id\":\"1002898\",\"type\":\"LinearAxis\"},{\"attributes\":{\"child\":{\"id\":\"1002924\"},\"title\":\"New-York\"},\"id\":\"1002926\",\"type\":\"Panel\"},{\"attributes\":{\"children\":[{\"id\":\"1002845\"}],\"sizing_mode\":\"fixed\"},\"id\":\"1002921\",\"type\":\"Row\"},{\"attributes\":{},\"id\":\"1002892\",\"type\":\"LinearScale\"},{\"attributes\":{},\"id\":\"1002864\",\"type\":\"PanTool\"},{\"attributes\":{},\"id\":\"1009180\",\"type\":\"BasicTickFormatter\"},{\"attributes\":{\"overlay\":{\"id\":\"1002870\"}},\"id\":\"1002866\",\"type\":\"BoxZoomTool\"},{\"attributes\":{\"data\":{\"fill_color\":[\"ffffff\",\"ffffff\",\"ffffff\",\"ffffff\",\"ffffff\",\"ffffff\",\"ffffff\",\"790086\",\"7e0081\",\"5e00a1\",\"5000af\",\"4500ba\",\"3b00c4\",\"3d00c2\",\"3500ca\",\"ffffff\",\"ffffff\",\"ffffff\",\"2700d8\",\"4f00b0\",\"91006e\",\"94006b\",\"7a0085\",\"65009a\",\"5e00a1\",\"5d00a2\",\"5600a9\",\"5400ab\",\"0a00f5\",\"ffffff\",\"ffffff\",\"880077\",\"bf0040\",\"b70048\",\"9c0063\",\"9a0065\",\"880077\",\"7a0085\",\"6f0090\",\"6e0091\",\"65009a\",\"5700a8\",\"3b00c4\",\"ffffff\",\"ffffff\",\"8e0071\",\"b70048\",\"b5004a\",\"a90056\",\"a70058\",\"a1005e\",\"9a0065\",\"8d0072\",\"7d0082\",\"6a0095\",\"5a00a5\",\"5700a8\",\"ffffff\",\"b2004d\",\"d2002d\",\"fc0003\",\"e2001d\",\"cb0034\",\"c80037\",\"b80047\",\"a80057\",\"95006a\",\"75008a\",\"61009e\",\"4b00b4\",\"8d0072\",\"ffffff\",\"ffffff\",\"ffffff\",\"c90036\",\"f0000f\",\"de0021\",\"d5002a\",\"cf0030\",\"c2003d\",\"b0004f\",\"93006c\",\"75008a\",\"5e00a1\",\"b90046\",\"ffffff\",\"ffffff\",\"ffffff\",\"960069\",\"bf0040\",\"c90036\",\"ca0035\",\"d0002f\",\"c80037\",\"bd0042\",\"960069\",\"75008a\",\"5900a6\",\"ffffff\",\"ffffff\",\"ffffff\",\"ffffff\",\"db0024\",\"d3002c\",\"d1002e\",\"cf0030\",\"d2002d\",\"b0004f\",\"b60049\",\"ffffff\",\"ffffff\",\"ffffff\"],\"x\":[0,7,14,21,28,35,42,49,56,63,70,77,84,91,0,7,14,21,28,35,42,49,56,63,70,77,84,91,0,7,14,21,28,35,42,49,56,63,70,77,84,91,0,7,14,21,28,35,42,49,56,63,70,77,84,91,0,7,14,21,28,35,42,49,56,63,70,77,84,91,0,7,14,21,28,35,42,49,56,63,70,77,84,91,0,7,14,21,28,35,42,49,56,63,70,77,84,91,0,7,14,21,28,35,42,49,56,63,70,77,84,91],\"y\":{\"__ndarray__\":\"AAAAAAAAHsAAAAAAAAAewAAAAAAAAB7AAAAAAAAAHsAAAAAAAAAewAAAAAAAAB7AAAAAAAAAHsAAAAAAAAAewAAAAAAAAB7AAAAAAAAAHsAAAAAAAAAewAAAAAAAAB7AAAAAAAAAHsAAAAAAAAAewAAAAAAAAATAAAAAAAAABMAAAAAAAAAEwAAAAAAAAATAAAAAAAAABMAAAAAAAAAEwAAAAAAAAATAAAAAAAAABMAAAAAAAAAEwAAAAAAAAATAAAAAAAAABMAAAAAAAAAEwAAAAAAAAATAAAAAAAAABMAAAAAAAAAEQAAAAAAAAARAAAAAAAAABEAAAAAAAAAEQAAAAAAAAARAAAAAAAAABEAAAAAAAAAEQAAAAAAAAARAAAAAAAAABEAAAAAAAAAEQAAAAAAAAARAAAAAAAAABEAAAAAAAAAEQAAAAAAAAARAAAAAAAAAHkAAAAAAAAAeQAAAAAAAAB5AAAAAAAAAHkAAAAAAAAAeQAAAAAAAAB5AAAAAAAAAHkAAAAAAAAAeQAAAAAAAAB5AAAAAAAAAHkAAAAAAAAAeQAAAAAAAAB5AAAAAAAAAHkAAAAAAAAAeQAAAAAAAAClAAAAAAAAAKUAAAAAAAAApQAAAAAAAAClAAAAAAAAAKUAAAAAAAAApQAAAAAAAAClAAAAAAAAAKUAAAAAAAAApQAAAAAAAAClAAAAAAAAAKUAAAAAAAAApQAAAAAAAAClAAAAAAAAAKUAAAAAAAIAxQAAAAAAAgDFAAAAAAACAMUAAAAAAAIAxQAAAAAAAgDFAAAAAAACAMUAAAAAAAIAxQAAAAAAAgDFAAAAAAACAMUAAAAAAAIAxQAAAAAAAgDFAAAAAAACAMUAAAAAAAIAxQAAAAAAAgDFAAAAAAACANkAAAAAAAIA2QAAAAAAAgDZAAAAAAACANkAAAAAAAIA2QAAAAAAAgDZAAAAAAACANkAAAAAAAIA2QAAAAAAAgDZAAAAAAACANkAAAAAAAIA2QAAAAAAAgDZAAAAAAACANkAAAAAAAIA2QAAAAAAAgDtAAAAAAACAO0AAAAAAAIA7QAAAAAAAgDtAAAAAAACAO0AAAAAAAIA7QAAAAAAAgDtAAAAAAACAO0AAAAAAAIA7QAAAAAAAgDtAAAAAAACAO0AAAAAAAIA7QAAAAAAAgDtAAAAAAACAO0A=\",\"dtype\":\"float64\",\"order\":\"little\",\"shape\":[112]}},\"selected\":{\"id\":\"1009188\"},\"selection_policy\":{\"id\":\"1009187\"}},\"id\":\"1002878\",\"type\":\"ColumnDataSource\"},{\"attributes\":{},\"id\":\"1002903\",\"type\":\"WheelZoomTool\"},{\"attributes\":{\"bottom_units\":\"screen\",\"fill_alpha\":0.5,\"fill_color\":\"lightgrey\",\"left_units\":\"screen\",\"level\":\"overlay\",\"line_alpha\":1.0,\"line_color\":\"black\",\"line_dash\":[4,4],\"line_width\":2,\"right_units\":\"screen\",\"syncable\":false,\"top_units\":\"screen\"},\"id\":\"1002870\",\"type\":\"BoxAnnotation\"},{\"attributes\":{},\"id\":\"1002890\",\"type\":\"LinearScale\"}],\"root_ids\":[\"1002927\"]},\"title\":\"Bokeh Application\",\"version\":\"2.3.2\"}};\n",
       "  var render_items = [{\"docid\":\"92e92d85-562d-44af-b312-41759a66eaa8\",\"root_ids\":[\"1002927\"],\"roots\":{\"1002927\":\"9e36a05c-498c-460a-93f9-b24e6cb7fdbf\"}}];\n",
       "  root.Bokeh.embed.embed_items_notebook(docs_json, render_items);\n",
       "\n",
       "  }\n",
       "  if (root.Bokeh !== undefined) {\n",
       "    embed_document(root);\n",
       "  } else {\n",
       "    var attempts = 0;\n",
       "    var timer = setInterval(function(root) {\n",
       "      if (root.Bokeh !== undefined) {\n",
       "        clearInterval(timer);\n",
       "        embed_document(root);\n",
       "      } else {\n",
       "        attempts++;\n",
       "        if (attempts > 100) {\n",
       "          clearInterval(timer);\n",
       "          console.log(\"Bokeh: ERROR: Unable to run BokehJS code because BokehJS library is missing\");\n",
       "        }\n",
       "      }\n",
       "    }, 10, root)\n",
       "  }\n",
       "})(window);"
      ],
      "application/vnd.bokehjs_exec.v0+json": ""
     },
     "metadata": {
      "application/vnd.bokehjs_exec.v0+json": {
       "id": "1002927"
      }
     },
     "output_type": "display_data"
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "WARNING:bokeh.core.validation.check:W-1005 (FIXED_SIZING_MODE): 'fixed' sizing mode requires width and height to be set: Column(id='1002922', ...)\n",
      "WARNING:bokeh.core.validation.check:W-1005 (FIXED_SIZING_MODE): 'fixed' sizing mode requires width and height to be set: Column(id='1002924', ...)\n",
      "WARNING:bokeh.core.validation.check:W-1005 (FIXED_SIZING_MODE): 'fixed' sizing mode requires width and height to be set: Row(id='1002921', ...)\n",
      "WARNING:bokeh.core.validation.check:W-1005 (FIXED_SIZING_MODE): 'fixed' sizing mode requires width and height to be set: Row(id='1002923', ...)\n"
     ]
    }
   ],
   "source": [
    "l1 = layout([[heatmaps[0]]], sizing_mode='fixed')\n",
    "l2 = layout([[heatmaps[1]]], sizing_mode='fixed')\n",
    "#l3 = layout([[figures[2]]],sizing_mode='fixed')\n",
    "\n",
    "tab1 = Panel(child=l1,title='Copenaghen')\n",
    "tab2 = Panel(child=l2,title='New-York')\n",
    "#tab3 = Panel(child=l3,title=cities[2])\n",
    "#tabs = Tabs(tabs=[ tab1, tab2, tab3 ])\n",
    "tabs = Tabs(tabs=[ tab1, tab2 ])\n",
    "show(tabs)\n",
    "saveFigureToJson(tabs, \"./visualizations/vis7.json\")"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "ec1667d9",
   "metadata": {},
   "source": [
    "## Visualizing bicycles counting machines locations in copenaghen\n",
    "We plotted the location of each machine that counts the bicycles passing by and weighted the radius of each dot based on the total amount of bicycles counted there."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 630,
   "id": "9748c236",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div style=\"width:100%;\"><div style=\"position:relative;width:100%;height:0;padding-bottom:60%;\"><span style=\"color:#565656\">Make this Notebook Trusted to load map: File -> Trust Notebook</span><iframe src=\"about:blank\" style=\"position:absolute;width:100%;height:100%;left:0;top:0;border:none !important;\" data-html=%3C%21DOCTYPE%20html%3E%0A%3Chead%3E%20%20%20%20%0A%20%20%20%20%3Cmeta%20http-equiv%3D%22content-type%22%20content%3D%22text/html%3B%20charset%3DUTF-8%22%20/%3E%0A%20%20%20%20%0A%20%20%20%20%20%20%20%20%3Cscript%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20L_NO_TOUCH%20%3D%20false%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20L_DISABLE_3D%20%3D%20false%3B%0A%20%20%20%20%20%20%20%20%3C/script%3E%0A%20%20%20%20%0A%20%20%20%20%3Cstyle%3Ehtml%2C%20body%20%7Bwidth%3A%20100%25%3Bheight%3A%20100%25%3Bmargin%3A%200%3Bpadding%3A%200%3B%7D%3C/style%3E%0A%20%20%20%20%3Cstyle%3E%23map%20%7Bposition%3Aabsolute%3Btop%3A0%3Bbottom%3A0%3Bright%3A0%3Bleft%3A0%3B%7D%3C/style%3E%0A%20%20%20%20%3Cscript%20src%3D%22https%3A//cdn.jsdelivr.net/npm/leaflet%401.6.0/dist/leaflet.js%22%3E%3C/script%3E%0A%20%20%20%20%3Cscript%20src%3D%22https%3A//code.jquery.com/jquery-1.12.4.min.js%22%3E%3C/script%3E%0A%20%20%20%20%3Cscript%20src%3D%22https%3A//maxcdn.bootstrapcdn.com/bootstrap/3.2.0/js/bootstrap.min.js%22%3E%3C/script%3E%0A%20%20%20%20%3Cscript%20src%3D%22https%3A//cdnjs.cloudflare.com/ajax/libs/Leaflet.awesome-markers/2.0.2/leaflet.awesome-markers.js%22%3E%3C/script%3E%0A%20%20%20%20%3Clink%20rel%3D%22stylesheet%22%20href%3D%22https%3A//cdn.jsdelivr.net/npm/leaflet%401.6.0/dist/leaflet.css%22/%3E%0A%20%20%20%20%3Clink%20rel%3D%22stylesheet%22%20href%3D%22https%3A//maxcdn.bootstrapcdn.com/bootstrap/3.2.0/css/bootstrap.min.css%22/%3E%0A%20%20%20%20%3Clink%20rel%3D%22stylesheet%22%20href%3D%22https%3A//maxcdn.bootstrapcdn.com/bootstrap/3.2.0/css/bootstrap-theme.min.css%22/%3E%0A%20%20%20%20%3Clink%20rel%3D%22stylesheet%22%20href%3D%22https%3A//maxcdn.bootstrapcdn.com/font-awesome/4.6.3/css/font-awesome.min.css%22/%3E%0A%20%20%20%20%3Clink%20rel%3D%22stylesheet%22%20href%3D%22https%3A//cdnjs.cloudflare.com/ajax/libs/Leaflet.awesome-markers/2.0.2/leaflet.awesome-markers.css%22/%3E%0A%20%20%20%20%3Clink%20rel%3D%22stylesheet%22%20href%3D%22https%3A//cdn.jsdelivr.net/gh/python-visualization/folium/folium/templates/leaflet.awesome.rotate.min.css%22/%3E%0A%20%20%20%20%0A%20%20%20%20%20%20%20%20%20%20%20%20%3Cmeta%20name%3D%22viewport%22%20content%3D%22width%3Ddevice-width%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20initial-scale%3D1.0%2C%20maximum-scale%3D1.0%2C%20user-scalable%3Dno%22%20/%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%3Cstyle%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%23map_4496640dbf954c85a34daa000ead82c7%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20position%3A%20relative%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20width%3A%20100.0%25%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20height%3A%20100.0%25%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20left%3A%200.0%25%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20top%3A%200.0%25%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20%20%20%20%20%3C/style%3E%0A%20%20%20%20%20%20%20%20%0A%3C/head%3E%0A%3Cbody%3E%20%20%20%20%0A%20%20%20%20%0A%20%20%20%20%20%20%20%20%20%20%20%20%3Cdiv%20class%3D%22folium-map%22%20id%3D%22map_4496640dbf954c85a34daa000ead82c7%22%20%3E%3C/div%3E%0A%20%20%20%20%20%20%20%20%0A%3C/body%3E%0A%3Cscript%3E%20%20%20%20%0A%20%20%20%20%0A%20%20%20%20%20%20%20%20%20%20%20%20var%20map_4496640dbf954c85a34daa000ead82c7%20%3D%20L.map%28%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%22map_4496640dbf954c85a34daa000ead82c7%22%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20center%3A%20%5B55.676098%2C%2012.568337%5D%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20crs%3A%20L.CRS.EPSG3857%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20zoom%3A%2012%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20zoomControl%3A%20true%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20preferCanvas%3A%20false%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20%20%20%20%20%29%3B%0A%0A%20%20%20%20%20%20%20%20%20%20%20%20%0A%0A%20%20%20%20%20%20%20%20%0A%20%20%20%20%0A%20%20%20%20%20%20%20%20%20%20%20%20var%20tile_layer_a8bcff7c4eae4509a13c96f7c5b9b8ea%20%3D%20L.tileLayer%28%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%22https%3A//%7Bs%7D.tile.openstreetmap.org/%7Bz%7D/%7Bx%7D/%7By%7D.png%22%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7B%22attribution%22%3A%20%22Data%20by%20%5Cu0026copy%3B%20%5Cu003ca%20href%3D%5C%22http%3A//openstreetmap.org%5C%22%5Cu003eOpenStreetMap%5Cu003c/a%5Cu003e%2C%20under%20%5Cu003ca%20href%3D%5C%22http%3A//www.openstreetmap.org/copyright%5C%22%5Cu003eODbL%5Cu003c/a%5Cu003e.%22%2C%20%22detectRetina%22%3A%20false%2C%20%22maxNativeZoom%22%3A%2018%2C%20%22maxZoom%22%3A%2018%2C%20%22minZoom%22%3A%200%2C%20%22noWrap%22%3A%20false%2C%20%22opacity%22%3A%201%2C%20%22subdomains%22%3A%20%22abc%22%2C%20%22tms%22%3A%20false%7D%0A%20%20%20%20%20%20%20%20%20%20%20%20%29.addTo%28map_4496640dbf954c85a34daa000ead82c7%29%3B%0A%20%20%20%20%20%20%20%20%0A%20%20%20%20%0A%20%20%20%20%20%20%20%20%20%20%20%20var%20circle_marker_065aaf0c2ce043a38ba1405203904c95%20%3D%20L.circleMarker%28%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%5B55.6864727596006%2C%2012.56440814789458%5D%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7B%22bubblingMouseEvents%22%3A%20true%2C%20%22color%22%3A%20%22%233388ff%22%2C%20%22dashArray%22%3A%20null%2C%20%22dashOffset%22%3A%20null%2C%20%22fill%22%3A%20false%2C%20%22fillColor%22%3A%20%22%233388ff%22%2C%20%22fillOpacity%22%3A%200.2%2C%20%22fillRule%22%3A%20%22evenodd%22%2C%20%22lineCap%22%3A%20%22round%22%2C%20%22lineJoin%22%3A%20%22round%22%2C%20%22opacity%22%3A%201.0%2C%20%22radius%22%3A%202%2C%20%22stroke%22%3A%20true%2C%20%22weight%22%3A%208.452978504750963%7D%0A%20%20%20%20%20%20%20%20%20%20%20%20%29.addTo%28map_4496640dbf954c85a34daa000ead82c7%29%3B%0A%20%20%20%20%20%20%20%20%0A%20%20%20%20%0A%20%20%20%20%20%20%20%20%20%20%20%20var%20circle_marker_71e0e322f22a42d28c8cb582a1e49b16%20%3D%20L.circleMarker%28%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%5B55.69228886666364%2C%2012.56879034165127%5D%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7B%22bubblingMouseEvents%22%3A%20true%2C%20%22color%22%3A%20%22%233388ff%22%2C%20%22dashArray%22%3A%20null%2C%20%22dashOffset%22%3A%20null%2C%20%22fill%22%3A%20false%2C%20%22fillColor%22%3A%20%22%233388ff%22%2C%20%22fillOpacity%22%3A%200.2%2C%20%22fillRule%22%3A%20%22evenodd%22%2C%20%22lineCap%22%3A%20%22round%22%2C%20%22lineJoin%22%3A%20%22round%22%2C%20%22opacity%22%3A%201.0%2C%20%22radius%22%3A%202%2C%20%22stroke%22%3A%20true%2C%20%22weight%22%3A%209.09608705187713%7D%0A%20%20%20%20%20%20%20%20%20%20%20%20%29.addTo%28map_4496640dbf954c85a34daa000ead82c7%29%3B%0A%20%20%20%20%20%20%20%20%0A%20%20%20%20%0A%20%20%20%20%20%20%20%20%20%20%20%20var%20circle_marker_d93af16e03434d89aec55c41f8cbb175%20%3D%20L.circleMarker%28%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%5B55.7017611558294%2C%2012.53355761641%5D%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7B%22bubblingMouseEvents%22%3A%20true%2C%20%22color%22%3A%20%22%233388ff%22%2C%20%22dashArray%22%3A%20null%2C%20%22dashOffset%22%3A%20null%2C%20%22fill%22%3A%20false%2C%20%22fillColor%22%3A%20%22%233388ff%22%2C%20%22fillOpacity%22%3A%200.2%2C%20%22fillRule%22%3A%20%22evenodd%22%2C%20%22lineCap%22%3A%20%22round%22%2C%20%22lineJoin%22%3A%20%22round%22%2C%20%22opacity%22%3A%201.0%2C%20%22radius%22%3A%202%2C%20%22stroke%22%3A%20true%2C%20%22weight%22%3A%2014.326648476296738%7D%0A%20%20%20%20%20%20%20%20%20%20%20%20%29.addTo%28map_4496640dbf954c85a34daa000ead82c7%29%3B%0A%20%20%20%20%20%20%20%20%0A%20%20%20%20%0A%20%20%20%20%20%20%20%20%20%20%20%20var%20circle_marker_13c80fea7a4442e0a9afd128b3e84389%20%3D%20L.circleMarker%28%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%5B55.67272624284615%2C%2012.478559258352576%5D%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7B%22bubblingMouseEvents%22%3A%20true%2C%20%22color%22%3A%20%22%233388ff%22%2C%20%22dashArray%22%3A%20null%2C%20%22dashOffset%22%3A%20null%2C%20%22fill%22%3A%20false%2C%20%22fillColor%22%3A%20%22%233388ff%22%2C%20%22fillOpacity%22%3A%200.2%2C%20%22fillRule%22%3A%20%22evenodd%22%2C%20%22lineCap%22%3A%20%22round%22%2C%20%22lineJoin%22%3A%20%22round%22%2C%20%22opacity%22%3A%201.0%2C%20%22radius%22%3A%202%2C%20%22stroke%22%3A%20true%2C%20%22weight%22%3A%206.37784789820038%7D%0A%20%20%20%20%20%20%20%20%20%20%20%20%29.addTo%28map_4496640dbf954c85a34daa000ead82c7%29%3B%0A%20%20%20%20%20%20%20%20%0A%20%20%20%20%0A%20%20%20%20%20%20%20%20%20%20%20%20var%20circle_marker_1462568c8d3747fa8b4ff2a50a9871f4%20%3D%20L.circleMarker%28%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%5B55.69366359076717%2C%2012.548061168794275%5D%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7B%22bubblingMouseEvents%22%3A%20true%2C%20%22color%22%3A%20%22%233388ff%22%2C%20%22dashArray%22%3A%20null%2C%20%22dashOffset%22%3A%20null%2C%20%22fill%22%3A%20false%2C%20%22fillColor%22%3A%20%22%233388ff%22%2C%20%22fillOpacity%22%3A%200.2%2C%20%22fillRule%22%3A%20%22evenodd%22%2C%20%22lineCap%22%3A%20%22round%22%2C%20%22lineJoin%22%3A%20%22round%22%2C%20%22opacity%22%3A%201.0%2C%20%22radius%22%3A%202%2C%20%22stroke%22%3A%20true%2C%20%22weight%22%3A%208.442569729647591%7D%0A%20%20%20%20%20%20%20%20%20%20%20%20%29.addTo%28map_4496640dbf954c85a34daa000ead82c7%29%3B%0A%20%20%20%20%20%20%20%20%0A%20%20%20%20%0A%20%20%20%20%20%20%20%20%20%20%20%20var%20circle_marker_573e5428ee1c4cdf8a200c11aaf5eb6c%20%3D%20L.circleMarker%28%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%5B55.67024751665121%2C%2012.59503780947455%5D%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7B%22bubblingMouseEvents%22%3A%20true%2C%20%22color%22%3A%20%22%233388ff%22%2C%20%22dashArray%22%3A%20null%2C%20%22dashOffset%22%3A%20null%2C%20%22fill%22%3A%20false%2C%20%22fillColor%22%3A%20%22%233388ff%22%2C%20%22fillOpacity%22%3A%200.2%2C%20%22fillRule%22%3A%20%22evenodd%22%2C%20%22lineCap%22%3A%20%22round%22%2C%20%22lineJoin%22%3A%20%22round%22%2C%20%22opacity%22%3A%201.0%2C%20%22radius%22%3A%202%2C%20%22stroke%22%3A%20true%2C%20%22weight%22%3A%2017.148361740715778%7D%0A%20%20%20%20%20%20%20%20%20%20%20%20%29.addTo%28map_4496640dbf954c85a34daa000ead82c7%29%3B%0A%20%20%20%20%20%20%20%20%0A%20%20%20%20%0A%20%20%20%20%20%20%20%20%20%20%20%20var%20circle_marker_9097247504a44796af7621b4bf1b77ae%20%3D%20L.circleMarker%28%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%5B55.71834863480781%2C%2012.539867537193642%5D%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7B%22bubblingMouseEvents%22%3A%20true%2C%20%22color%22%3A%20%22%233388ff%22%2C%20%22dashArray%22%3A%20null%2C%20%22dashOffset%22%3A%20null%2C%20%22fill%22%3A%20false%2C%20%22fillColor%22%3A%20%22%233388ff%22%2C%20%22fillOpacity%22%3A%200.2%2C%20%22fillRule%22%3A%20%22evenodd%22%2C%20%22lineCap%22%3A%20%22round%22%2C%20%22lineJoin%22%3A%20%22round%22%2C%20%22opacity%22%3A%201.0%2C%20%22radius%22%3A%202%2C%20%22stroke%22%3A%20true%2C%20%22weight%22%3A%206.90252091888936%7D%0A%20%20%20%20%20%20%20%20%20%20%20%20%29.addTo%28map_4496640dbf954c85a34daa000ead82c7%29%3B%0A%20%20%20%20%20%20%20%20%0A%20%20%20%20%0A%20%20%20%20%20%20%20%20%20%20%20%20var%20circle_marker_ce771fa43a7f49bdae27e511196a7d2a%20%3D%20L.circleMarker%28%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%5B55.68337535975952%2C%2012.555881940020344%5D%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7B%22bubblingMouseEvents%22%3A%20true%2C%20%22color%22%3A%20%22%233388ff%22%2C%20%22dashArray%22%3A%20null%2C%20%22dashOffset%22%3A%20null%2C%20%22fill%22%3A%20false%2C%20%22fillColor%22%3A%20%22%233388ff%22%2C%20%22fillOpacity%22%3A%200.2%2C%20%22fillRule%22%3A%20%22evenodd%22%2C%20%22lineCap%22%3A%20%22round%22%2C%20%22lineJoin%22%3A%20%22round%22%2C%20%22opacity%22%3A%201.0%2C%20%22radius%22%3A%202%2C%20%22stroke%22%3A%20true%2C%20%22weight%22%3A%2012.487670304602975%7D%0A%20%20%20%20%20%20%20%20%20%20%20%20%29.addTo%28map_4496640dbf954c85a34daa000ead82c7%29%3B%0A%20%20%20%20%20%20%20%20%0A%20%20%20%20%0A%20%20%20%20%20%20%20%20%20%20%20%20var%20circle_marker_b06d202be9ab481ba9b4606e946991f6%20%3D%20L.circleMarker%28%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%5B55.66768959779448%2C%2012.57087572521777%5D%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7B%22bubblingMouseEvents%22%3A%20true%2C%20%22color%22%3A%20%22%233388ff%22%2C%20%22dashArray%22%3A%20null%2C%20%22dashOffset%22%3A%20null%2C%20%22fill%22%3A%20false%2C%20%22fillColor%22%3A%20%22%233388ff%22%2C%20%22fillOpacity%22%3A%200.2%2C%20%22fillRule%22%3A%20%22evenodd%22%2C%20%22lineCap%22%3A%20%22round%22%2C%20%22lineJoin%22%3A%20%22round%22%2C%20%22opacity%22%3A%201.0%2C%20%22radius%22%3A%202%2C%20%22stroke%22%3A%20true%2C%20%22weight%22%3A%206.666043716875102%7D%0A%20%20%20%20%20%20%20%20%20%20%20%20%29.addTo%28map_4496640dbf954c85a34daa000ead82c7%29%3B%0A%20%20%20%20%20%20%20%20%0A%20%20%20%20%0A%20%20%20%20%20%20%20%20%20%20%20%20var%20circle_marker_7582f46964ca4636baf7bf12b899fb77%20%3D%20L.circleMarker%28%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%5B55.720197369662245%2C%2012.494825413791672%5D%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7B%22bubblingMouseEvents%22%3A%20true%2C%20%22color%22%3A%20%22%233388ff%22%2C%20%22dashArray%22%3A%20null%2C%20%22dashOffset%22%3A%20null%2C%20%22fill%22%3A%20false%2C%20%22fillColor%22%3A%20%22%233388ff%22%2C%20%22fillOpacity%22%3A%200.2%2C%20%22fillRule%22%3A%20%22evenodd%22%2C%20%22lineCap%22%3A%20%22round%22%2C%20%22lineJoin%22%3A%20%22round%22%2C%20%22opacity%22%3A%201.0%2C%20%22radius%22%3A%202%2C%20%22stroke%22%3A%20true%2C%20%22weight%22%3A%206.3343981828065505%7D%0A%20%20%20%20%20%20%20%20%20%20%20%20%29.addTo%28map_4496640dbf954c85a34daa000ead82c7%29%3B%0A%20%20%20%20%20%20%20%20%0A%20%20%20%20%0A%20%20%20%20%20%20%20%20%20%20%20%20var%20circle_marker_78fc225827ac4b9991cafe9d6931ad63%20%3D%20L.circleMarker%28%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%5B55.6383472434508%2C%2012.599838290169483%5D%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7B%22bubblingMouseEvents%22%3A%20true%2C%20%22color%22%3A%20%22%233388ff%22%2C%20%22dashArray%22%3A%20null%2C%20%22dashOffset%22%3A%20null%2C%20%22fill%22%3A%20false%2C%20%22fillColor%22%3A%20%22%233388ff%22%2C%20%22fillOpacity%22%3A%200.2%2C%20%22fillRule%22%3A%20%22evenodd%22%2C%20%22lineCap%22%3A%20%22round%22%2C%20%22lineJoin%22%3A%20%22round%22%2C%20%22opacity%22%3A%201.0%2C%20%22radius%22%3A%202%2C%20%22stroke%22%3A%20true%2C%20%22weight%22%3A%205.530765662396471%7D%0A%20%20%20%20%20%20%20%20%20%20%20%20%29.addTo%28map_4496640dbf954c85a34daa000ead82c7%29%3B%0A%20%20%20%20%20%20%20%20%0A%20%20%20%20%0A%20%20%20%20%20%20%20%20%20%20%20%20var%20circle_marker_fd84e56c5526484dac82fe6e3f29698c%20%3D%20L.circleMarker%28%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%5B55.66166495638953%2C%2012.51801037500735%5D%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7B%22bubblingMouseEvents%22%3A%20true%2C%20%22color%22%3A%20%22%233388ff%22%2C%20%22dashArray%22%3A%20null%2C%20%22dashOffset%22%3A%20null%2C%20%22fill%22%3A%20false%2C%20%22fillColor%22%3A%20%22%233388ff%22%2C%20%22fillOpacity%22%3A%200.2%2C%20%22fillRule%22%3A%20%22evenodd%22%2C%20%22lineCap%22%3A%20%22round%22%2C%20%22lineJoin%22%3A%20%22round%22%2C%20%22opacity%22%3A%201.0%2C%20%22radius%22%3A%202%2C%20%22stroke%22%3A%20true%2C%20%22weight%22%3A%206.999870919191264%7D%0A%20%20%20%20%20%20%20%20%20%20%20%20%29.addTo%28map_4496640dbf954c85a34daa000ead82c7%29%3B%0A%20%20%20%20%20%20%20%20%0A%20%20%20%20%0A%20%20%20%20%20%20%20%20%20%20%20%20var%20circle_marker_61c030bbf0074cc194e4e763ad583fcf%20%3D%20L.circleMarker%28%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%5B55.65052220345718%2C%2012.510872036858125%5D%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7B%22bubblingMouseEvents%22%3A%20true%2C%20%22color%22%3A%20%22%233388ff%22%2C%20%22dashArray%22%3A%20null%2C%20%22dashOffset%22%3A%20null%2C%20%22fill%22%3A%20false%2C%20%22fillColor%22%3A%20%22%233388ff%22%2C%20%22fillOpacity%22%3A%200.2%2C%20%22fillRule%22%3A%20%22evenodd%22%2C%20%22lineCap%22%3A%20%22round%22%2C%20%22lineJoin%22%3A%20%22round%22%2C%20%22opacity%22%3A%201.0%2C%20%22radius%22%3A%202%2C%20%22stroke%22%3A%20true%2C%20%22weight%22%3A%206.234236893749698%7D%0A%20%20%20%20%20%20%20%20%20%20%20%20%29.addTo%28map_4496640dbf954c85a34daa000ead82c7%29%3B%0A%20%20%20%20%20%20%20%20%0A%3C/script%3E onload=\"this.contentDocument.open();this.contentDocument.write(    decodeURIComponent(this.getAttribute('data-html')));this.contentDocument.close();\" allowfullscreen webkitallowfullscreen mozallowfullscreen></iframe></div></div>"
      ],
      "text/plain": [
       "<folium.folium.Map at 0x7fef9d192040>"
      ]
     },
     "execution_count": 630,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "map_cophenagen = folium.Map([55.676098, 12.568337], zoom_start=12)\n",
    "df_bycicle = df_cph[(df_cph['type'] == 'bicycle')]\n",
    "df_vehicle = df_cph[(df_cph['type'] == 'vehicle')]\n",
    "total_bycicle_count = df_bycicle['count'].sum()\n",
    "total_vehicle_count = df_vehicle['count'].sum()\n",
    "\n",
    "bycicle_counter_locs = df_bycicle[['longitude', 'latitude']].drop_duplicates()\n",
    "for index, row in bycicle_counter_locs.iterrows():\n",
    "    df_bycicle_atloc = df_bycicle[(df_bycicle['longitude'] == row['longitude']) & (df_bycicle['latitude'] == row['latitude'])]\n",
    "    location_count = df_bycicle_atloc['count'].fillna(0).to_numpy().sum()\n",
    "    weight = location_count / total_bycicle_count\n",
    "    lat = row['latitude']\n",
    "    long = row['longitude']\n",
    "    folium.CircleMarker(location=[lat, long], radius=2, weight=5 + weight * 50).add_to(map_cophenagen)\n",
    "\n",
    "#vehicle_counter_locs = df_vehicle[['longitude', 'latitude']].drop_duplicates()\n",
    "#for index, row in bycicle_counter_locs.iterrows():\n",
    "#    df_vehicle_atloc = df_vehicle[(df_vehicle['longitude'] == row['longitude']) & (df_vehicle['latitude'] == row['latitude'])]\n",
    "#    location_count = df_vehicle_atloc['count'].fillna(0).to_numpy().sum()\n",
    "#    weight = location_count / total_vehicle_count\n",
    "#    lat = row['latitude']\n",
    "#    long = row['longitude']\n",
    "#    folium.CircleMarker(location=[lat, long], color = 'red', radius=2, weight=5 + weight * 50).add_to(map_cophenagen)\n",
    "\n",
    "map_cophenagen.save(\"./visualizations/map1.html\")\n",
    "map_cophenagen"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.8"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
